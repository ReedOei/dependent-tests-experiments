org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r2 = <org.apache.ambari.server.orm.db.DDLTests: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Checking DDL for {}", r1)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Checking DDL for {}", r1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r3 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: org.apache.ambari.server.orm.db.DDL getDdl(java.lang.String)>(r1)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r3 = staticinvoke <org.apache.ambari.server.orm.db.DDLTestUtils: org.apache.ambari.server.orm.db.DDL getDdl(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.apache.ambari.server.orm.db.DDLTests: void printDDLMetrics(org.apache.ambari.server.orm.db.DDL)>(r3)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.apache.ambari.server.orm.db.DDLTests: void printDDLMetrics(org.apache.ambari.server.orm.db.DDL)>(r3) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r8 = r3.<org.apache.ambari.server.orm.db.DDL: java.util.List alterTables>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r8 = r3.<org.apache.ambari.server.orm.db.DDL: java.util.List alterTables> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i0 = interfaceinvoke $r8.<java.util.List: int size()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i0 = interfaceinvoke $r8.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $l1 = (long) $i0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("Expected count of alter tables mismatch. Please include all constraint definitions in the create table statement, only use alter table in exceptional cases, such as to work around a circular FK dependency. Would another such case occur, please document it in the DDL\'s and adjust the EXPECTED_ALTER_TABLE_COUNT in this test.", 1L, $l1)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertEquals(java.lang.String,long,long)>("Expected count of alter tables mismatch. Please include all constraint definitions in the create table statement, only use alter table in exceptional cases, such as to work around a circular FK dependency. Would another such case occur, please document it in the DDL\'s and adjust the EXPECTED_ALTER_TABLE_COUNT in this test.", 1L, $l1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.db.DDL: java.util.Set tableNames()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.db.DDL: java.util.Set tableNames()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r4 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r4 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z0 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r15 = r3.<org.apache.ambari.server.orm.db.DDL: java.util.Map tables>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r15 = r3.<org.apache.ambari.server.orm.db.DDL: java.util.Map tables> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z2 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r39 = r3.<org.apache.ambari.server.orm.db.DDL: java.util.Map tables>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r39 = r3.<org.apache.ambari.server.orm.db.DDL: java.util.Map tables> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r40 = interfaceinvoke $r39.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r40 = interfaceinvoke $r39.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r41 = interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r41 = interfaceinvoke $r40.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z7 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z7 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z7 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z7 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r42 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z7 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : return
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r42 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r43 = (org.apache.ambari.server.orm.db.Table) $r42
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r43 = (org.apache.ambari.server.orm.db.Table) $r42 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r44 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r44 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r44.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r44.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unnamed PK exists for table: ")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unnamed PK exists for table: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r46 = r43.<org.apache.ambari.server.orm.db.Table: java.lang.String name>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r46 = r43.<org.apache.ambari.server.orm.db.Table: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r49 = r43.<org.apache.ambari.server.orm.db.Table: java.lang.String name>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r49 = r43.<org.apache.ambari.server.orm.db.Table: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z8 = virtualinvoke $r49.<java.lang.String: boolean startsWith(java.lang.String)>("qrtz")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z8 = virtualinvoke $r49.<java.lang.String: boolean startsWith(java.lang.String)>("qrtz") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z8 != 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z8 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r50 = r43.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z8 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z11 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z11 = 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r48, $z11)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r48, $z11) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r55 = r43.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet foreignKeys>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r55 = r43.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet foreignKeys> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r56 = r43.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet uniqueConstraints>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r56 = r43.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet uniqueConstraints> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r57 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set)>($r55, $r56)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r57 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set)>($r55, $r56) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r58 = virtualinvoke $r57.<com.google.common.collect.Sets$SetView: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r58 = virtualinvoke $r57.<com.google.common.collect.Sets$SetView: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z12 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z12 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z12 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z12 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z12 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z7 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z7 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z7 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r60 = (org.apache.ambari.server.orm.db.Constraint) $r59
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r60 = (org.apache.ambari.server.orm.db.Constraint) $r59 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r61 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r61 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r61.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r61.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constraint name exceeds the 30 character limit: ")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constraint name exceeds the 30 character limit: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r60)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r60) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r65 = virtualinvoke r60.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r65 = virtualinvoke r60.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i5 = virtualinvoke $r65.<java.lang.String: int length()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i5 = virtualinvoke $r65.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i5 > 30
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i5 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z13 = 1
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i5 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z13 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z13 = 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r64, $z13)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r64, $z13) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z12 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z12 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z12 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z13 = 1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r64, $z13)]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r64, $z13)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r64, $z13)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r50 = r43.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z9 = virtualinvoke $r50.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z9 = virtualinvoke $r50.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z9 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z9 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r51 = r43.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z9 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z11 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r51 = r43.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r52 = virtualinvoke $r51.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r52 = virtualinvoke $r51.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r53 = (org.apache.ambari.server.orm.db.SimpleConstraint) $r52
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r53 = (org.apache.ambari.server.orm.db.SimpleConstraint) $r52 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r54 = virtualinvoke $r53.<org.apache.ambari.server.orm.db.SimpleConstraint: java.lang.String name()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r54 = virtualinvoke $r53.<org.apache.ambari.server.orm.db.SimpleConstraint: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z10 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>("<default>")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z10 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>("<default>") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z10 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z10 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z11 = 1
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z10 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z11 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z11 = 1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r48, $z11)]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r48, $z11)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>($r48, $z11)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r19 = (org.apache.ambari.server.orm.db.Table) $r18
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r19 = (org.apache.ambari.server.orm.db.Table) $r18 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r20 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PK name exceeds the 30 character limit: ")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PK name exceeds the 30 character limit: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r22 = r19.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r22 = r19.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r25 = r19.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r25 = r19.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z3 = virtualinvoke $r25.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z3 = virtualinvoke $r25.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z3 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z3 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r26 = r19.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z3 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z4 = 1
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z4 = 1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r24, $z4)]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r24, $z4)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r24, $z4)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r24, $z4) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r30 = r19.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet foreignKeys>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r30 = r19.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet foreignKeys> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r31 = r19.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet uniqueConstraints>
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r31 = r19.<org.apache.ambari.server.orm.db.Table: com.google.common.collect.ImmutableSet uniqueConstraints> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r32 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set)>($r30, $r31)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r32 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set)>($r30, $r31) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r6 = virtualinvoke $r32.<com.google.common.collect.Sets$SetView: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r6 = virtualinvoke $r32.<com.google.common.collect.Sets$SetView: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z5 == 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z5 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r33 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $z5 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r33 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r7 = (org.apache.ambari.server.orm.db.Constraint) $r33
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r7 = (org.apache.ambari.server.orm.db.Constraint) $r33 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r34 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r34 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constraint name exceeds the 30 character limit: ")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constraint name exceeds the 30 character limit: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r38 = virtualinvoke r7.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r38 = virtualinvoke r7.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i4 = virtualinvoke $r38.<java.lang.String: int length()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i4 = virtualinvoke $r38.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i4 > 30
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i4 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z6 = 1
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i4 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z6 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z6 = 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r37, $z6)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r37, $z6) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z6 = 1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r37, $z6)]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r37, $z6)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r37, $z6)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r26 = r19.<org.apache.ambari.server.orm.db.Table: com.google.common.base.Optional primaryKey> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r27 = virtualinvoke $r26.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r27 = virtualinvoke $r26.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r28 = (org.apache.ambari.server.orm.db.SimpleConstraint) $r27
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r28 = (org.apache.ambari.server.orm.db.SimpleConstraint) $r27 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r29 = virtualinvoke $r28.<org.apache.ambari.server.orm.db.SimpleConstraint: java.lang.String name()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r29 = virtualinvoke $r28.<org.apache.ambari.server.orm.db.SimpleConstraint: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i3 = virtualinvoke $r29.<java.lang.String: int length()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i3 = virtualinvoke $r29.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i3 > 30
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i3 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z4 = 1
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i3 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z4 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z4 = 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r24, $z4)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r5 = (java.lang.String) $r10
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : r5 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Table name exceeds the 30 character limit: ")
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Table name exceeds the 30 character limit: ") >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i2 = virtualinvoke r5.<java.lang.String: int length()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $i2 = virtualinvoke r5.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i2 > 30
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i2 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z1 = 1
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : if $i2 > 30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z1 = 0
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z1 = 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r14, $z1)
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r14, $z1) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r14, $z1)]
org.apache.ambari.server.orm.db.DDLTests.verifyDDL : goto [?= staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r14, $z1)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.verifyDDL : staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>($r14, $z1)
