org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : r2 = $r1
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : r2 = $r1 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $r5 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices>
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $r5 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List manifestServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : if $z0 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : return r2
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : r4 = (org.apache.ambari.server.state.repository.ManifestService) $r6
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : r4 = (org.apache.ambari.server.state.repository.ManifestService) $r6 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $r7 = r4.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceId>
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $r7 = r4.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceId> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r4)
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r4) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.buildManifest : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
