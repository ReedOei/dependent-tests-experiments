org.apache.ambari.server.topology.TopologyManager.replayRequests : $r2 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.replayRequests: Entering")
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.replayRequests: Entering") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : z0 = 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : z0 = 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r12 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r12 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r3 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : r3 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z1 == 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : return
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r4 = (java.util.Map$Entry) $r13
org.apache.ambari.server.topology.TopologyManager.replayRequests : r4 = (java.util.Map$Entry) $r13 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r14 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r14 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r5 = (org.apache.ambari.server.topology.ClusterTopology) $r14
org.apache.ambari.server.topology.TopologyManager.replayRequests : r5 = (org.apache.ambari.server.topology.ClusterTopology) $r14 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterTopologyMap>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterTopologyMap> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r16 = interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r16 = interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r5)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r5) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r18 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r18 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r19 = interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r19 = interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $l0 = virtualinvoke $r19.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $l0 = virtualinvoke $r19.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r6 = interfaceinvoke $r18.<org.apache.ambari.server.topology.PersistedState: org.apache.ambari.server.topology.LogicalRequest getProvisionRequest(long)>($l0)
org.apache.ambari.server.topology.TopologyManager.replayRequests : r6 = interfaceinvoke $r18.<org.apache.ambari.server.topology.PersistedState: org.apache.ambari.server.topology.LogicalRequest getProvisionRequest(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if r6 == null
org.apache.ambari.server.topology.TopologyManager.replayRequests : if r6 == null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r20 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterProvisionWithBlueprintCreateRequests>
org.apache.ambari.server.topology.TopologyManager.replayRequests : if r6 == null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r31 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r31 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r32 = (java.util.List) $r31
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r32 = (java.util.List) $r31 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r7 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : r7 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z3 == 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r33 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if z0 != 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : z0 = 1
org.apache.ambari.server.topology.TopologyManager.replayRequests : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : z0 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r63 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r63 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r64 = interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r64 = interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $l2 = virtualinvoke $r64.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $l2 = virtualinvoke $r64.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z9 = virtualinvoke $r63.<org.apache.ambari.server.topology.AmbariContext: boolean isTopologyResolved(long)>($l2)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z9 = virtualinvoke $r63.<org.apache.ambari.server.topology.AmbariContext: boolean isTopologyResolved(long)>($l2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z9 != 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z9 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r65 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z9 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r65 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r65.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.replayRequests: no config with TOPOLOGY_RESOLVED found, adding cluster config request")
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r65.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.replayRequests: no config with TOPOLOGY_RESOLVED found, adding cluster config request") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r66 = new org.apache.ambari.server.topology.ClusterConfigurationRequest
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r66 = new org.apache.ambari.server.topology.ClusterConfigurationRequest >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r67 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r67 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r68 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.api.services.stackadvisor.StackAdvisorBlueprintProcessor stackAdvisorBlueprintProcessor>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r68 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.api.services.stackadvisor.StackAdvisorBlueprintProcessor stackAdvisorBlueprintProcessor> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke $r66.<org.apache.ambari.server.topology.ClusterConfigurationRequest: void <init>(org.apache.ambari.server.topology.AmbariContext,org.apache.ambari.server.topology.ClusterTopology,boolean,org.apache.ambari.server.api.services.stackadvisor.StackAdvisorBlueprintProcessor)>($r67, r5, 0, $r68)
org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke $r66.<org.apache.ambari.server.topology.ClusterConfigurationRequest: void <init>(org.apache.ambari.server.topology.AmbariContext,org.apache.ambari.server.topology.ClusterTopology,boolean,org.apache.ambari.server.api.services.stackadvisor.StackAdvisorBlueprintProcessor)>($r67, r5, 0, $r68) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void addClusterConfigRequest(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.ClusterConfigurationRequest)>(r5, $r66)
org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void addClusterConfigRequest(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.ClusterConfigurationRequest)>(r5, $r66) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r33 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r8 = (org.apache.ambari.server.topology.LogicalRequest) $r33
org.apache.ambari.server.topology.TopologyManager.replayRequests : r8 = (org.apache.ambari.server.topology.LogicalRequest) $r33 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r34 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r34 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $l1 = virtualinvoke r8.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $l1 = virtualinvoke r8.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, r8)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, r8) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z4 = virtualinvoke r8.<org.apache.ambari.server.topology.LogicalRequest: boolean hasCompleted()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z4 = virtualinvoke r8.<org.apache.ambari.server.topology.LogicalRequest: boolean hasCompleted()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z4 != 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z4 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r37 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests>
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z4 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r37 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r37.<java.util.Collection: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r37.<java.util.Collection: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r38 = virtualinvoke r8.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getReservedHosts()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r38 = virtualinvoke r8.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getReservedHosts()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r9 = interfaceinvoke $r38.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : r9 = interfaceinvoke $r38.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z6 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z6 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z6 == 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r39 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r42 = virtualinvoke r8.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getCompletedHostRequests()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r42 = virtualinvoke r8.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getCompletedHostRequests()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r43 = interfaceinvoke $r42.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : r43 = interfaceinvoke $r42.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z7 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z7 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z7 == 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z7 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z7 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r45 = (org.apache.ambari.server.topology.HostRequest) $r44
org.apache.ambari.server.topology.TopologyManager.replayRequests : r45 = (org.apache.ambari.server.topology.HostRequest) $r44 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r49 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : r45 = (org.apache.ambari.server.topology.HostRequest) $r44 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r56 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : r45 = (org.apache.ambari.server.topology.HostRequest) $r44 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r11 = virtualinvoke r45.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : r11 = virtualinvoke r45.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r49 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : r11 = virtualinvoke r45.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r56 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : r11 = virtualinvoke r45.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r46 = virtualinvoke r45.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r46 = virtualinvoke r45.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r49 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r46 = virtualinvoke r45.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r56 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r46 = virtualinvoke r45.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: void addHostToTopology(java.lang.String,java.lang.String)>($r46, r11)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: void addHostToTopology(java.lang.String,java.lang.String)>($r46, r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r49 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: void addHostToTopology(java.lang.String,java.lang.String)>($r46, r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r56 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: void addHostToTopology(java.lang.String,java.lang.String)>($r46, r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r47 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection hostsToIgnore>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r47 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection hostsToIgnore> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r49 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r47 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection hostsToIgnore> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r56 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r47 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection hostsToIgnore> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r47.<java.util.Collection: boolean add(java.lang.Object)>(r11)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r47.<java.util.Collection: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r49 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r47.<java.util.Collection: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r56 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r47.<java.util.Collection: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r48 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r48 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r49 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r48 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r56 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r48 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r48.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.replayRequests: host name = {} has been added to cluster and to ignore list.", r11)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r48.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.replayRequests: host name = {} has been added to cluster and to ignore list.", r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r49 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r48.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.replayRequests: host name = {} has been added to cluster and to ignore list.", r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r56 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r48.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.replayRequests: host name = {} has been added to cluster and to ignore list.", r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z7 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z7 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z7 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : r57 = $r56 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r58 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r58 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r59 = new java.lang.StringBuilder
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r59 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke $r59.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke $r59.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to add host to topology while replaying requests: ")
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to add host to topology while replaying requests: ") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r57) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r58.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r62, r57)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r58.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r62, r57) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z7 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : r50 = $r49 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r51 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r51 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r52 = new java.lang.StringBuilder
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r52 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add host to multiple host groups while replaying requests: ")
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add host to multiple host groups while replaying requests: ") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r50)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r50) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r51.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r55, r50)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r51.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r55, r50) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z7 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r39 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r10 = (java.lang.String) $r39
org.apache.ambari.server.topology.TopologyManager.replayRequests : r10 = (java.lang.String) $r39 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r40 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r40 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r8)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r8) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z6 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z6 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z6 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r20 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterProvisionWithBlueprintCreateRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r21 = interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r21 = interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r6)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r6) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r23 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterProvisionWithBlueprintCreationFinished>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r23 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterProvisionWithBlueprintCreationFinished> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r24 = interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r24 = interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r25 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterProvisionWithBlueprintCreateRequests>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r25 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterProvisionWithBlueprintCreateRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r26 = interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r26 = interfaceinvoke r5.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r27 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r27 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r28 = (org.apache.ambari.server.topology.LogicalRequest) $r27
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r28 = (org.apache.ambari.server.topology.LogicalRequest) $r27 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z2 = specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: boolean isLogicalRequestFinished(org.apache.ambari.server.topology.LogicalRequest)>($r28)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z2 = specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: boolean isLogicalRequestFinished(org.apache.ambari.server.topology.LogicalRequest)>($r28) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r29)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r29) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r31 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()
