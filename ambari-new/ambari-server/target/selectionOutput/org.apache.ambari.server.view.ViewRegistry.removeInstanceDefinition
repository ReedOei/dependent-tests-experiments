org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : $r6 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewInstanceDefinitions> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : r3 = (java.util.Map) $r7
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : r3 = (java.util.Map) $r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : if r3 == null
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : if r3 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : if r3 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : return
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : $r8 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : r4 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r8
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : r4 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : if r4 == null
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : if r4 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.View getView()>()
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : if r4 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : return
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.View getView()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : if r5 == null
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : if r5 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : interfaceinvoke r5.<org.apache.ambari.view.View: void onDestroy(org.apache.ambari.view.ViewInstanceDefinition)>(r4)
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : if r5 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2)
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : return
org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : interfaceinvoke r5.<org.apache.ambari.view.View: void onDestroy(org.apache.ambari.view.ViewInstanceDefinition)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.removeInstanceDefinition : interfaceinvoke r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2)
