org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : r2 = $r1
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : r2 = $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("port", "9998")
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("port", "9998") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("db", "/var/db/hmc/data/data.db")
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("db", "/var/db/hmc/data/data.db") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : i0 = 0
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : i0 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $i1 = lengthof r0
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $i1 = lengthof r0 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : if i0 >= $i1
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : if i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : r3 = r0[i0]
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : if i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : return r2
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : r3 = r0[i0] >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-p")
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-p") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : if $z0 == 0
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $i2 = i0 + 1
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-d")
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("-d") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : if $z1 == 0
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $i3 = i0 + 1
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : staticinvoke <org.apache.ambari.server.controller.utilities.webserver.StartServer: void printUsage()>()
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : staticinvoke <org.apache.ambari.server.controller.utilities.webserver.StartServer: void printUsage()>() >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $r10 = new java.lang.RuntimeException
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $r10 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unexpected argument, See usage message.")
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unexpected argument, See usage message.") >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : throw $r10
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $r8 = r0[$i3]
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $r8 = r0[$i3] >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("db", $r8)
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("db", $r8) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : goto [?= i0 = i0 + 2]
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : goto [?= i0 = i0 + 2] >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : i0 = i0 + 2
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : i0 = i0 + 2 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : goto [?= $i1 = lengthof r0]
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : goto [?= $i1 = lengthof r0] >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $i1 = lengthof r0
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $r6 = r0[$i2]
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : $r6 = r0[$i2] >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("port", $r6)
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("port", $r6) >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : goto [?= i0 = i0 + 2]
org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : goto [?= i0 = i0 + 2] >>>>>>>> org.apache.ambari.server.controller.utilities.webserver.StartServer.parseArgs : i0 = i0 + 2
