org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r5 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r6 = interfaceinvoke $r5.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r6 = interfaceinvoke $r5.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z0 = 1
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r4 = $r20 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r21 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r4 = $r20 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r21 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r22 = interfaceinvoke $r21.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r22 = interfaceinvoke $r21.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r22.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r22.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : throw r4
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z0 = 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r7 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentSkipListMap services>
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z0 = 1 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r7 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentSkipListMap services> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r8 = virtualinvoke $r7.<java.util.concurrent.ConcurrentSkipListMap: java.util.Collection values()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r7 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.ConcurrentSkipListMap services> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r8 = virtualinvoke $r7.<java.util.concurrent.ConcurrentSkipListMap: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r1 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r8 = virtualinvoke $r7.<java.util.concurrent.ConcurrentSkipListMap: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r1 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r1 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z1 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z3 = z0
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z3 = z0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r18 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z3 = z0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r18 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 = interfaceinvoke $r18.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r19 = interfaceinvoke $r18.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock readLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r19.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r19.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : return z3
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r2 = (org.apache.ambari.server.state.Service) $r9
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r2 = (org.apache.ambari.server.state.Service) $r9 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z2 = interfaceinvoke r2.<org.apache.ambari.server.state.Service: boolean canBeRemoved()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : r2 = (org.apache.ambari.server.state.Service) $r9 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z2 = interfaceinvoke r2.<org.apache.ambari.server.state.Service: boolean canBeRemoved()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z2 != 0
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z2 = interfaceinvoke r2.<org.apache.ambari.server.state.Service: boolean canBeRemoved()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z0 = 0
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z0 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r10 = <org.apache.ambari.server.state.cluster.ClusterImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : z0 = 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r10 = <org.apache.ambari.server.state.cluster.ClusterImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r10 = <org.apache.ambari.server.state.cluster.ClusterImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found non removable service, clusterName=")
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found non removable service, clusterName=") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r12 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found non removable service, clusterName=") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r12 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r12 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=")
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r15 = interfaceinvoke r2.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r15 = interfaceinvoke r2.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r15 = interfaceinvoke r2.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>($r17)
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.canBeRemoved : $r20 := @caughtexception
