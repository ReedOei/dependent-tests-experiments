org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : $r2 = <org.apache.ambari.server.cleanup.ClasspathScannerUtils: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking annotations for: [{}]", r0)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Checking annotations for: [{}]", r0) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : z0 = 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : z0 = 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : r3 = virtualinvoke r0.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>()
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : r3 = virtualinvoke r0.<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>() >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i0 = lengthof r3
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i1 = 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i1 = 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : if i1 >= i0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : if i1 >= i0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : r4 = r3[i1]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : if i1 >= i0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : return z0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : r4 = r3[i1] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : $z1 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r4)
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : $z1 = interfaceinvoke r1.<java.util.List: boolean contains(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : if $z1 == 0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : if $z1 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : z0 = 1
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : if $z1 == 0 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i1 = i1 + 1
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : goto [?= (branch)]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : if i1 >= i0
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : z0 = 1 >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : goto [?= return z0]
org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : goto [?= return z0] >>>>>>>> org.apache.ambari.server.cleanup.ClasspathScannerUtils.checkAnnotations : return z0
