org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r1 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r2 != null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r1 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : return null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r2 != null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : return null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r2 != null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r8 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster m_cluster>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r8 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster m_cluster> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r3 = interfaceinvoke $r8.<org.apache.ambari.server.state.Cluster: java.util.Set getHosts(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r3 = interfaceinvoke $r8.<org.apache.ambari.server.state.Cluster: java.util.Set getHosts(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i0 = interfaceinvoke r3.<java.util.Set: int size()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i0 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if 0 != $i0
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if 0 != $i0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : return null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if 0 != $i0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r9 = new org.apache.ambari.server.stack.HostsType
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r9 = new org.apache.ambari.server.stack.HostsType >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke $r9.<org.apache.ambari.server.stack.HostsType: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke $r9.<org.apache.ambari.server.stack.HostsType: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4 = $r9
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4 = $r9 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r10 = r4.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r10 = r4.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : virtualinvoke $r10.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>(r3)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : virtualinvoke $r10.<java.util.LinkedHashSet: boolean addAll(java.util.Collection)>(r3) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r5 = <org.apache.ambari.server.stack.MasterHostResolver$Service: org.apache.ambari.server.stack.MasterHostResolver$Service OTHER>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r5 = <org.apache.ambari.server.stack.MasterHostResolver$Service: org.apache.ambari.server.stack.MasterHostResolver$Service OTHER> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r11 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r5 = <org.apache.ambari.server.stack.MasterHostResolver$Service: org.apache.ambari.server.stack.MasterHostResolver$Service OTHER> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r12 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r6 = $r12 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r13 = <org.apache.ambari.server.stack.MasterHostResolver$2: int[] $SwitchMap$org$apache$ambari$server$stack$MasterHostResolver$Service>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r6 = $r12 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r38 = $r37 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r39 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r39 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r40 = new java.lang.StringBuilder
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r40 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get master and hosts for Component ")
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get master and hosts for Component ") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Error: ")
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Error: ") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r44 = virtualinvoke r38.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r44 = virtualinvoke r38.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : interfaceinvoke $r39.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r46, r38)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : interfaceinvoke $r39.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r46, r38) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : return r47
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r13 = <org.apache.ambari.server.stack.MasterHostResolver$2: int[] $SwitchMap$org$apache$ambari$server$stack$MasterHostResolver$Service> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i1 = virtualinvoke r5.<org.apache.ambari.server.stack.MasterHostResolver$Service: int ordinal()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r13 = <org.apache.ambari.server.stack.MasterHostResolver$2: int[] $SwitchMap$org$apache$ambari$server$stack$MasterHostResolver$Service> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i1 = virtualinvoke r5.<org.apache.ambari.server.stack.MasterHostResolver$Service: int ordinal()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i2 = $r13[$i1]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i1 = virtualinvoke r5.<org.apache.ambari.server.stack.MasterHostResolver$Service: int ordinal()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i2 = $r13[$i1] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : tableswitch($i2) {     case 1:
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i2 = $r13[$i1] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NAMENODE")
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z4 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RESOURCEMANAGER")
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z5 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("HBASE_MASTER")
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z5 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("HBASE_MASTER") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z5 == 0
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z5 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("HBASE_MASTER") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r36 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r36 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: void resolveHBaseMasters(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.stack.HostsType)>($r36, r4)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r36 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: void resolveHBaseMasters(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.stack.HostsType)>($r36, r4) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: void resolveHBaseMasters(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.stack.HostsType)>($r36, r4) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z4 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RESOURCEMANAGER") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z4 == 0
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z4 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("RESOURCEMANAGER") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r35 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r35 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: void resolveResourceManagers(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.stack.HostsType)>($r35, r4)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r35 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: void resolveResourceManagers(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.stack.HostsType)>($r35, r4) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: void resolveResourceManagers(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.stack.HostsType)>($r35, r4) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z1 == 0
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i3 = interfaceinvoke r3.<java.util.Set: int size()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i3 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $i3 == 2
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $i3 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $i3 == 2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $i3 == 2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r15 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: java.util.Map getNameNodePair()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $i3 == 2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r15 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: java.util.Map getNameNodePair()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r15 == null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r15 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: java.util.Map getNameNodePair()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r15 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r17 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r15 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r7 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if r15 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r7 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r26 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r7 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r26 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r27 = (java.lang.String) $r26
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r26 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r27 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r27
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r27 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r27 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r28 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r27 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r28 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r29 = (java.lang.String) $r28
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r28 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r29 = (java.lang.String) $r28 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r29
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r29 = (java.lang.String) $r28 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r29 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r29 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31 = newarray (java.lang.Object)[3]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r30 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r32 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r3, 44)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r32 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r3, 44) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31[0] = $r32
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r32 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r3, 44) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31[0] = $r32 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r33 = r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31[0] = $r32 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r33 = r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31[1] = $r33
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r33 = r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31[1] = $r33 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r34 = r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31[1] = $r33 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r34 = r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31[2] = $r34
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r34 = r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31[2] = $r34 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : interfaceinvoke $r30.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Could not determine the active/standby states from NameNodes {}. Using {} as active and {} as standby.", $r31)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r31[2] = $r34 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : interfaceinvoke $r30.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Could not determine the active/standby states from NameNodes {}. Using {} as active and {} as standby.", $r31) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : interfaceinvoke $r30.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Could not determine the active/standby states from NameNodes {}. Using {} as active and {} as standby.", $r31) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r47 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r17 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z2 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>($r17)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r17 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z2 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z2 == 0
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z2 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r18 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r20 = null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r20 = null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r20
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r20 = null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r20 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r22 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r20 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r22 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z3 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>($r22)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r22 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z3 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z3 == 0
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $z3 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r23 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r25 = null
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r25 = null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r25
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r25 = null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r25 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r25 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r23 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r24 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r23 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status STANDBY> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r24 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r25 = (java.lang.String) $r24
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r24 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r25 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r25]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r25 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r25] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r25
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r4.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r25] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r18 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r19 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r18 = <org.apache.ambari.server.stack.MasterHostResolver$Status: org.apache.ambari.server.stack.MasterHostResolver$Status ACTIVE> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r19 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r20 = (java.lang.String) $r19
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r19 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r20 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r20]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r20 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r20] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r20
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= r4.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r20] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : return $r14
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r14 = specialinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.stack.HostsType filterHosts(org.apache.ambari.server.stack.HostsType,java.lang.String,java.lang.String)>(r4, r1, r2) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r11 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r5 = staticinvoke <org.apache.ambari.server.stack.MasterHostResolver$Service: org.apache.ambari.server.stack.MasterHostResolver$Service valueOf(java.lang.String)>($r11)
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r11 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r12 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r5 = staticinvoke <org.apache.ambari.server.stack.MasterHostResolver$Service: org.apache.ambari.server.stack.MasterHostResolver$Service valueOf(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= $r13 = <org.apache.ambari.server.stack.MasterHostResolver$2: int[] $SwitchMap$org$apache$ambari$server$stack$MasterHostResolver$Service>]
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : r5 = staticinvoke <org.apache.ambari.server.stack.MasterHostResolver$Service: org.apache.ambari.server.stack.MasterHostResolver$Service valueOf(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r12 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= $r13 = <org.apache.ambari.server.stack.MasterHostResolver$2: int[] $SwitchMap$org$apache$ambari$server$stack$MasterHostResolver$Service>] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r13 = <org.apache.ambari.server.stack.MasterHostResolver$2: int[] $SwitchMap$org$apache$ambari$server$stack$MasterHostResolver$Service>
org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : goto [?= $r13 = <org.apache.ambari.server.stack.MasterHostResolver$2: int[] $SwitchMap$org$apache$ambari$server$stack$MasterHostResolver$Service>] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.getMasterAndHosts : $r37 := @caughtexception
