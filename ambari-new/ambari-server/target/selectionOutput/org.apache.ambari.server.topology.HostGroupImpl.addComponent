org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r6 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map components> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $z1 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z1 != 0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r7 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map components>
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : z0 = 0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : z0 = 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r9 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r9 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $z2 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.Stack: boolean isMasterComponent(java.lang.String)>(r1)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $z2 = virtualinvoke $r9.<org.apache.ambari.server.controller.internal.Stack: boolean isMasterComponent(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z2 == 0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : r0.<org.apache.ambari.server.topology.HostGroupImpl: boolean containsMasterComponent> = 1
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if z0 == 0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r10 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : return z0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r10 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : r4 = virtualinvoke $r10.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getServiceForComponent(java.lang.String)>(r1)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : r4 = virtualinvoke $r10.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getServiceForComponent(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if r4 == null
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if r4 == null >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r11 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map componentsForService>
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if r4 == null >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : return z0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r11 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map componentsForService> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : r5 = (java.util.Set) $r12
org.apache.ambari.server.topology.HostGroupImpl.addComponent : r5 = (java.util.Set) $r12 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if r5 != null
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if r5 != null >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r13 = new java.util.HashSet
org.apache.ambari.server.topology.HostGroupImpl.addComponent : if r5 != null >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : return z0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r13 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : specialinvoke $r13.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.HostGroupImpl.addComponent : specialinvoke $r13.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : r5 = $r13
org.apache.ambari.server.topology.HostGroupImpl.addComponent : r5 = $r13 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r14 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map componentsForService>
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r14 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map componentsForService> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : r0.<org.apache.ambari.server.topology.HostGroupImpl: boolean containsMasterComponent> = 1 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : if z0 == 0
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r7 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map components> >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r3 = new org.apache.ambari.server.topology.Component
org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r3 = new org.apache.ambari.server.topology.Component >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : specialinvoke $r3.<org.apache.ambari.server.topology.Component: void <init>(java.lang.String,org.apache.ambari.server.controller.internal.ProvisionAction)>(r1, r2)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : specialinvoke $r3.<org.apache.ambari.server.topology.Component: void <init>(java.lang.String,org.apache.ambari.server.controller.internal.ProvisionAction)>(r1, r2) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3)
org.apache.ambari.server.topology.HostGroupImpl.addComponent : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3) >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : z0 = 1
org.apache.ambari.server.topology.HostGroupImpl.addComponent : z0 = 1 >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : goto [?= $r9 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>]
org.apache.ambari.server.topology.HostGroupImpl.addComponent : goto [?= $r9 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>] >>>>>>>> org.apache.ambari.server.topology.HostGroupImpl.addComponent : $r9 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>
