org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r6 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r7 = virtualinvoke r2.<org.apache.ambari.server.topology.HostOfferResponse: java.lang.String getHostGroupName()>()
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r7 = virtualinvoke r2.<org.apache.ambari.server.topology.HostOfferResponse: java.lang.String getHostGroupName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r9 = (org.apache.ambari.server.topology.HostGroupInfo) $r8
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r9 = (org.apache.ambari.server.topology.HostGroupInfo) $r8 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r10 = virtualinvoke $r9.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Map getHostRackInfo()>()
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r10 = virtualinvoke $r9.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Map getHostRackInfo()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r11 = virtualinvoke r3.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r11 = virtualinvoke r3.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11)
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : r4 = (java.lang.String) $r12
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : r4 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : if null == r4
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : if null == r4 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : virtualinvoke r3.<org.apache.ambari.server.state.host.HostImpl: void setRackInfo(java.lang.String)>(r4)
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : if null == r4 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : return
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : virtualinvoke r3.<org.apache.ambari.server.state.host.HostImpl: void setRackInfo(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r14 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : virtualinvoke r3.<org.apache.ambari.server.state.host.HostImpl: void setRackInfo(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r18 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : r5 = $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r19 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r19 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r20 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r20 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Could not register rack change for cluster id {}", $r20)
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Could not register rack change for cluster id {}", $r20) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r21 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r21 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception during rack change: ", r5)
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception during rack change: ", r5) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : return
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r14 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext>
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r14 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r18 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r16 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r18 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r16 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $l0 = virtualinvoke $r16.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r16 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r18 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $l0 = virtualinvoke $r16.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r17 = virtualinvoke $r15.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0)
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $l0 = virtualinvoke $r16.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r18 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r17 = virtualinvoke $r15.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : interfaceinvoke $r14.<org.apache.ambari.server.controller.AmbariManagementController: void registerRackChange(java.lang.String)>($r17)
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r17 = virtualinvoke $r15.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r18 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : interfaceinvoke $r14.<org.apache.ambari.server.controller.AmbariManagementController: void registerRackChange(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : goto [?= return]
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : interfaceinvoke $r14.<org.apache.ambari.server.controller.AmbariManagementController: void registerRackChange(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : $r18 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : goto [?= return] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.updateHostWithRackInfo : return
