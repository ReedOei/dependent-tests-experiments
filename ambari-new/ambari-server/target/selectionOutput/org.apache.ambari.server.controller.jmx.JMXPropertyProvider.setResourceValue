org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $r12 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r7 = (java.util.Map) $r12
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r7 = (java.util.Map) $r12 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $z0 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("#")
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $z0 = virtualinvoke r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("#") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z0 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $r13 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.regex.Pattern dotReplacementCharPattern>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if r7 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if r7 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $z1 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r5)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if r7 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : return
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $z1 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z1 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r8 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : return
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r8 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $i0 = interfaceinvoke r6.<java.util.List: int size()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $i0 = interfaceinvoke r6.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $i0 <= 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $z2 = r8 instanceof java.util.Map
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>(r3, r8)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>(r3, r8) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : return
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $z2 = r8 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z2 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r9 = (java.util.Map) r8
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>(r3, r8)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r9 = (java.util.Map) r8 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r10 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r10 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z3 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $r15 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>(r3, r8)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $r15 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r11 = (java.lang.String) $r15
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r11 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r8 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r8 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $z4 = r8 instanceof java.util.Map
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $z4 = r8 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z4 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r9 = (java.util.Map) r8
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>(r3, r8)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r9 = (java.util.Map) r8 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $r13 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.regex.Pattern dotReplacementCharPattern> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $r14 = virtualinvoke $r13.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : $r14 = virtualinvoke $r13.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r5 = virtualinvoke $r14.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(".")
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : r5 = virtualinvoke $r14.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.setResourceValue : if r7 == null
