org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>("hdfs-site") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : if $z0 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $r1 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("hdfs-site")
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z3 = 0
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z3 = 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : return $z3
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $r1 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("hdfs-site") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $r2 = (java.util.Map) $r1
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $r2 = (java.util.Map) $r1 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z1 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("dfs.nameservices")
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z1 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("dfs.nameservices") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : if $z1 != 0
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("hdfs-site")
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z3 = 1
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z3 = 1 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : goto [?= return $z3]
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : goto [?= return $z3] >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : return $z3
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("hdfs-site") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $r4 = (java.util.Map) $r3
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $r4 = (java.util.Map) $r3 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>("dfs.internal.nameservices")
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>("dfs.internal.nameservices") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : if $z2 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z3 = 1
org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.isNameNodeHAEnabled : $z3 = 0
