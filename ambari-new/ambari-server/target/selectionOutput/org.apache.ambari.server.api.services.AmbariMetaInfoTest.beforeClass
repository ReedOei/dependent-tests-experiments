org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r0 = new java.io.File >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("src/test/resources/stacks")
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("src/test/resources/stacks") >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : r1 = $r0
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : r1 = $r0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r4 = new java.io.File
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r4 = new java.io.File >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>("src/test/resources/version")
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>("src/test/resources/version") >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : r2 = $r4
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : r2 = $r4 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : if $z0 == 0
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r6 = new java.io.File
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r15 = staticinvoke <org.apache.ambari.server.api.services.AmbariMetaInfoTest: org.apache.ambari.server.api.services.AmbariMetaInfoTest$TestAmbariMetaInfo createAmbariMetaInfo(java.io.File,java.io.File)>(r1, r2)
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r15 = staticinvoke <org.apache.ambari.server.api.services.AmbariMetaInfoTest: org.apache.ambari.server.api.services.AmbariMetaInfoTest$TestAmbariMetaInfo createAmbariMetaInfo(java.io.File,java.io.File)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : <org.apache.ambari.server.api.services.AmbariMetaInfoTest: org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo> = $r15
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : <org.apache.ambari.server.api.services.AmbariMetaInfoTest: org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo> = $r15 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : return
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r6 = new java.io.File >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r7 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r7 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r8 = virtualinvoke $r7.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("stacks")
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r8 = virtualinvoke $r7.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("stacks") >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r9 = virtualinvoke $r8.<java.net.URL: java.lang.String getPath()>()
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r9 = virtualinvoke $r8.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r9)
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : r1 = $r6
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : r1 = $r6 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r10 = new java.io.File
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r10 = new java.io.File >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r11 = new java.io.File
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r11 = new java.io.File >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r3 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r3 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r12 = virtualinvoke $r3.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("")
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r12 = virtualinvoke $r3.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("") >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r13 = virtualinvoke $r12.<java.net.URL: java.lang.String getPath()>()
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r13 = virtualinvoke $r12.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r13)
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r14 = virtualinvoke $r11.<java.io.File: java.lang.String getParent()>()
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r14 = virtualinvoke $r11.<java.io.File: java.lang.String getParent()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : specialinvoke $r10.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r14, "version")
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : specialinvoke $r10.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r14, "version") >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : r2 = $r10
org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : r2 = $r10 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfoTest.beforeClass : $r15 = staticinvoke <org.apache.ambari.server.api.services.AmbariMetaInfoTest: org.apache.ambari.server.api.services.AmbariMetaInfoTest$TestAmbariMetaInfo createAmbariMetaInfo(java.io.File,java.io.File)>(r1, r2)
