org.apache.ambari.server.controller.internal.HostResourceProvider.removeHostFromClusterTopology : $r2 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.apache.ambari.server.topology.TopologyManager topologyManager> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.removeHostFromClusterTopology : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.controller.internal.HostResourceProvider.removeHostFromClusterTopology : $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.removeHostFromClusterTopology : r3 = virtualinvoke $r2.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r4)
org.apache.ambari.server.controller.internal.HostResourceProvider.removeHostFromClusterTopology : r3 = virtualinvoke $r2.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.removeHostFromClusterTopology : if r3 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.removeHostFromClusterTopology : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.removeHostFromClusterTopology : interfaceinvoke r3.<org.apache.ambari.server.topology.ClusterTopology: void removeHost(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.HostResourceProvider.removeHostFromClusterTopology : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.removeHostFromClusterTopology : return
org.apache.ambari.server.controller.internal.HostResourceProvider.removeHostFromClusterTopology : interfaceinvoke r3.<org.apache.ambari.server.topology.ClusterTopology: void removeHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.removeHostFromClusterTopology : return
