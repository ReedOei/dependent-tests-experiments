org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $r1 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String stackRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : if $r1 == null
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $r2 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String stackRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i1 = 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i1 = 0 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : i0 = $i1
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : i0 = $i1 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i2 = 31 * i0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i2 = 31 * i0 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $r3 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $r3 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : if $r3 == null
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $r4 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i3 = 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i3 = 0 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i5 = 31 * i4
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i5 = 31 * i4 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $r5 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $r5 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : if $r5 == null
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : if $r5 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $r6 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot>
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : if $r5 == null >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i6 = 0
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i6 = 0 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : i7 = $i5 + $i6
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : i7 = $i5 + $i6 >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : return i7
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $r6 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String extensionRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i6 = virtualinvoke $r6.<java.lang.String: int hashCode()>()
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i6 = virtualinvoke $r6.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : goto [?= i7 = $i5 + $i6]
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : goto [?= i7 = $i5 + $i6] >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : i7 = $i5 + $i6
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $r4 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String commonServicesRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : goto [?= i4 = $i2 + $i3]
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : goto [?= i4 = $i2 + $i3] >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $r2 = r0.<org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey: java.lang.String stackRoot> >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : goto [?= i0 = $i1]
org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : goto [?= i0 = $i1] >>>>>>>> org.apache.ambari.server.stack.StackManagerMock$ModulesPathsKey.hashCode : i0 = $i1
