org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r3 = $r2
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r3 = $r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r7 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r7 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : specialinvoke $r7.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : specialinvoke $r7.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r4 = $r7
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r4 = $r7 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z6 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z6 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z6 != 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z6 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z6 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : return r3
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : return r3
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r6 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r8
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r6 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z1 = virtualinvoke r6.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: boolean isAnyTaskSequential()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z1 = virtualinvoke r6.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: boolean isAnyTaskSequential()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z2 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z2 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z2 != 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r10 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r6)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r10 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r10)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r9 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r9 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : specialinvoke $r9.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : specialinvoke $r9.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r4 = $r9
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r4 = $r9 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r10 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r6)
