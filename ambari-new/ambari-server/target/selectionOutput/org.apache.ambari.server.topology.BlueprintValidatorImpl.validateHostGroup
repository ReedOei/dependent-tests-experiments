org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r2 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r14 = interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: java.lang.String getName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r14 = interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Validating hostgroup: {}", $r14)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Validating hostgroup: {}", $r14) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r15 = new java.util.HashMap
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r15.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r15.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r3 = $r15
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r3 = $r15 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r16 = new java.util.HashSet
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r16 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r17 = interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r17 = interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r16.<java.util.HashSet: void <init>(java.util.Collection)>($r17)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r16.<java.util.HashSet: void <init>(java.util.Collection)>($r17) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r4 = virtualinvoke $r16.<java.util.HashSet: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r4 = virtualinvoke $r16.<java.util.HashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z3 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : return r3
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r5 = (java.lang.String) $r18
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r5 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r19 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r19 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Processing component: {}", r5)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Processing component: {}", r5) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r20 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r20 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r21 = virtualinvoke $r20.<org.apache.ambari.server.controller.internal.Stack: java.util.Collection getDependenciesForComponent(java.lang.String)>(r5)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r21 = virtualinvoke $r20.<org.apache.ambari.server.controller.internal.Stack: java.util.Collection getDependenciesForComponent(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r6 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r6 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z4 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r22 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r22 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r7 = (org.apache.ambari.server.state.DependencyInfo) $r22
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r7 = (org.apache.ambari.server.state.DependencyInfo) $r22 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r23 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r23 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r24 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r24 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Processing dependency [{}] for component [{}]", $r24, r5)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r23.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Processing dependency [{}] for component [{}]", $r24, r5) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r25 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r25 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r8 = virtualinvoke $r25.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getConditionalServiceForDependency(org.apache.ambari.server.state.DependencyInfo)>(r7)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r8 = virtualinvoke $r25.<org.apache.ambari.server.controller.internal.Stack: java.lang.String getConditionalServiceForDependency(org.apache.ambari.server.state.DependencyInfo)>(r7) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r8 == null
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r8 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r26 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r8 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r30 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r30 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r31 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r31 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r32 = virtualinvoke $r30.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.ComponentInfo getComponentInfo(java.lang.String)>($r31)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r32 = virtualinvoke $r30.<org.apache.ambari.server.controller.internal.Stack: org.apache.ambari.server.state.ComponentInfo getComponentInfo(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z0 = virtualinvoke $r32.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z0 = virtualinvoke $r32.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z0 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r33 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z0 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r9 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getScope()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r9 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getScope()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r10 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r10 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r11 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: org.apache.ambari.server.state.AutoDeployInfo getAutoDeploy()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r11 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: org.apache.ambari.server.state.AutoDeployInfo getAutoDeploy()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z1 = 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z1 = 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z7 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: boolean hasDependencyConditions()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z7 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: boolean hasDependencyConditions()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z7 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z7 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z2 = 1
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z7 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z10 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("cluster")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z10 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("cluster") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z10 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z10 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r47 = new org.apache.ambari.server.topology.Cardinality
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z10 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z11 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("host")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z11 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("host") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z11 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z11 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r49 = interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z11 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z1 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r50 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r50 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r51 = (java.util.Collection) $r50
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r51 = (java.util.Collection) $r50 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r51 != null
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r51 != null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r52 = new java.util.HashSet
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r51 != null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke r51.<java.util.Collection: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke r51.<java.util.Collection: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r52 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r52.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r52.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r51 = $r52
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r51 = $r52 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r51)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r51) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke r51.<java.util.Collection: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r49 = interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z12 = interfaceinvoke $r49.<java.util.Collection: boolean contains(java.lang.Object)>(r10)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z12 = interfaceinvoke $r49.<java.util.Collection: boolean contains(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z12 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z12 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r11 == null
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z12 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z1 = 1
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z1 = 1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: boolean addComponent(java.lang.String)>(r10)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke r1.<org.apache.ambari.server.topology.HostGroup: boolean addComponent(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z1 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r11 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z13 = virtualinvoke r11.<org.apache.ambari.server.state.AutoDeployInfo: boolean isEnabled()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if r11 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z1 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z13 = virtualinvoke r11.<org.apache.ambari.server.state.AutoDeployInfo: boolean isEnabled()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z13 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z13 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z1 = 1
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z13 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z1 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r47 = new org.apache.ambari.server.topology.Cardinality >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r47.<org.apache.ambari.server.topology.Cardinality: void <init>(java.lang.String)>("1+")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : specialinvoke $r47.<org.apache.ambari.server.topology.Cardinality: void <init>(java.lang.String)>("1+") >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r48 = virtualinvoke r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: java.util.Collection verifyComponentCardinalityCount(java.lang.String,org.apache.ambari.server.topology.Cardinality,org.apache.ambari.server.state.AutoDeployInfo)>(r10, $r47, r11)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r48 = virtualinvoke r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: java.util.Collection verifyComponentCardinalityCount(java.lang.String,org.apache.ambari.server.topology.Cardinality,org.apache.ambari.server.state.AutoDeployInfo)>(r10, $r47, r11) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z1 = interfaceinvoke r48.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z1 = interfaceinvoke r48.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= (branch)]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z1 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z2 = 1 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r42 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.util.List getDependencyConditions()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r42 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.util.List getDependencyConditions()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r12 = interfaceinvoke $r42.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r12 = interfaceinvoke $r42.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z8 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z8 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z8 == 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z8 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r43 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z8 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z2 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z2 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z2 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z10 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("cluster")
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r43 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r13 = (org.apache.ambari.server.state.DependencyConditionInfo) $r43
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r13 = (org.apache.ambari.server.state.DependencyConditionInfo) $r43 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r44 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r44 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r45 = interfaceinvoke $r44.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r45 = interfaceinvoke $r44.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r46 = virtualinvoke $r45.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r46 = virtualinvoke $r45.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z9 = interfaceinvoke r13.<org.apache.ambari.server.state.DependencyConditionInfo: boolean isResolved(java.util.Map)>($r46)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z9 = interfaceinvoke r13.<org.apache.ambari.server.state.DependencyConditionInfo: boolean isResolved(java.util.Map)>($r46) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z9 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z9 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z2 = 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z9 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z8 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z8 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z8 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : z2 = 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= (branch)]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if z2 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r33 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r34 = interfaceinvoke $r33.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r34 = interfaceinvoke $r33.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r35 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getServiceName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r35 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z6 = interfaceinvoke $r34.<java.util.Collection: boolean contains(java.lang.Object)>($r35)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z6 = interfaceinvoke $r34.<java.util.Collection: boolean contains(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z6 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z6 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r36 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z6 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : r9 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getScope()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r36 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r37 = newarray (java.lang.Object)[3]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r37 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r38 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getServiceName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r38 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r37[0] = $r38
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r37[0] = $r38 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r39 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r39 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r37[1] = $r39
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r37[1] = $r39 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r40 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r40 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r41 = interfaceinvoke $r40.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r41 = interfaceinvoke $r40.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r37[2] = $r41
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r37[2] = $r41 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("The service [{}] for component [{}] is missing from the blueprint [{}], skipping dependency", $r37)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("The service [{}] for component [{}] is missing from the blueprint [{}], skipping dependency", $r37) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r26 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.topology.Blueprint blueprint> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r27 = interfaceinvoke $r26.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r27 = interfaceinvoke $r26.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z5 = interfaceinvoke $r27.<java.util.Collection: boolean contains(java.lang.Object)>(r8)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z5 = interfaceinvoke $r27.<java.util.Collection: boolean contains(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z5 != 0
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z5 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r28 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : if $z5 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r30 = r0.<org.apache.ambari.server.topology.BlueprintValidatorImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r28 = <org.apache.ambari.server.topology.BlueprintValidatorImpl: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r29 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getName()>()
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $r29 = virtualinvoke r7.<org.apache.ambari.server.state.DependencyInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Conditional service  [{}] is missing from the blueprint, skipping dependency [{}]", r8, $r29)
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Conditional service  [{}] is missing from the blueprint, skipping dependency [{}]", r8, $r29) >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintValidatorImpl.validateHostGroup : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
