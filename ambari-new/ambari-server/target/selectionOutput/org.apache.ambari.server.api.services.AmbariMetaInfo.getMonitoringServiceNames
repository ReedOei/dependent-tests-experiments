org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r3 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : r4 = $r3
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : r4 = $r3 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r7 = virtualinvoke r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getServices(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r7 = virtualinvoke r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getServices(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : r5 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : r5 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : if $z0 == 0
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : return r4
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : r6 = (org.apache.ambari.server.state.ServiceInfo) $r9
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : r6 = (org.apache.ambari.server.state.ServiceInfo) $r9 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r10 = virtualinvoke r6.<org.apache.ambari.server.state.ServiceInfo: java.lang.Boolean isMonitoringService()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r10 = virtualinvoke r6.<org.apache.ambari.server.state.ServiceInfo: java.lang.Boolean isMonitoringService()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : if $r10 == null
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : if $r10 == null >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r11 = virtualinvoke r6.<org.apache.ambari.server.state.ServiceInfo: java.lang.Boolean isMonitoringService()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : if $r10 == null >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r11 = virtualinvoke r6.<org.apache.ambari.server.state.ServiceInfo: java.lang.Boolean isMonitoringService()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : if $z1 == 0
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r12 = virtualinvoke r6.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : $r12 = virtualinvoke r6.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r12)
org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.getMonitoringServiceNames : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
