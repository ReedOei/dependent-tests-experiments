org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r4 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r4.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,org.apache.ambari.server.controller.spi.TemporalInfo)>(r0, r3)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r4.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,org.apache.ambari.server.controller.spi.TemporalInfo)>(r0, r3) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r5 = $r4
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r5 = $r4 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r9 = virtualinvoke r1.<org.apache.hadoop.metrics2.sink.timeline.TimelineMetric: java.util.TreeMap getMetricValues()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r9 = virtualinvoke r1.<org.apache.hadoop.metrics2.sink.timeline.TimelineMetric: java.util.TreeMap getMetricValues()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r10 = virtualinvoke $r9.<java.util.TreeMap: java.util.Set entrySet()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r10 = virtualinvoke $r9.<java.util.TreeMap: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r6 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r6 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r7 = null
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r7 = null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z1 == 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if r7 == null
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if r7 == null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r16 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if r7 == null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $i11 = virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: int size()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $i11 = virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r39 = newmultiarray (java.lang.Number)[$i11][2]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r39 = newmultiarray (java.lang.Number)[$i11][2] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i3 = 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i3 = 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r40 = virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r40 = virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z8 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z8 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z8 == 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r41 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : return r39
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r41 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r42 = (org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo) $r41
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r42 = (org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo) $r41 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r43 = r39[i3]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r43 = r39[i3] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r44 = r42.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: java.lang.Double val>
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r44 = r42.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: java.lang.Double val> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r43[0] = $r44
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r43[0] = $r44 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r45 = r39[i3]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r45 = r39[i3] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l12 = r42.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: long ts>
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l12 = r42.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: long ts> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r46 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r46 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r45[1] = $r46
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r45[1] = $r46 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i3 = i3 + 1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i3 = i3 + 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z8 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z8 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z8 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r16 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r17 = (java.lang.Long) $r16
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r17 = (java.lang.Long) $r16 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l6 = virtualinvoke $r17.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l6 = virtualinvoke $r17.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : l0 = $l6 / 1000L
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : l0 = $l6 / 1000L >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r18 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r18 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r8 = (java.lang.Double) $r18
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r8 = (java.lang.Double) $r18 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i1 = 1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i1 = 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : z0 = 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : z0 = 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z3 == 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r19 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if z0 != 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r36 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $i11 = virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: int size()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r36 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d9 = virtualinvoke r8.<java.lang.Double: double doubleValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d9 = virtualinvoke r8.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d10 = (double) i1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d10 = (double) i1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d11 = $d9 / $d10
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d11 = $d9 / $d10 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r37 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r37 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r38 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.MetricsDataTransferMethod: java.lang.Double getData(java.lang.Double)>($r37)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r38 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.MetricsDataTransferMethod: java.lang.Double getData(java.lang.Double)>($r37) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r36.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, l0, $r38)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r36.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, l0, $r38) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r36)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r36) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $i11 = virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: int size()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r19 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r20 = (java.util.Map$Entry) $r19
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r20 = (java.util.Map$Entry) $r19 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r21 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r21 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $r21 != null
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $r21 != null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if z0 != 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $r21 != null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r28 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r28 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r29 = (java.lang.Long) $r28
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r29 = (java.lang.Long) $r28 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l9 = virtualinvoke $r29.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l9 = virtualinvoke $r29.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : l2 = $l9 / 1000L
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : l2 = $l9 / 1000L >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $b10 = l2 cmp l0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $b10 = l2 cmp l0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $b10 == 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $b10 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r30 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $b10 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d6 = virtualinvoke r8.<java.lang.Double: double doubleValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d6 = virtualinvoke r8.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r34 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r34 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r35 = (java.lang.Double) $r34
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r35 = (java.lang.Double) $r34 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d7 = virtualinvoke $r35.<java.lang.Double: double doubleValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d7 = virtualinvoke $r35.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d8 = $d6 + $d7
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d8 = $d6 + $d7 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i1 = i1 + 1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r30 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d3 = virtualinvoke r8.<java.lang.Double: double doubleValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d3 = virtualinvoke r8.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d4 = (double) i1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d4 = (double) i1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d5 = $d3 / $d4
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d5 = $d3 / $d4 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r32 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.MetricsDataTransferMethod: java.lang.Double getData(java.lang.Double)>($r31)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r32 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.MetricsDataTransferMethod: java.lang.Double getData(java.lang.Double)>($r31) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r30.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, l0, $r32)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r30.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, l0, $r32) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r30)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r30) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : l0 = l2
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : l0 = l2 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r33 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r33 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r8 = (java.lang.Double) $r33
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r8 = (java.lang.Double) $r33 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i1 = 1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i1 = 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= (branch)]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r22 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r25 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r25 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r26 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r26 = interfaceinvoke r20.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r27 = (java.lang.Long) $r26
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r27 = (java.lang.Long) $r26 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l7 = virtualinvoke $r27.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l7 = virtualinvoke $r27.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l8 = $l7 / 1000L
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l8 = $l7 / 1000L >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r25.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, $l8, null)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r25.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, $l8, null) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r25)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r25) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r22 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d0 = virtualinvoke r8.<java.lang.Double: double doubleValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d0 = virtualinvoke r8.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d1 = (double) i1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d1 = (double) i1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d2 = $d0 / $d1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d2 = $d0 / $d1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r24 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.MetricsDataTransferMethod: java.lang.Double getData(java.lang.Double)>($r23)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r24 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.MetricsDataTransferMethod: java.lang.Double getData(java.lang.Double)>($r23) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r22.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, l0, $r24)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r22.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, l0, $r24) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r22)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r22) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : z0 = 1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : z0 = 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r25 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r7 = (java.util.Map$Entry) $r11
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r7 = (java.util.Map$Entry) $r11 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r12 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r12 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $r12 != null
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $r12 != null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r13 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $r12 != null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if r7 == null
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r13 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r14 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r14 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r15 = (java.lang.Long) $r14
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r15 = (java.lang.Long) $r14 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l4 = virtualinvoke $r15.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l4 = virtualinvoke $r15.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l5 = $l4 / 1000L
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l5 = $l4 / 1000L >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r13.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, $l5, null)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r13.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, $l5, null) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r13)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke r5.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r13) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
