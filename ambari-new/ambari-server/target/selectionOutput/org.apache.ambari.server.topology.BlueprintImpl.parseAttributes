org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : specialinvoke $r2.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : specialinvoke $r2.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : r3 = $r2
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : r3 = $r2 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : if r1 == null
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : if r1 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $r8 = new com.google.gson.Gson
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : if r1 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : return r3
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $r8 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : specialinvoke $r8.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : specialinvoke $r8.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : r4 = $r8
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : r4 = $r8 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : r5 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : r5 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : if $z0 == 0
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : return r3
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : r6 = (org.apache.ambari.server.orm.entities.BlueprintConfigEntity) $r9
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : r6 = (org.apache.ambari.server.orm.entities.BlueprintConfigEntity) $r9 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $r10 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.BlueprintConfigEntity: java.lang.String getConfigAttributes()>()
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $r10 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.BlueprintConfigEntity: java.lang.String getConfigAttributes()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $r11 = virtualinvoke r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>($r10, class "java/util/Map")
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $r11 = virtualinvoke r4.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>($r10, class "java/util/Map") >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : r7 = (java.util.Map) $r11
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : r7 = (java.util.Map) $r11 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : if r7 == null
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : if r7 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $z1 = interfaceinvoke r7.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : if r7 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $z1 = interfaceinvoke r7.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : if $z1 != 0
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $r12 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.BlueprintConfigEntity: java.lang.String getType()>()
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : $r12 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.BlueprintConfigEntity: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r7)
org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r7) >>>>>>>> org.apache.ambari.server.topology.BlueprintImpl.parseAttributes : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
