org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("operation_level/level") >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : if $z0 == 0
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : $r4 = new org.apache.ambari.server.controller.internal.RequestOperationLevel
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : r3 = "Can not determine request operation level. Operation level property should be specified for this request."
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : r3 = "Can not determine request operation level. Operation level property should be specified for this request." >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : $r5 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : $r5 = <org.apache.ambari.server.controller.internal.HostComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String)>(r3)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster>
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster> >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : return r2
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : $r4 = new org.apache.ambari.server.controller.internal.RequestOperationLevel >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : specialinvoke $r4.<org.apache.ambari.server.controller.internal.RequestOperationLevel: void <init>(java.util.Map)>(r1)
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : specialinvoke $r4.<org.apache.ambari.server.controller.internal.RequestOperationLevel: void <init>(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : r2 = virtualinvoke $r4.<org.apache.ambari.server.controller.internal.RequestOperationLevel: org.apache.ambari.server.controller.spi.Resource$Type getLevel()>()
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : r2 = virtualinvoke $r4.<org.apache.ambari.server.controller.internal.RequestOperationLevel: org.apache.ambari.server.controller.spi.Resource$Type getLevel()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : goto [?= return r2]
org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : goto [?= return r2] >>>>>>>> org.apache.ambari.server.controller.internal.HostComponentResourceProvider.determineOperationLevel : return r2
