org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r1 = staticinvoke <javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r2 = virtualinvoke r1.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>(r0)
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r2 = virtualinvoke r1.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>(r0) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : interfaceinvoke r2.<javax.xml.stream.XMLStreamReader: int nextTag()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : interfaceinvoke r2.<javax.xml.stream.XMLStreamReader: int nextTag()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r3 = interfaceinvoke r2.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "noNamespaceSchemaLocation")
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r3 = interfaceinvoke r2.<javax.xml.stream.XMLStreamReader: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema-instance", "noNamespaceSchemaLocation") >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : if null != r3
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : if null != r3 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r12 = new java.lang.IllegalArgumentException
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : if null != r3 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r13 = class "org/apache/ambari/server/state/repository/VersionDefinitionXml"
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r13 = class "org/apache/ambari/server/state/repository/VersionDefinitionXml" >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r4 = virtualinvoke $r14.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r3)
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r4 = virtualinvoke $r14.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : if null != r4
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : if null != r4 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r15 = new java.lang.Exception
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : if null != r4 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r18 = newarray (java.lang.Class)[1]
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r18 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r18[0] = class "org/apache/ambari/server/state/repository/VersionDefinitionXml"
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r18[0] = class "org/apache/ambari/server/state/repository/VersionDefinitionXml" >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r5 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r18)
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r5 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r18) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r6 = virtualinvoke r5.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r6 = virtualinvoke r5.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r7 = staticinvoke <javax.xml.validation.SchemaFactory: javax.xml.validation.SchemaFactory newInstance(java.lang.String)>("http://www.w3.org/2001/XMLSchema")
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r7 = staticinvoke <javax.xml.validation.SchemaFactory: javax.xml.validation.SchemaFactory newInstance(java.lang.String)>("http://www.w3.org/2001/XMLSchema") >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r19 = new javax.xml.transform.stream.StreamSource
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r19 = new javax.xml.transform.stream.StreamSource >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : specialinvoke $r19.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>(r4)
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : specialinvoke $r19.<javax.xml.transform.stream.StreamSource: void <init>(java.io.InputStream)>(r4) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r8 = virtualinvoke r7.<javax.xml.validation.SchemaFactory: javax.xml.validation.Schema newSchema(javax.xml.transform.Source)>($r19)
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r8 = virtualinvoke r7.<javax.xml.validation.SchemaFactory: javax.xml.validation.Schema newSchema(javax.xml.transform.Source)>($r19) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : interfaceinvoke r6.<javax.xml.bind.Unmarshaller: void setSchema(javax.xml.validation.Schema)>(r8)
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : interfaceinvoke r6.<javax.xml.bind.Unmarshaller: void setSchema(javax.xml.validation.Schema)>(r8) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r20 = interfaceinvoke r6.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(javax.xml.stream.XMLStreamReader)>(r2)
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : interfaceinvoke r6.<javax.xml.bind.Unmarshaller: void setSchema(javax.xml.validation.Schema)>(r8) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r21 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r11 = $r21 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r4)
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r11 = $r21 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r21 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r4) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : throw r11
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r20 = interfaceinvoke r6.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(javax.xml.stream.XMLStreamReader)>(r2) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r9 = (org.apache.ambari.server.state.repository.VersionDefinitionXml) $r20
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r20 = interfaceinvoke r6.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(javax.xml.stream.XMLStreamReader)>(r2) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r21 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r9 = (org.apache.ambari.server.state.repository.VersionDefinitionXml) $r20 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r9.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String xsdLocation> = r3
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r9 = (org.apache.ambari.server.state.repository.VersionDefinitionXml) $r20 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r21 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r9.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String xsdLocation> = r3 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r10 = r9
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r9.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String xsdLocation> = r3 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r21 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r10 = r9 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r4)
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : r10 = r9 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r21 := @caughtexception
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r4) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : return r10
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r15 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r16 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r16 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r16[0] = r3
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r16[0] = r3 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load XSD identified by \'%s\'", $r16)
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load XSD identified by \'%s\'", $r16) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>($r17)
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : throw $r15
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : $r12 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Provided XML does not have a Schema defined using \'noNamespaceSchemaLocation\'")
org.apache.ambari.server.state.repository.VersionDefinitionXml.load : specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Provided XML does not have a Schema defined using \'noNamespaceSchemaLocation\'") >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.load : throw $r12
