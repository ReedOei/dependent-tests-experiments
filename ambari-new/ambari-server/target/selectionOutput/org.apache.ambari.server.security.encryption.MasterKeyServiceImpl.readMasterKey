org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r2 = staticinvoke <java.lang.System: java.util.Map getenv()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r2 = staticinvoke <java.lang.System: java.util.Map getenv()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r2 == null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r2 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z0 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r2 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : return r1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z0 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z0 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("AMBARI_SECURITY_MASTER_KEY")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : return r1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("AMBARI_SECURITY_MASTER_KEY") >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = (java.lang.String) $r6
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r1 == null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r1 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r1 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r3 = (java.lang.String) $r9
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r3 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r3 == null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r3 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z2 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r3 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : return r1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z2 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z2 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r10 = new java.io.File
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : return r1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r10 = new java.io.File >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(r3)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r4 = $r10
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r4 = $r10 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z3 = virtualinvoke r4.<java.io.File: boolean exists()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z3 = virtualinvoke r4.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z3 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: void initializeFromFile(java.io.File)>(r4)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : return r1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r14 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r21 = $r20 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r22 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r22 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r23 = new java.lang.StringBuilder
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r23 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read master key from file: ")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read master key from file: ") >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : interfaceinvoke $r22.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r26)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : interfaceinvoke $r22.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : virtualinvoke r21.<java.lang.Exception: void printStackTrace()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : virtualinvoke r21.<java.lang.Exception: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : return r1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r5 = $r14 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r15 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r15 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read master key from file: ")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot read master key from file: ") >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : interfaceinvoke $r15.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r19)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : interfaceinvoke $r15.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : virtualinvoke r5.<java.io.IOException: void printStackTrace()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : virtualinvoke r5.<java.io.IOException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : goto [?= return r1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : goto [?= return r1] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : return r1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: void initializeFromFile(java.io.File)>(r4) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r14 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: void initializeFromFile(java.io.File)>(r4) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: void initializeFromFile(java.io.File)>(r4) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r11 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r11 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r14 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r11 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r11 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $r11 == null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $r11 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r12 = new java.lang.String
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $r11 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>(r4)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $r11 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r14 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $r11 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>(r4) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r14 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>(r4) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>(r4) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : goto [?= return r1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : goto [?= return r1] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : return r1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r12 = new java.lang.String >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r14 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r12 = new java.lang.String >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r12 = new java.lang.String >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r13 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r13 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r14 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r13 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r13 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r14 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : specialinvoke $r12.<java.lang.String: void <init>(char[])>($r13) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = $r12
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = $r12 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r14 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = $r12 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r20 := @caughtexception
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = $r12 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>(r4)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z1 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : return r1
