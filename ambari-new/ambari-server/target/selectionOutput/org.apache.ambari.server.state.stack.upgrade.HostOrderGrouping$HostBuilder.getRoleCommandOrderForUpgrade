org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.metadata.RoleCommandOrder getRoleCommandOrder()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : $r4 = virtualinvoke r2.<org.apache.ambari.server.metadata.RoleCommandOrder: java.lang.Object clone()>()
org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.metadata.RoleCommandOrder getRoleCommandOrder()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : $r5 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : r3 = $r5 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : $r6 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping: org.slf4j.Logger access$100()>()
org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : $r6 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping: org.slf4j.Logger access$100()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Unable to clone role command order and apply overrides for this upgrade", r3)
org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Unable to clone role command order and apply overrides for this upgrade", r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : r7 = virtualinvoke r2.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.LinkedHashSet getSectionKeys()>()
org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : r7 = virtualinvoke r2.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.LinkedHashSet getSectionKeys()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : virtualinvoke r7.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("host_ordered_upgrade")
org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : virtualinvoke r7.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("host_ordered_upgrade") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : virtualinvoke r2.<org.apache.ambari.server.metadata.RoleCommandOrder: void initialize(org.apache.ambari.server.state.Cluster,java.util.LinkedHashSet)>(r1, r7)
org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : virtualinvoke r2.<org.apache.ambari.server.metadata.RoleCommandOrder: void initialize(org.apache.ambari.server.state.Cluster,java.util.LinkedHashSet)>(r1, r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : return r2
org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : $r4 = virtualinvoke r2.<org.apache.ambari.server.metadata.RoleCommandOrder: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : r2 = (org.apache.ambari.server.metadata.RoleCommandOrder) $r4
org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : $r4 = virtualinvoke r2.<org.apache.ambari.server.metadata.RoleCommandOrder: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : $r5 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : r2 = (org.apache.ambari.server.metadata.RoleCommandOrder) $r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : goto [?= r7 = virtualinvoke r2.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.LinkedHashSet getSectionKeys()>()]
org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : r2 = (org.apache.ambari.server.metadata.RoleCommandOrder) $r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : $r5 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : goto [?= r7 = virtualinvoke r2.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.LinkedHashSet getSectionKeys()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping$HostBuilder.getRoleCommandOrderForUpgrade : r7 = virtualinvoke r2.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.LinkedHashSet getSectionKeys()>()
