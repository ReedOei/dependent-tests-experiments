org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r3 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r2)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r4 = $r3
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r4 = $r3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r11 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping: org.slf4j.Logger access$900()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r11 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping: org.slf4j.Logger access$900()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $z0 = interfaceinvoke $r11.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $z0 = interfaceinvoke $r11.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r12 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping: org.slf4j.Logger access$900()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r16 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r16 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r17 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map initialBatch>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r17 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map initialBatch> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r5 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List fromProxies(org.apache.ambari.server.state.stack.upgrade.Direction,java.util.Map)>($r16, $r17)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r5 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List fromProxies(org.apache.ambari.server.state.stack.upgrade.Direction,java.util.Map)>($r16, $r17) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke r4.<java.util.List: boolean addAll(java.util.Collection)>(r5)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke r4.<java.util.List: boolean addAll(java.util.Collection)>(r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $z2 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $z2 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : if $z2 != 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r18 = new org.apache.ambari.server.state.stack.upgrade.ManualTask
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r34 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r34 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r35 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map finalBatches>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r35 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map finalBatches> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r36 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List fromProxies(org.apache.ambari.server.state.stack.upgrade.Direction,java.util.Map)>($r34, $r35)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r36 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List fromProxies(org.apache.ambari.server.state.stack.upgrade.Direction,java.util.Map)>($r34, $r35) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke r4.<java.util.List: boolean addAll(java.util.Collection)>($r36)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke r4.<java.util.List: boolean addAll(java.util.Collection)>($r36) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : return r4
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r18 = new org.apache.ambari.server.state.stack.upgrade.ManualTask >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r18.<org.apache.ambari.server.state.stack.upgrade.ManualTask: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r18.<org.apache.ambari.server.state.stack.upgrade.ManualTask: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r6 = $r18
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r6 = $r18 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r19 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Batch m_batch>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r19 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Batch m_batch> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r20 = $r19.<org.apache.ambari.server.state.stack.upgrade.Batch: java.lang.String summary>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r20 = $r19.<org.apache.ambari.server.state.stack.upgrade.Batch: java.lang.String summary> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r6.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.lang.String summary> = $r20
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r6.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.lang.String summary> = $r20 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r21 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r21 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r21.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r21.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r7 = $r21
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r7 = $r21 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r22 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Batch m_batch>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r22 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Batch m_batch> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r23 = $r22.<org.apache.ambari.server.state.stack.upgrade.Batch: java.lang.String message>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r23 = $r22.<org.apache.ambari.server.state.stack.upgrade.Batch: java.lang.String message> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r23)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r6.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages> = r7
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r6.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages> = r7 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: void formatFirstBatch(org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.upgrade.ManualTask,java.util.List)>(r1, r6, r5)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: void formatFirstBatch(org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.upgrade.ManualTask,java.util.List)>(r1, r6, r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r24 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r24 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r25 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type SERVER_SIDE_ACTION>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r25 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type SERVER_SIDE_ACTION> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r26 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Validate Partial ")
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Validate Partial ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r28 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r28 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r29 = virtualinvoke $r28.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(1)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r29 = virtualinvoke $r28.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r32 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[1]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r32 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r8 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r8 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r9 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r9 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r33 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r33 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r33[0] = r6
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r33[0] = r6 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r8.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,org.apache.ambari.server.state.stack.upgrade.Task[])>(null, null, $r9, $r33)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r8.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,org.apache.ambari.server.state.stack.upgrade.Task[])>(null, null, $r9, $r33) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r32[0] = $r8
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r32[0] = $r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r24.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r25, $r31, $r32)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r24.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r25, $r31, $r32) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r10 = $r24
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r10 = $r24 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r34 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r12 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping: org.slf4j.Logger access$900()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r13 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map initialBatch>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r13 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map initialBatch> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("RU initial: {}", $r13)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("RU initial: {}", $r13) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r14 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping: org.slf4j.Logger access$900()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r14 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping: org.slf4j.Logger access$900()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r15 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map finalBatches>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r15 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map finalBatches> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("RU final: {}", $r15)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("RU final: {}", $r15) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r16 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
