org.apache.ambari.server.topology.TopologyManager.processRequest : $r4 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.processRequest: Entering")
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.processRequest: Entering") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r14 = virtualinvoke r1.<org.apache.ambari.server.topology.PersistedTopologyRequest: org.apache.ambari.server.topology.TopologyRequest getRequest()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r14 = virtualinvoke r1.<org.apache.ambari.server.topology.PersistedTopologyRequest: org.apache.ambari.server.topology.TopologyRequest getRequest()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void finalizeTopology(org.apache.ambari.server.topology.TopologyRequest,org.apache.ambari.server.topology.ClusterTopology)>($r14, r2)
org.apache.ambari.server.topology.TopologyManager.processRequest : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void finalizeTopology(org.apache.ambari.server.topology.TopologyRequest,org.apache.ambari.server.topology.ClusterTopology)>($r14, r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : r5 = specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.LogicalRequest createLogicalRequest(org.apache.ambari.server.topology.PersistedTopologyRequest,org.apache.ambari.server.topology.ClusterTopology,java.lang.Long)>(r1, r2, r3)
org.apache.ambari.server.topology.TopologyManager.processRequest : r5 = specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.LogicalRequest createLogicalRequest(org.apache.ambari.server.topology.PersistedTopologyRequest,org.apache.ambari.server.topology.ClusterTopology,java.lang.Long)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : z0 = 0
org.apache.ambari.server.topology.TopologyManager.processRequest : z0 = 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts>
org.apache.ambari.server.topology.TopologyManager.processRequest : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : r6 = $r15
org.apache.ambari.server.topology.TopologyManager.processRequest : r6 = $r15 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : entermonitor $r15
org.apache.ambari.server.topology.TopologyManager.processRequest : entermonitor $r15 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r16 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts>
org.apache.ambari.server.topology.TopologyManager.processRequest : entermonitor $r15 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r13 = $r52 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r6
org.apache.ambari.server.topology.TopologyManager.processRequest : r13 = $r52 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r6 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : throw r13
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r6 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r16 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : r7 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r16 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r7 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : if z0 != 0
org.apache.ambari.server.topology.TopologyManager.processRequest : r7 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : if z0 != 0
org.apache.ambari.server.topology.TopologyManager.processRequest : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r46 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.processRequest : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r6
org.apache.ambari.server.topology.TopologyManager.processRequest : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r6 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= return r5]
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r6 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= return r5] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : return r5
org.apache.ambari.server.topology.TopologyManager.processRequest : $r46 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $l8 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r46 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $l8 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8)
org.apache.ambari.server.topology.TopologyManager.processRequest : $l8 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r46.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.processRequest: not all required hosts have been matched, so adding LogicalRequest ID = {} to outstanding requests", $r47)
org.apache.ambari.server.topology.TopologyManager.processRequest : $r47 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r46.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.processRequest: not all required hosts have been matched, so adding LogicalRequest ID = {} to outstanding requests", $r47) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r48 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests>
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r46.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.processRequest: not all required hosts have been matched, so adding LogicalRequest ID = {} to outstanding requests", $r47) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r48 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : r49 = $r48
org.apache.ambari.server.topology.TopologyManager.processRequest : $r48 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r49 = $r48 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : entermonitor $r48
org.apache.ambari.server.topology.TopologyManager.processRequest : r49 = $r48 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : entermonitor $r48 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : entermonitor $r48 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : entermonitor $r48 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r50 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests>
org.apache.ambari.server.topology.TopologyManager.processRequest : $r50 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r50 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r50 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r50.<java.util.Collection: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r50.<java.util.Collection: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r50.<java.util.Collection: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r50.<java.util.Collection: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r49
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r49 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r49 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r49 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= exitmonitor r6]
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= exitmonitor r6] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r6
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= exitmonitor r6] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r12 = $r51 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r12 = $r51 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r12 = $r51 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r49
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r49 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r49 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r49 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : throw r12
org.apache.ambari.server.topology.TopologyManager.processRequest : throw r12 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : if $z1 == 0
org.apache.ambari.server.topology.TopologyManager.processRequest : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r17 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : if z0 != 0
org.apache.ambari.server.topology.TopologyManager.processRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r17 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : r8 = (org.apache.ambari.server.state.host.HostImpl) $r17
org.apache.ambari.server.topology.TopologyManager.processRequest : $r17 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r8 = (org.apache.ambari.server.state.host.HostImpl) $r17 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r18 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.processRequest : r8 = (org.apache.ambari.server.state.host.HostImpl) $r17 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r18 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : r9 = $r18
org.apache.ambari.server.topology.TopologyManager.processRequest : $r18 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r9 = $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : entermonitor $r18
org.apache.ambari.server.topology.TopologyManager.processRequest : r9 = $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : entermonitor $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : entermonitor $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : entermonitor $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : r10 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : r10 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r10 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r10 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r19 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.processRequest : $r19 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r19 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r19 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $z2 = interfaceinvoke $r19.<java.util.Map: boolean containsKey(java.lang.Object)>(r10)
org.apache.ambari.server.topology.TopologyManager.processRequest : $z2 = interfaceinvoke $r19.<java.util.Map: boolean containsKey(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $z2 = interfaceinvoke $r19.<java.util.Map: boolean containsKey(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $z2 = interfaceinvoke $r19.<java.util.Map: boolean containsKey(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : if $z2 == 0
org.apache.ambari.server.topology.TopologyManager.processRequest : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r20 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.processRequest : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9
org.apache.ambari.server.topology.TopologyManager.processRequest : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r11 = $r28 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r11 = $r28 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r11 = $r28 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : throw r11
org.apache.ambari.server.topology.TopologyManager.processRequest : throw r11 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= $r29 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>]
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= $r29 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r29 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= $r29 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r29 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r30 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r29 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r30 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $l2 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r30 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $l2 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.topology.TopologyManager.processRequest : $l2 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: offering host name = {} to LogicalRequest ID = {}", $r30, $r31)
org.apache.ambari.server.topology.TopologyManager.processRequest : $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: offering host name = {} to LogicalRequest ID = {}", $r30, $r31) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : r32 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r8)
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: offering host name = {} to LogicalRequest ID = {}", $r30, $r31) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : r32 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r8) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r33 = <org.apache.ambari.server.topology.TopologyManager$6: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer>
org.apache.ambari.server.topology.TopologyManager.processRequest : r32 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r8) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r33 = <org.apache.ambari.server.topology.TopologyManager$6: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r34 = virtualinvoke r32.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r33 = <org.apache.ambari.server.topology.TopologyManager$6: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r34 = virtualinvoke r32.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $i3 = virtualinvoke $r34.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r34 = virtualinvoke r32.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $i3 = virtualinvoke $r34.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $i4 = $r33[$i3]
org.apache.ambari.server.topology.TopologyManager.processRequest : $i3 = virtualinvoke $r34.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $i4 = $r33[$i3] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : tableswitch($i4) {     case 1:
org.apache.ambari.server.topology.TopologyManager.processRequest : $i4 = $r33[$i3] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : tableswitch($i4) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke r7.<java.util.Iterator: void remove()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : tableswitch($i4) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : z0 = 1
org.apache.ambari.server.topology.TopologyManager.processRequest : tableswitch($i4) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r43 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.processRequest : tableswitch($i4) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.processRequest : tableswitch($i4) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : if z0 != 0
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r43 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r44 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r43 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r44 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $l7 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r44 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $l7 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7)
org.apache.ambari.server.topology.TopologyManager.processRequest : $l7 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} was DECLINED_PREDICATE by LogicalRequest ID = {}", $r44, $r45)
org.apache.ambari.server.topology.TopologyManager.processRequest : $r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} was DECLINED_PREDICATE by LogicalRequest ID = {}", $r44, $r45) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} was DECLINED_PREDICATE by LogicalRequest ID = {}", $r44, $r45) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : z0 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r40 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.processRequest : z0 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r40 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r41 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r40 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r41 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $l6 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r41 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $l6 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6)
org.apache.ambari.server.topology.TopologyManager.processRequest : $l6 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r40.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} was DECLINED_DONE by LogicalRequest ID = {}", $r41, $r42)
org.apache.ambari.server.topology.TopologyManager.processRequest : $r42 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r40.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} was DECLINED_DONE by LogicalRequest ID = {}", $r41, $r42) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r40.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} was DECLINED_DONE by LogicalRequest ID = {}", $r41, $r42) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke r7.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r35 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke r7.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r35 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r36 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r35 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r36 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $l5 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $r36 = virtualinvoke r8.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $l5 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
org.apache.ambari.server.topology.TopologyManager.processRequest : $l5 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} was ACCEPTED by LogicalRequest ID = {} , host has been removed from available hosts.", $r36, $r37)
org.apache.ambari.server.topology.TopologyManager.processRequest : $r37 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} was ACCEPTED by LogicalRequest ID = {} , host has been removed from available hosts.", $r36, $r37) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r38 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r35.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} was ACCEPTED by LogicalRequest ID = {} , host has been removed from available hosts.", $r36, $r37) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r38 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r39 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r38)
org.apache.ambari.server.topology.TopologyManager.processRequest : $r38 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r39 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r38) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r39, r32, r8)
org.apache.ambari.server.topology.TopologyManager.processRequest : $r39 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r38) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r39, r32, r8) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.processRequest : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r39, r32, r8) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r20 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r20 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r20 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.topology.TopologyManager.processRequest : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $z3 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>($r21)
org.apache.ambari.server.topology.TopologyManager.processRequest : $z3 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $z3 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $z3 = virtualinvoke r5.<java.lang.Object: boolean equals(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : if $z3 == 0
org.apache.ambari.server.topology.TopologyManager.processRequest : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r22 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.processRequest : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r26 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.processRequest : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r26 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r26 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r26 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $l1 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $l1 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $l1 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $l1 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.topology.TopologyManager.processRequest : $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} is registered with another request, and will not be offered to LogicalRequest ID = {}", r10, $r27)
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} is registered with another request, and will not be offered to LogicalRequest ID = {}", r10, $r27) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} is registered with another request, and will not be offered to LogicalRequest ID = {}", r10, $r27) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} is registered with another request, and will not be offered to LogicalRequest ID = {}", r10, $r27) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : if z0 != 0
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r22 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r22 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r22 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $l0 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.TopologyManager.processRequest : $l0 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $l0 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $l0 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.topology.TopologyManager.processRequest : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} is mapped to LogicalRequest ID = {} and will be removed from the reserved hosts.", r10, $r23)
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} is mapped to LogicalRequest ID = {} and will be removed from the reserved hosts.", r10, $r23) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} is mapped to LogicalRequest ID = {} and will be removed from the reserved hosts.", r10, $r23) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("TopologyManager.processRequest: host name = {} is mapped to LogicalRequest ID = {} and will be removed from the reserved hosts.", r10, $r23) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r24 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.processRequest : $r24 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r24 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : $r24 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r24.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r10)
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r24.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r24.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : interfaceinvoke $r24.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= exitmonitor r9]
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= exitmonitor r9] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r28 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= exitmonitor r9] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : $r52 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.processRequest : goto [?= exitmonitor r9] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processRequest : exitmonitor r9
