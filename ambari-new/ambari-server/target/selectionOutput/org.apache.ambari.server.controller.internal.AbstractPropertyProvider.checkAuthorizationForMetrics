org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : n0 = null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r7 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractPropertyProvider: java.lang.String getResourceTypeFromResources(java.util.Set)>(r1)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r7 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractPropertyProvider: java.lang.String getResourceTypeFromResources(java.util.Set)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if r7 != null
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : return 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractPropertyProvider: java.util.Set getClustersResourceId(java.util.Set,java.lang.String)>(r1, r2)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r3 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractPropertyProvider: java.util.Set getClustersResourceId(java.util.Set,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $i0 = interfaceinvoke r3.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $i0 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $i0 != 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : return 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r8 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r8 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z0 = interfaceinvoke $r8.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z0 = interfaceinvoke $r8.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z0 == 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r9 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z1 == 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : return 1
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r5 = (java.lang.Long) $r16
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r5 = (java.lang.Long) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r6 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType valueOf(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r6 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType valueOf(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r17 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r17 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $i1 = virtualinvoke r6.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $i1 = virtualinvoke r6.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $i2 = $r17[$i1]
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $i2 = $r17[$i1] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : tableswitch($i2) {     case 1:
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r18 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r22 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r26 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r30 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r34 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r34 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String)>("Unsuported Resource Type for Metrics")
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String)>("Unsuported Resource Type for Metrics") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : return 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r30 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r31 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r32 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r31)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r32 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r31) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z5 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r30, r5, $r32)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z5 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r30, r5, $r32) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z5 != 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r33 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r33 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r33.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view Service metrics")
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r33.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view Service metrics") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : throw $r33
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r26 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r27 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r28 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r27)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r28 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z4 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r26, r5, $r28)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z4 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r26, r5, $r28) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z4 != 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r29 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r29 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r29.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view Service metrics")
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r29.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view Service metrics") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : throw $r29
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r22 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r23 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r24 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r23)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r24 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z3 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r22, r5, $r24)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z3 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r22, r5, $r24) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z3 != 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r25 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r25 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r25.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view Host metrics")
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r25.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view Host metrics") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : throw $r25
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r18 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS>
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r19 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_VIEW_METRICS> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r20 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r19)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r20 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z2 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r18, r5, $r20)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $z2 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r18, r5, $r20) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z2 != 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r21 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r21 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r21.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view cluster metrics")
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r21.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user does not have authorization to view cluster metrics") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : throw $r21
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r9 = <org.apache.ambari.server.controller.internal.AbstractPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retrieved cluster\'s Resource Id = ")
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Retrieved cluster\'s Resource Id = ") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Resource Type = ")
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Resource Type = ") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>($r15)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.checkAuthorizationForMetrics : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
