org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r2 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.io.File bootStrapDir> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.init : $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : if $z1 != 0
org.apache.ambari.server.bootstrap.BootStrapImpl.init : if $z1 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r3 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.io.File bootStrapDir>
org.apache.ambari.server.bootstrap.BootStrapImpl.init : if $z1 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : return
org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r3 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.io.File bootStrapDir> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : z0 = virtualinvoke $r3.<java.io.File: boolean mkdirs()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.init : z0 = virtualinvoke $r3.<java.io.File: boolean mkdirs()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : if z0 != 0
org.apache.ambari.server.bootstrap.BootStrapImpl.init : if z0 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r4 = new java.io.IOException
org.apache.ambari.server.bootstrap.BootStrapImpl.init : if z0 != 0 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : return
org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r4 = new java.io.IOException >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r1 = new java.lang.StringBuilder
org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.init : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to make directory for bootstrap ")
org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to make directory for bootstrap ") >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r6 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.io.File bootStrapDir>
org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r6 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.io.File bootStrapDir> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6)
org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.init : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r8)
org.apache.ambari.server.bootstrap.BootStrapImpl.init : specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.init : throw $r4
