org.apache.ambari.server.topology.HostRequest.getLogicalTasksForTopologyTask : $r2 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasksForTopologyTask : $r3 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap>
org.apache.ambari.server.topology.HostRequest.getLogicalTasksForTopologyTask : $r3 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap> >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasksForTopologyTask : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.topology.HostRequest.getLogicalTasksForTopologyTask : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasksForTopologyTask : $r5 = (java.util.Map) $r4
org.apache.ambari.server.topology.HostRequest.getLogicalTasksForTopologyTask : $r5 = (java.util.Map) $r4 >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasksForTopologyTask : specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>($r5)
org.apache.ambari.server.topology.HostRequest.getLogicalTasksForTopologyTask : specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>($r5) >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTasksForTopologyTask : return $r2
