org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("name") >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : if r2 == null
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("null")
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r5 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r5 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : specialinvoke $r5.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("All host groups must contain a \'name\' element")
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : specialinvoke $r5.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("All host groups must contain a \'name\' element") >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : throw $r5
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("null") >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : if $z0 != 0
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r5 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : if $z1 == 0
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r5 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r6 = new org.apache.ambari.server.topology.HostGroupInfo
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r6 = new org.apache.ambari.server.topology.HostGroupInfo >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : specialinvoke $r6.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>(r2)
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : specialinvoke $r6.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : r3 = $r6
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : r3 = $r6 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r7 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r7 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3)
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3) >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : specialinvoke r0.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: void processHostCountAndPredicate(java.util.Map,org.apache.ambari.server.topology.HostGroupInfo)>(r1, r3)
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : specialinvoke r0.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: void processHostCountAndPredicate(java.util.Map,org.apache.ambari.server.topology.HostGroupInfo)>(r1, r3) >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("hosts")
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("hosts") >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r10 = (java.util.Collection) $r9
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r10 = (java.util.Collection) $r9 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : specialinvoke r0.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: void processGroupHosts(java.lang.String,java.util.Collection,org.apache.ambari.server.topology.HostGroupInfo)>(r2, $r10, r3)
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : specialinvoke r0.<org.apache.ambari.server.controller.internal.ProvisionClusterRequest: void processGroupHosts(java.lang.String,java.util.Collection,org.apache.ambari.server.topology.HostGroupInfo)>(r2, $r10, r3) >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r11 = <org.apache.ambari.server.controller.internal.ProvisionClusterRequest: org.apache.ambari.server.topology.ConfigurationFactory configurationFactory>
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r11 = <org.apache.ambari.server.controller.internal.ProvisionClusterRequest: org.apache.ambari.server.topology.ConfigurationFactory configurationFactory> >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("configurations")
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("configurations") >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r13 = (java.util.Collection) $r12
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r13 = (java.util.Collection) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r14 = virtualinvoke $r11.<org.apache.ambari.server.topology.ConfigurationFactory: org.apache.ambari.server.topology.Configuration getConfiguration(java.util.Collection)>($r13)
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : $r14 = virtualinvoke $r11.<org.apache.ambari.server.topology.ConfigurationFactory: org.apache.ambari.server.topology.Configuration getConfiguration(java.util.Collection)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : virtualinvoke r3.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r14)
org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : virtualinvoke r3.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.ProvisionClusterRequest.processHostGroup : return
