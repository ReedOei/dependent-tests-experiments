org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : if $z0 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : return 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : r4 = (java.lang.String) $r5
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : r4 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : $z1 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>(r4, r2)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : $z1 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>(r4, r2) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : if $z1 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : return 1
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest.checkMetricName : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
