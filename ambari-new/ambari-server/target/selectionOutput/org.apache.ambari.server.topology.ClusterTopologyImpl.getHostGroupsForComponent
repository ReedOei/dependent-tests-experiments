org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : r3 = $r2
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : r3 = $r2 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r6 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r6 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.topology.Blueprint: java.util.Map getHostGroups()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.topology.Blueprint: java.util.Map getHostGroups()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : r4 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : r4 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : if $z0 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : return r3
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : r5 = (org.apache.ambari.server.topology.HostGroup) $r9
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : r5 = (org.apache.ambari.server.topology.HostGroup) $r9 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r10 = interfaceinvoke r5.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r10 = interfaceinvoke r5.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $z1 = interfaceinvoke $r10.<java.util.Collection: boolean contains(java.lang.Object)>(r1)
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $z1 = interfaceinvoke $r10.<java.util.Collection: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : if $z1 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r11 = interfaceinvoke r5.<org.apache.ambari.server.topology.HostGroup: java.lang.String getName()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : $r11 = interfaceinvoke r5.<org.apache.ambari.server.topology.HostGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r11)
org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.getHostGroupsForComponent : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
