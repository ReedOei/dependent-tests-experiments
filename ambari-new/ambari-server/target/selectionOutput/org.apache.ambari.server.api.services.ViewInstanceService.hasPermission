org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $r5 = r0.<org.apache.ambari.server.api.services.ViewInstanceService: org.apache.ambari.server.view.ViewRegistry viewRegistry> >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $r6 = r0.<org.apache.ambari.server.api.services.ViewInstanceService: java.lang.String viewName>
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $r6 = r0.<org.apache.ambari.server.api.services.ViewInstanceService: java.lang.String viewName> >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $r7 = r0.<org.apache.ambari.server.api.services.ViewInstanceService: java.lang.String version>
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $r7 = r0.<org.apache.ambari.server.api.services.ViewInstanceService: java.lang.String version> >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $r4 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type GET>
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $r4 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type GET> >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : if r1 != $r4
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : if r1 != $r4 >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $z0 = 1
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : if r1 != $r4 >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $z0 = 0
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $z0 = 0 >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $z1 = virtualinvoke $r5.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>($r6, $r7, r2, $z0)
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $z1 = virtualinvoke $r5.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>($r6, $r7, r2, $z0) >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : if $z1 != 0
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $r8 = new javax.ws.rs.WebApplicationException
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : return
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $r8 = new javax.ws.rs.WebApplicationException >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $r9 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status FORBIDDEN>
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $r9 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status FORBIDDEN> >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : specialinvoke $r8.<javax.ws.rs.WebApplicationException: void <init>(javax.ws.rs.core.Response$Status)>($r9)
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : specialinvoke $r8.<javax.ws.rs.WebApplicationException: void <init>(javax.ws.rs.core.Response$Status)>($r9) >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : throw $r8
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $z0 = 1 >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : goto [?= $z1 = virtualinvoke $r5.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>($r6, $r7, r2, $z0)]
org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : goto [?= $z1 = virtualinvoke $r5.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>($r6, $r7, r2, $z0)] >>>>>>>> org.apache.ambari.server.api.services.ViewInstanceService.hasPermission : $z1 = virtualinvoke $r5.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>($r6, $r7, r2, $z0)
