org.apache.ambari.server.state.host.HostTest.timeoutHost : $r2 = new org.apache.ambari.server.state.host.HostHeartbeatLostEvent >>>>>>>> org.apache.ambari.server.state.host.HostTest.timeoutHost : $r4 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.state.host.HostTest.timeoutHost : $r4 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.host.HostTest.timeoutHost : specialinvoke $r2.<org.apache.ambari.server.state.host.HostHeartbeatLostEvent: void <init>(java.lang.String)>($r4)
org.apache.ambari.server.state.host.HostTest.timeoutHost : specialinvoke $r2.<org.apache.ambari.server.state.host.HostHeartbeatLostEvent: void <init>(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.state.host.HostTest.timeoutHost : r3 = $r2
org.apache.ambari.server.state.host.HostTest.timeoutHost : r3 = $r2 >>>>>>>> org.apache.ambari.server.state.host.HostTest.timeoutHost : interfaceinvoke r1.<org.apache.ambari.server.state.Host: void handleEvent(org.apache.ambari.server.state.HostEvent)>(r3)
org.apache.ambari.server.state.host.HostTest.timeoutHost : interfaceinvoke r1.<org.apache.ambari.server.state.Host: void handleEvent(org.apache.ambari.server.state.HostEvent)>(r3) >>>>>>>> org.apache.ambari.server.state.host.HostTest.timeoutHost : return
