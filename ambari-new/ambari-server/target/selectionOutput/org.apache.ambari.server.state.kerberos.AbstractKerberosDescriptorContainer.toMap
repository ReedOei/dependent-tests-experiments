org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r1 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r5 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r5 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r5 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r6 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r5 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r16 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r16 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r16 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r16 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r17 = new java.util.TreeMap
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r16 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r31 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r31 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r31 == null
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r31 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r32 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type AUTH_TO_LOCAL_PROPERTY>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $r31 == null >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : return r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r32 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type AUTH_TO_LOCAL_PROPERTY> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r33 = virtualinvoke $r32.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: java.lang.String getDescriptorPluralName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r33 = virtualinvoke $r32.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: java.lang.String getDescriptorPluralName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r34 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r34 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r34)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r34) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : return r1
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r17 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : specialinvoke $r17.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : specialinvoke $r17.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r18 = $r17
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r18 = $r17 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r19 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r19 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r21 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r21 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z1 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z1 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z1 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r27 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type CONFIGURATION>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r27 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type CONFIGURATION> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r28 = virtualinvoke $r27.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: java.lang.String getDescriptorPluralName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r28 = virtualinvoke $r27.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: java.lang.String getDescriptorPluralName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r29 = interfaceinvoke r18.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r29 = interfaceinvoke r18.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r29)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r29) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r31 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Set authToLocalProperties>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r22 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r23 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r22
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r23 = (org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor) $r22 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r24 = virtualinvoke r23.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r24 = virtualinvoke r23.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r25 = virtualinvoke r23.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r25 = virtualinvoke r23.<org.apache.ambari.server.state.kerberos.KerberosConfigurationDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : goto [?= $z1 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : goto [?= $z1 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z1 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r6 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : specialinvoke $r6.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : specialinvoke $r6.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r2 = $r6
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r2 = $r6 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r7 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r7 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List identities> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z0 == 0
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r12 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type IDENTITY>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r12 = <org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type IDENTITY> >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r13 = virtualinvoke $r12.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: java.lang.String getDescriptorPluralName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r13 = virtualinvoke $r12.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptor$Type: java.lang.String getDescriptorPluralName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r14 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r14 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r14) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r16 = r0.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.Map configurations>
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r4 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r8
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : r4 = (org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor) $r8 >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r9 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r9 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r10 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.util.Map toMap()>()
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $r10 = virtualinvoke r4.<org.apache.ambari.server.state.kerberos.KerberosIdentityDescriptor: java.util.Map toMap()>() >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10)
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer.toMap : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
