org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void ensureInitialized()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r10 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r10 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.onHostRegistered: Entering")
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.onHostRegistered: Entering") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z0 != 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r11 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r12 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r12 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r13 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r13 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: host = {} is already associated with the cluster or is currently being processed", $r13)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: host = {} is already associated with the cluster or is currently being processed", $r13) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : return
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r11 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z2 = specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: boolean isHostIgnored(java.lang.String)>($r11)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z2 = specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: boolean isHostIgnored(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z2 == 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r12 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z1 = 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z1 = 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r2 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r2 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r14 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r14 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r3 = $r14
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r3 = $r14 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r14
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r14 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r14 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r9 = $r54 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r3
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r9 = $r54 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw r9
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r4 = $r15
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r4 = $r15 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r15
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r4 = $r15 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r15 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r15 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r15 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r16 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r16 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r16 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r16 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z3 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z3 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z3 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z3 = interfaceinvoke $r16.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z3 == 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r17 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r4
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r7 = $r29 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r7 = $r29 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r7 = $r29 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r4
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r4 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r4 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r4 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw r7
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw r7 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r4 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r4 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r4 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r30 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z5 = 1
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r3
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= return]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= return] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : return
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z5 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r45 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z5 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r45 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r46 = interfaceinvoke $r45.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r45 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r46 = interfaceinvoke $r45.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r46 = interfaceinvoke $r45.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z6 == 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r47 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z5 == 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z5 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r52 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z5 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r3
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z5 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r52 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r52.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager: Queueing available host {}", r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r52 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r52.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager: Queueing available host {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r53 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r52.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager: Queueing available host {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r53 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r53.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r53 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r53.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r3
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r53.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r47 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r48 = (org.apache.ambari.server.state.host.HostImpl) $r47
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r47 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r48 = (org.apache.ambari.server.state.host.HostImpl) $r47 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r49 = virtualinvoke r48.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r48 = (org.apache.ambari.server.state.host.HostImpl) $r47 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r49 = virtualinvoke r48.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r50 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r49 = virtualinvoke r48.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r50 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r49 != $r50
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r50 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r49 != $r50 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r51 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r49 != $r50 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r49 != $r50 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r51 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r51.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Host {} re-registered, will not be added to the available hosts list", r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r51 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r51.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Host {} re-registered, will not be added to the available hosts list", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z5 = 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r51.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Host {} re-registered, will not be added to the available hosts list", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z5 = 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z5 = 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z5 == 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r30 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r31 = $r30
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r30 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r31 = $r30 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r30
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r31 = $r30 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r30 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r30 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r30 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r32 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r32 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r32 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r32 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r33 = interfaceinvoke $r32.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r33 = interfaceinvoke $r32.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r33 = interfaceinvoke $r32.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r33 = interfaceinvoke $r32.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z4 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r31
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r8 = $r44 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r8 = $r44 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r8 = $r44 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r31
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r31 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r31 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r31 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw r8
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw r8 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r31 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r31 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r31 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z4 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z4 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z4 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z4 == 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r31
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r34 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r35 = (org.apache.ambari.server.topology.LogicalRequest) $r34
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r35 = (org.apache.ambari.server.topology.LogicalRequest) $r34 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r35 = (org.apache.ambari.server.topology.LogicalRequest) $r34 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r35 = (org.apache.ambari.server.topology.LogicalRequest) $r34 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r36 = virtualinvoke r35.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r36 = virtualinvoke r35.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r36 = virtualinvoke r35.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r36 = virtualinvoke r35.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r37 = <org.apache.ambari.server.topology.TopologyManager$6: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r37 = <org.apache.ambari.server.topology.TopologyManager$6: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r37 = <org.apache.ambari.server.topology.TopologyManager$6: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r37 = <org.apache.ambari.server.topology.TopologyManager$6: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r38 = virtualinvoke r36.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r38 = virtualinvoke r36.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r38 = virtualinvoke r36.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r38 = virtualinvoke r36.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i0 = virtualinvoke $r38.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i0 = virtualinvoke $r38.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i0 = virtualinvoke $r38.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i0 = virtualinvoke $r38.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i1 = $r37[$i0]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i1 = $r37[$i0] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i1 = $r37[$i0] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i1 = $r37[$i0] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1:
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z1 = 1
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z1 != 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_PREDICATE received for host = {}", r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_PREDICATE received for host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_PREDICATE received for host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_PREDICATE received for host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_DONE received for host = {}", r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_DONE received for host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_DONE received for host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_DONE received for host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke r33.<java.util.Iterator: void remove()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke r33.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke r33.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke r33.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z1 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z1 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z1 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r39 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r39 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r39 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r39 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for matched host = {}", r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for matched host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for matched host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for matched host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r40 = virtualinvoke r35.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r40 = virtualinvoke r35.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r40 = virtualinvoke r35.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r40 = virtualinvoke r35.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r41 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r40)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r41 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r40) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r41 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r40) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r41 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r40) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r41, r36, r1)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r41, r36, r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r41, r36, r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r41, r36, r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r17 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r17 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r17 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r5 = (org.apache.ambari.server.topology.LogicalRequest) $r18
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r5 = (org.apache.ambari.server.topology.LogicalRequest) $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r5 = (org.apache.ambari.server.topology.LogicalRequest) $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r5 = (org.apache.ambari.server.topology.LogicalRequest) $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r6 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r6 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r6 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r6 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r19 = virtualinvoke r6.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r19 = virtualinvoke r6.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r19 = virtualinvoke r6.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r19 = virtualinvoke r6.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r20 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r20 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r20 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r20 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r19 == $r20
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r19 == $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r21 = new java.lang.RuntimeException
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r19 == $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r26 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r19 == $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r19 == $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r26 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r26 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r26 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for reserved host = {}", r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for reserved host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for reserved host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for reserved host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r27 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r27 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r27 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r27 = virtualinvoke r5.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r28 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r27)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r28 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r27) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r28 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r27) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r28 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r27) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r28, r6, r1)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r28, r6, r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r28, r6, r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r28, r6, r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z1 = 1
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z1 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z1 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z1 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor r4
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r21 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r21 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r21 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r22 = new java.lang.StringBuilder
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ")
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw $r21
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw $r21 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw $r21 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r54 := @caughtexception
