org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r4 = new org.apache.ambari.server.controller.ServiceRequest >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r5 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r5 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r18 = virtualinvoke $r5.<org.apache.ambari.server.state.State: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r18 = virtualinvoke $r5.<org.apache.ambari.server.state.State: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : specialinvoke $r4.<org.apache.ambari.server.controller.ServiceRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r18)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : specialinvoke $r4.<org.apache.ambari.server.controller.ServiceRequest: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, $r18) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r6 = $r4
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r6 = $r4 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r19 = new java.util.HashSet
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r19 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : specialinvoke $r19.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : specialinvoke $r19.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r7 = $r19
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r7 = $r19 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r20 = new java.util.HashMap
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r20 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : specialinvoke $r20.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : specialinvoke $r20.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r8 = $r20
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r8 = $r20 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", "Called from a test")
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("context", "Called from a test") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r22 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r22 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r9 = staticinvoke <org.apache.ambari.server.controller.internal.ServiceResourceProviderTest: org.apache.ambari.server.controller.RequestStatusResponse updateServices(org.apache.ambari.server.controller.AmbariManagementController,java.util.Set,java.util.Map,boolean,boolean,org.apache.ambari.server.controller.MaintenanceStateHelper)>($r22, r7, r8, z0, z1, r3)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r9 = staticinvoke <org.apache.ambari.server.controller.internal.ServiceResourceProviderTest: org.apache.ambari.server.controller.RequestStatusResponse updateServices(org.apache.ambari.server.controller.AmbariManagementController,java.util.Set,java.util.Map,boolean,boolean,org.apache.ambari.server.controller.MaintenanceStateHelper)>($r22, r7, r8, z0, z1, r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r23 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r23 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r24 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r24 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r25 = interfaceinvoke $r24.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r25 = interfaceinvoke $r24.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r26 = interfaceinvoke $r25.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r26 = interfaceinvoke $r25.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r27 = interfaceinvoke $r26.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r27 = interfaceinvoke $r26.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r27)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r23, $r27) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if r9 == null
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if r9 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r28 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.actionmanager.ActionDBAccessor actionDB>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if r9 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : return -1L
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r28 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.actionmanager.ActionDBAccessor actionDB> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $l0 = virtualinvoke r9.<org.apache.ambari.server.controller.RequestStatusResponse: long getRequestId()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $l0 = virtualinvoke r9.<org.apache.ambari.server.controller.RequestStatusResponse: long getRequestId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r10 = interfaceinvoke $r28.<org.apache.ambari.server.actionmanager.ActionDBAccessor: java.util.List getRequestTasks(long)>($l0)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r10 = interfaceinvoke $r28.<org.apache.ambari.server.actionmanager.ActionDBAccessor: java.util.List getRequestTasks(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r11 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r11 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z3 == 0
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r29 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $l1 = virtualinvoke r9.<org.apache.ambari.server.controller.RequestStatusResponse: long getRequestId()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $l1 = virtualinvoke r9.<org.apache.ambari.server.controller.RequestStatusResponse: long getRequestId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : return $l1
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r29 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r12 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r29
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r12 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r29 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r30 = virtualinvoke r12.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.Role getRole()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r30 = virtualinvoke r12.<org.apache.ambari.server.actionmanager.HostRoleCommand: org.apache.ambari.server.Role getRole()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r13 = virtualinvoke $r30.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r13 = virtualinvoke $r30.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z4 = virtualinvoke r13.<java.lang.String: boolean endsWith(java.lang.String)>("CHECK")
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z4 = virtualinvoke r13.<java.lang.String: boolean endsWith(java.lang.String)>("CHECK") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z4 != 0
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r31 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r31 = <org.apache.ambari.server.controller.AmbariManagementControllerTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r14 = interfaceinvoke $r31.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r14 = interfaceinvoke $r31.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r15 = virtualinvoke r12.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getHostName()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r15 = virtualinvoke r12.<org.apache.ambari.server.actionmanager.HostRoleCommand: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r32 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r32 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r33 = interfaceinvoke $r32.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r33 = interfaceinvoke $r32.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r16 = interfaceinvoke $r33.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r16 = interfaceinvoke $r33.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z5 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z5 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z5 == 0
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r34 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r34 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r17 = (org.apache.ambari.server.state.Service) $r34
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : r17 = (org.apache.ambari.server.state.Service) $r34 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r35 = interfaceinvoke r17.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r35 = interfaceinvoke r17.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z6 = interfaceinvoke $r35.<java.util.Map: boolean containsKey(java.lang.Object)>(r13)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z6 = interfaceinvoke $r35.<java.util.Map: boolean containsKey(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z6 == 0
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r36 = interfaceinvoke r17.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r13)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z5 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z5 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z5 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r36 = interfaceinvoke r17.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z7 = interfaceinvoke $r36.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>()
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $z7 = interfaceinvoke $r36.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z7 != 0
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r37 = interfaceinvoke r17.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r13)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z5 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r37 = interfaceinvoke r17.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r38 = interfaceinvoke $r37.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r15)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r38 = interfaceinvoke $r37.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r15) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r39 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : $r39 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : interfaceinvoke $r38.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r39)
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : interfaceinvoke $r38.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r39) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= (branch)]
org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerTest.startService : goto [?= $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
