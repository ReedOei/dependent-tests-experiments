org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : r3 = null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r6 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.AmbariManagementController managementController>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : r3 = null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r12 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : r13 = $r12 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r14 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r14 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Exception in getting host names for jmx metrics: ", r13)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Exception in getting host names for jmx metrics: ", r13) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : return r3
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r6 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r6 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r12 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : r4 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r12 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : r4 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r8 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.AmbariManagementController managementController>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : r4 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r12 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r8 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : r5 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String findServiceName(org.apache.ambari.server.state.Cluster,java.lang.String)>(r4, r2)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r8 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r12 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : r5 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String findServiceName(org.apache.ambari.server.state.Cluster,java.lang.String)>(r4, r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r9 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : r5 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String findServiceName(org.apache.ambari.server.state.Cluster,java.lang.String)>(r4, r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r12 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r9 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r2)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r9 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r12 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r12 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : r3 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r12 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : r3 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : goto [?= return r3]
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : r3 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : $r12 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : goto [?= return r3] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostNames : return r3
