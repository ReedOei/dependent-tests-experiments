org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r1 = new org.apache.ambari.server.controller.HostResponse >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r3 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : specialinvoke $r1.<org.apache.ambari.server.controller.HostResponse: void <init>(java.lang.String)>($r3)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : specialinvoke $r1.<org.apache.ambari.server.controller.HostResponse: void <init>(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : r2 = $r1
org.apache.ambari.server.state.host.HostImpl.convertToResponse : r2 = $r1 >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.state.AgentVersion getAgentVersion()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.state.AgentVersion getAgentVersion()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setAgentVersion(org.apache.ambari.server.state.AgentVersion)>($r4)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setAgentVersion(org.apache.ambari.server.state.AgentVersion)>($r4) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $l0 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: long getAvailableMemBytes()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $l0 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: long getAvailableMemBytes()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setAvailableMemBytes(long)>($l0)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setAvailableMemBytes(long)>($l0) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $i1 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: int getPhCpuCount()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $i1 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: int getPhCpuCount()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setPhCpuCount(int)>($i1)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setPhCpuCount(int)>($i1) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $i2 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: int getCpuCount()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $i2 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: int getCpuCount()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setCpuCount(int)>($i2)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setCpuCount(int)>($i2) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.util.List getDisksInfo()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.util.List getDisksInfo()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setDisksInfo(java.util.List)>($r5)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setDisksInfo(java.util.List)>($r5) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.state.HostHealthStatus getHealthStatus()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.state.HostHealthStatus getHealthStatus()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setHealthStatus(org.apache.ambari.server.state.HostHealthStatus)>($r6)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setHealthStatus(org.apache.ambari.server.state.HostHealthStatus)>($r6) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.util.Map getHostAttributes()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.util.Map getHostAttributes()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setHostAttributes(java.util.Map)>($r7)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setHostAttributes(java.util.Map)>($r7) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getIPv4()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r8 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getIPv4()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setIpv4(java.lang.String)>($r8)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setIpv4(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r9 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getIPv6()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r9 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getIPv6()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setIpv6(java.lang.String)>($r9)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setIpv6(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $l3 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: long getLastHeartbeatTime()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $l3 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: long getLastHeartbeatTime()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setLastHeartbeatTime(long)>($l3)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setLastHeartbeatTime(long)>($l3) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r10 = r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.agent.AgentEnv lastAgentEnv>
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r10 = r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.agent.AgentEnv lastAgentEnv> >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setLastAgentEnv(org.apache.ambari.server.agent.AgentEnv)>($r10)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setLastAgentEnv(org.apache.ambari.server.agent.AgentEnv)>($r10) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $l4 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: long getLastRegistrationTime()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $l4 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: long getLastRegistrationTime()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setLastRegistrationTime(long)>($l4)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setLastRegistrationTime(long)>($l4) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getOsArch()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getOsArch()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setOsArch(java.lang.String)>($r11)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setOsArch(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r12 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getOsInfo()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r12 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getOsInfo()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setOsInfo(java.lang.String)>($r12)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setOsInfo(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getOsType()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r13 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setOsType(java.lang.String)>($r13)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setOsType(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r14 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getRackInfo()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r14 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getRackInfo()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setRackInfo(java.lang.String)>($r14)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setRackInfo(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $l5 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: long getTotalMemBytes()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $l5 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: long getTotalMemBytes()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setTotalMemBytes(long)>($l5)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setTotalMemBytes(long)>($l5) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r15 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getPublicHostName()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r15 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getPublicHostName()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setPublicHostName(java.lang.String)>($r15)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setPublicHostName(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r16 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.state.HostState getState()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r16 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.state.HostState getState()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r17 = virtualinvoke $r16.<org.apache.ambari.server.state.HostState: java.lang.String toString()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r17 = virtualinvoke $r16.<org.apache.ambari.server.state.HostState: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setHostState(java.lang.String)>($r17)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setHostState(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r18 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getStatus()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r18 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getStatus()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setStatus(java.lang.String)>($r18)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setStatus(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r19 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.agent.RecoveryReport getRecoveryReport()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r19 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.agent.RecoveryReport getRecoveryReport()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setRecoveryReport(org.apache.ambari.server.agent.RecoveryReport)>($r19)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setRecoveryReport(org.apache.ambari.server.agent.RecoveryReport)>($r19) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r20 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.agent.RecoveryReport getRecoveryReport()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r20 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.agent.RecoveryReport getRecoveryReport()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r21 = virtualinvoke $r20.<org.apache.ambari.server.agent.RecoveryReport: java.lang.String getSummary()>()
org.apache.ambari.server.state.host.HostImpl.convertToResponse : $r21 = virtualinvoke $r20.<org.apache.ambari.server.agent.RecoveryReport: java.lang.String getSummary()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setRecoverySummary(java.lang.String)>($r21)
org.apache.ambari.server.state.host.HostImpl.convertToResponse : virtualinvoke r2.<org.apache.ambari.server.controller.HostResponse: void setRecoverySummary(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.convertToResponse : return r2
