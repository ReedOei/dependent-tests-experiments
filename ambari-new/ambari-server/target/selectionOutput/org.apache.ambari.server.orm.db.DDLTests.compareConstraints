org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r4 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r5 = $r4
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r5 = $r4 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r6 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r6 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r7 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r7 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r8 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r8 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z1 == 0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r13 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r16 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r16 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z2 == 0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r21 = newarray (java.lang.Object)[2]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r21 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r21[0] = r1
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r21[0] = r1 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r21[1] = r0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r21[1] = r0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Comparing %ss of table %s.", $r21)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Comparing %ss of table %s.", $r21) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r23 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r23 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r24 = interfaceinvoke r7.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r24 = interfaceinvoke r7.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r25 = staticinvoke <org.apache.ambari.server.orm.db.DDLTests: java.util.List compareSets(java.lang.String,java.util.Set,java.util.Set)>($r22, $r23, $r24)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r25 = staticinvoke <org.apache.ambari.server.orm.db.DDLTests: java.util.List compareSets(java.lang.String,java.util.Set,java.util.Set)>($r22, $r23, $r24) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r25)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r25) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r26 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r26 = interfaceinvoke r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r27 = interfaceinvoke r7.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r27 = interfaceinvoke r7.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r28 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set)>($r26, $r27)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r28 = staticinvoke <com.google.common.collect.Sets: com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set)>($r26, $r27) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r29 = interfaceinvoke r28.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r29 = interfaceinvoke r28.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z4 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z4 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z4 == 0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z4 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r10 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z4 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : return r5
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r10 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r30 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r30 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r11 = (org.apache.ambari.server.orm.db.Constraint) $r30
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r11 = (org.apache.ambari.server.orm.db.Constraint) $r30 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r31 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r31 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r12 = (org.apache.ambari.server.orm.db.Constraint) $r31
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r12 = (org.apache.ambari.server.orm.db.Constraint) $r31 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r32 = virtualinvoke r11.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r32 = virtualinvoke r11.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r33 = virtualinvoke r12.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r33 = virtualinvoke r12.<org.apache.ambari.server.orm.db.Constraint: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z5 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r33)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z5 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z5 != 0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if z0 == 0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z4 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z4 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z4 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r34 = newarray (java.lang.Object)[3]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : if z0 == 0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r36 = <org.apache.ambari.server.orm.db.DDLTests: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r36 = <org.apache.ambari.server.orm.db.DDLTests: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r37 = newarray (java.lang.Object)[3]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r37 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r37[0] = r0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r37[0] = r0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r37[1] = r11
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r37[1] = r11 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r37[2] = r12
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r37[2] = r12 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Ignoring constraint name mismatch for table {}: {} vs. {}", $r37)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Ignoring constraint name mismatch for table {}: {} vs. {}", $r37) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z4 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r34 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r34[0] = r0
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r34[0] = r0 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r34[1] = r11
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r34[1] = r11 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r34[2] = r12
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r34[2] = r12 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Constraint name mismatch for table %s: %s vs. %s", $r34)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Constraint name mismatch for table %s: %s vs. %s", $r34) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r35)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= (branch)]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z4 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r18 = (org.apache.ambari.server.orm.db.Constraint) $r17
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r18 = (org.apache.ambari.server.orm.db.Constraint) $r17 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r19 = virtualinvoke r18.<org.apache.ambari.server.orm.db.Constraint: java.lang.Object content()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r19 = virtualinvoke r18.<org.apache.ambari.server.orm.db.Constraint: java.lang.Object content()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r18)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r18) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r13 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r9 = (org.apache.ambari.server.orm.db.Constraint) $r13
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : r9 = (org.apache.ambari.server.orm.db.Constraint) $r13 >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r14 = virtualinvoke r9.<org.apache.ambari.server.orm.db.Constraint: java.lang.Object content()>()
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $r14 = virtualinvoke r9.<org.apache.ambari.server.orm.db.Constraint: java.lang.Object content()>() >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r9)
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r9) >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.db.DDLTests.compareConstraints : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.db.DDLTests.compareConstraints : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
