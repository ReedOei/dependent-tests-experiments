org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r4 = $r3
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r4 = $r3 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: java.util.Set getRequestPropertyIds(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: java.util.Set getRequestPropertyIds(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r6 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: java.util.Set getPropertyMaps(org.apache.ambari.server.controller.spi.Predicate)>(r2)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r6 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: java.util.Set getPropertyMaps(org.apache.ambari.server.controller.spi.Predicate)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z0 = interfaceinvoke r6.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z0 = interfaceinvoke r6.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z0 == 0
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r13 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r7 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r7 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z2 == 0
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : return r4
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r8 = (java.util.Map) $r14
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r8 = (java.util.Map) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r15 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("ClusterInfo/name")
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r15 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>("ClusterInfo/name") >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r9 = (java.lang.String) $r15
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r9 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z3 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r9)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z3 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z3 != 0
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r16 = <org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO remoteAmbariClusterDAO>
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r21 = <org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO remoteAmbariClusterDAO>
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r21 = <org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO remoteAmbariClusterDAO> >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r22 = virtualinvoke $r21.<org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r22 = virtualinvoke $r21.<org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r23 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r23 = interfaceinvoke $r22.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z5 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z5 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z5 == 0
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r24 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r24 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r11 = (org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity) $r24
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r11 = (org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity) $r24 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r12 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.controller.spi.Resource toResource(java.util.Set,org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity)>(r5, r11)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r12 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.controller.spi.Resource toResource(java.util.Set,org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity)>(r5, r11) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r12)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= $z5 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= $z5 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z5 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r16 = <org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO remoteAmbariClusterDAO> >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r10 = virtualinvoke $r16.<org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO: org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity findByName(java.lang.String)>(r9)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r10 = virtualinvoke $r16.<org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO: org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity findByName(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if r10 != null
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if r10 != null >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r17 = new org.apache.ambari.server.controller.spi.NoSuchResourceException
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if r10 != null >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.controller.spi.Resource toResource(java.util.Set,org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity)>(r5, r10)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.controller.spi.Resource toResource(java.util.Set,org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity)>(r5, r10) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r20)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= (branch)]
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r17 = new org.apache.ambari.server.controller.spi.NoSuchResourceException >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r18 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r18 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r18[0] = r9
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r18[0] = r9 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cluster with name %s cannot be found", $r18)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cluster with name %s cannot be found", $r18) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : specialinvoke $r17.<org.apache.ambari.server.controller.spi.NoSuchResourceException: void <init>(java.lang.String)>($r19)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : specialinvoke $r17.<org.apache.ambari.server.controller.spi.NoSuchResourceException: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : throw $r17
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r13 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r13)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r7 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>()
