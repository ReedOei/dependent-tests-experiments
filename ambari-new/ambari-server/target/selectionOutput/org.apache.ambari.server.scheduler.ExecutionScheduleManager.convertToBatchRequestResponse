org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r2 = new org.apache.ambari.server.state.scheduler.BatchRequestResponse >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : specialinvoke $r2.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : specialinvoke $r2.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r3 = $r2
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r3 = $r2 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : i0 = virtualinvoke r1.<com.sun.jersey.api.client.ClientResponse: int getStatus()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : i0 = virtualinvoke r1.<com.sun.jersey.api.client.ClientResponse: int getStatus()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setReturnCode(int)>(i0)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setReturnCode(int)>(i0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r9 = virtualinvoke r1.<com.sun.jersey.api.client.ClientResponse: java.lang.Object getEntity(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r9 = virtualinvoke r1.<com.sun.jersey.api.client.ClientResponse: java.lang.Object getEntity(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r4 = (java.lang.String) $r9
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r4 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r10 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r10 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Processing API response: status={}, body={}", $r11, r4)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Processing API response: status={}, body={}", $r11, r4) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r12 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: com.google.gson.Gson gson>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Processing API response: status={}, body={}", $r11, r4) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r6 = $r15 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r16 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r16 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>("Response is not valid JSON object. Recording as is")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>("Response is not valid JSON object. Recording as is") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r17 = new java.util.HashMap
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r17 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : specialinvoke $r17.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : specialinvoke $r17.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r5 = $r17
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r5 = $r17 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("message", r4)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("message", r4) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if i0 >= 300
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if i0 >= 300 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r5 != null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if i0 >= 300 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r41 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("message")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r41 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("message") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r42 = (java.lang.String) $r41
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r42 = (java.lang.String) $r41 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setReturnMessage(java.lang.String)>($r42)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setReturnMessage(java.lang.String)>($r42) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r43 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r43 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r44 = virtualinvoke $r43.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r44 = virtualinvoke $r43.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>($r44)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>($r44) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : return r3
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r5 != null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r19 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r5 != null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r21 = null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r21 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r7 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("Requests")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r7 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("Requests") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $z0 = r7 instanceof java.util.Map
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $z0 = r7 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $z0 == 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $z0 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r21 = (java.util.Map) r7
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $z0 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r21 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r21 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r22 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("id")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r21 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : goto [?= return r3]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : goto [?= return r3] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : return r3
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r22 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("id") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r23 = (java.lang.Double) $r22
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r23 = (java.lang.Double) $r22 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $l1 = virtualinvoke $r23.<java.lang.Double: long longValue()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $l1 = virtualinvoke $r23.<java.lang.Double: long longValue()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setRequestId(java.lang.Long)>($r24)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setRequestId(java.lang.Long)>($r24) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r8 = null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r8 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r25 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("request_status")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r25 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("request_status") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r25 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r25 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r26 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("request_status")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r25 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r27 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("status")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r27 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("status") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r27 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r27 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r28 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("status")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r27 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r29 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("aborted_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r29 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("aborted_task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r29 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r29 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r30 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("aborted_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r29 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r32 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("failed_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r32 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("failed_task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r32 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r32 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r33 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("failed_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r32 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r35 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("timed_out_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r35 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("timed_out_task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r35 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r35 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r36 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("timed_out_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r35 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r38 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r38 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r38 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r38 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r39 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if $r38 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>(r8)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : goto [?= return r3]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r39 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r40 = (java.lang.Double) $r39
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r40 = (java.lang.Double) $r39 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i5 = virtualinvoke $r40.<java.lang.Double: int intValue()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i5 = virtualinvoke $r40.<java.lang.Double: int intValue()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setTotalTaskCount(int)>($i5)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setTotalTaskCount(int)>($i5) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>(r8)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r36 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("timed_out_task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r37 = (java.lang.Double) $r36
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r37 = (java.lang.Double) $r36 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i4 = virtualinvoke $r37.<java.lang.Double: int intValue()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i4 = virtualinvoke $r37.<java.lang.Double: int intValue()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setTimedOutTaskCount(int)>($i4)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setTimedOutTaskCount(int)>($i4) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r38 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r33 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("failed_task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r34 = (java.lang.Double) $r33
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r34 = (java.lang.Double) $r33 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i3 = virtualinvoke $r34.<java.lang.Double: int intValue()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i3 = virtualinvoke $r34.<java.lang.Double: int intValue()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setFailedTaskCount(int)>($i3)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setFailedTaskCount(int)>($i3) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r35 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("timed_out_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r30 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("aborted_task_count") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r31 = (java.lang.Double) $r30
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r31 = (java.lang.Double) $r30 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i2 = virtualinvoke $r31.<java.lang.Double: int intValue()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $i2 = virtualinvoke $r31.<java.lang.Double: int intValue()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setAbortedTaskCount(int)>($i2)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setAbortedTaskCount(int)>($i2) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r32 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("failed_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r28 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("status") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r8 = virtualinvoke $r28.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r8 = virtualinvoke $r28.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r29 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("aborted_task_count")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r26 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("request_status") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r8 = virtualinvoke $r26.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r8 = virtualinvoke $r26.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r27 = interfaceinvoke r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("status")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r21 = (java.util.Map) r7 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if r21 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r19 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r20 = virtualinvoke $r19.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r20 = virtualinvoke $r19.<org.apache.ambari.server.actionmanager.HostRoleStatus: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>($r20)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: void setStatus(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : return r3
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r12 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r13 = virtualinvoke $r12.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r4, class "java/util/Map")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r12 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r13 = virtualinvoke $r12.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r4, class "java/util/Map") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r5 = (java.util.Map) $r13
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r13 = virtualinvoke $r12.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r4, class "java/util/Map") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r5 = (java.util.Map) $r13 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r14 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : r5 = (java.util.Map) $r13 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r14 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String)>("Processing responce as JSON")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r14 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String)>("Processing responce as JSON") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : goto [?= (branch)]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String)>("Processing responce as JSON") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : $r15 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.convertToBatchRequestResponse : if i0 >= 300
