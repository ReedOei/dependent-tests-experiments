org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i0)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(3, $i0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : if $z0 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : return
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : r3 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r4
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : r3 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r4 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r5 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("principal_name")
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("principal_name") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r6 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r9 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("is_service")
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("is_service") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : if $z3 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r14 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r14 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z5 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("cached_keytab_path")
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z5 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("cached_keytab_path") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : if $z5 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r15 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void fail(java.lang.String)>("unexpected column name")
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void fail(java.lang.String)>("unexpected column name") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r15 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertNull(java.lang.Object)>($r15)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertNull(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r16 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r16 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "java/lang/String", $r16)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "java/lang/String", $r16) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r17 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r17 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $i3 = virtualinvoke $r17.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $i3 = virtualinvoke $r17.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(255, $i3)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(255, $i3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z6 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z6 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z6)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(1, $z6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : goto [?= (branch)]
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r11 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r11 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r10, $r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r12 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r12 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "java/lang/Short", $r12)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "java/lang/Short", $r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r13 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r13 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $i2 = virtualinvoke $r13.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $i2 = virtualinvoke $r13.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(1, $i2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z4 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z4 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(0, $z4)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(0, $z4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : goto [?= (branch)]
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r6 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertNull(java.lang.Object)>($r6)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertNull(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r7 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r7 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Class getType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "java/lang/String", $r7)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(class "java/lang/String", $r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r8 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $r8 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: java.lang.Integer getLength()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(255, $i1)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(255, $i1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z2 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>()
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : $z2 = virtualinvoke r3.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: boolean isNullable()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(0, $z2)
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : staticinvoke <junit.framework.Assert: void assertEquals(boolean,boolean)>(0, $z2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : goto [?= (branch)]
org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog200Test.testCreateKerberosPrincipalTable : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
