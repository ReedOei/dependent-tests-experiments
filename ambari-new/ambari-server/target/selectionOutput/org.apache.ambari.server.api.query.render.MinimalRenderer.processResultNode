org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r12 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r2 = (org.apache.ambari.server.controller.spi.Resource) $r12
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r2 = (org.apache.ambari.server.controller.spi.Resource) $r12 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if r2 == null
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if r2 == null >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r13 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if r2 == null >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r27 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r27 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r28 = interfaceinvoke $r27.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r28 = interfaceinvoke $r27.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z7 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z7 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z7 == 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z7 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r29 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z7 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : return
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r29 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r30 = (org.apache.ambari.server.api.util.TreeNode) $r29
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r30 = (org.apache.ambari.server.api.util.TreeNode) $r29 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: void processResultNode(org.apache.ambari.server.api.util.TreeNode)>(r30)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: void processResultNode(org.apache.ambari.server.api.util.TreeNode)>(r30) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z7 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z7 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z7 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r13 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r14 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: org.apache.ambari.server.controller.spi.Resource$Type m_rootType>
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r14 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: org.apache.ambari.server.controller.spi.Resource$Type m_rootType> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $r13 != $r14
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $r13 != $r14 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z0 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: boolean m_isCollection>
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $r13 != $r14 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r3 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r3 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r15 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: java.util.Map m_originalProperties>
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r15 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: java.util.Map m_originalProperties> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r4 = (java.util.Set) $r16
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r4 = (java.util.Set) $r16 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r5 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: java.util.Map getPropertiesMap()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r5 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: java.util.Map getPropertiesMap()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r17 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r17 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r6 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r6 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z1 == 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r27 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r7 = (java.util.Map$Entry) $r18
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r7 = (java.util.Map$Entry) $r18 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r19 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r19 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r8 = (java.lang.String) $r19
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r8 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r20 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r20 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r21 = (java.util.Map) $r20
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r21 = (java.util.Map) $r20 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r22 = interfaceinvoke $r21.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r22 = interfaceinvoke $r21.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r9 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r9 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z2 == 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z2 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r23 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z2 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r25 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r25 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r26 = (java.util.Map) $r25
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r26 = (java.util.Map) $r25 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z6 = interfaceinvoke $r26.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z6 = interfaceinvoke $r26.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z6 == 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z6 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : interfaceinvoke r6.<java.util.Iterator: void remove()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z6 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : interfaceinvoke r6.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r23 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r10 = (java.lang.String) $r23
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r10 = (java.lang.String) $r23 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r11 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>(r8, r10)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r11 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>(r8, r10) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if r4 == null
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if r4 == null >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z3 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r11)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if r4 == null >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r24 = specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: java.util.Set getPrimaryKeys(org.apache.ambari.server.controller.spi.Resource$Type)>(r3)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r24 = specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: java.util.Set getPrimaryKeys(org.apache.ambari.server.controller.spi.Resource$Type)>(r3) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z5 = interfaceinvoke $r24.<java.util.Set: boolean contains(java.lang.Object)>(r11)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z5 = interfaceinvoke $r24.<java.util.Set: boolean contains(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z5 != 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z5 != 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : interfaceinvoke r9.<java.util.Iterator: void remove()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z5 != 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : interfaceinvoke r9.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z3 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z3 != 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z3 != 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z4 = specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: boolean isSubCategory(java.util.Set,java.lang.String)>(r4, r8)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z3 != 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z4 = specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: boolean isSubCategory(java.util.Set,java.lang.String)>(r4, r8) >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z4 != 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z4 != 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r24 = specialinvoke r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: java.util.Set getPrimaryKeys(org.apache.ambari.server.controller.spi.Resource$Type)>(r3)
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z4 != 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $z0 = r0.<org.apache.ambari.server.api.query.render.MinimalRenderer: boolean m_isCollection> >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z0 == 0
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : r3 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Resource: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.MinimalRenderer.processResultNode : $r27 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
