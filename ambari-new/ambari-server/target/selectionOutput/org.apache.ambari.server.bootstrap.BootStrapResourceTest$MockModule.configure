org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r2 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/bootstrap/BootStrapImpl") >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : r1 = (org.apache.ambari.server.bootstrap.BootStrapImpl) $r2
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : r1 = (org.apache.ambari.server.bootstrap.BootStrapImpl) $r2 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.BootStrapImpl: org.apache.ambari.server.bootstrap.BootStrapStatus getStatus(long)>(0L)
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.BootStrapImpl: org.apache.ambari.server.bootstrap.BootStrapStatus getStatus(long)>(0L) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r4 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r3)
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r4 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r5 = r0.<org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule: org.apache.ambari.server.bootstrap.BootStrapResourceTest this$0>
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r5 = r0.<org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule: org.apache.ambari.server.bootstrap.BootStrapResourceTest this$0> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.bootstrap.BootStrapResourceTest: org.apache.ambari.server.bootstrap.BootStrapStatus generateDummyBSStatus()>()
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.bootstrap.BootStrapResourceTest: org.apache.ambari.server.bootstrap.BootStrapStatus generateDummyBSStatus()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : interfaceinvoke $r4.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r6)
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : interfaceinvoke $r4.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r8 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "org/apache/ambari/server/bootstrap/SshHostInfo")
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r8 = staticinvoke <org.mockito.Matchers: java.lang.Object any(java.lang.Class)>(class "org/apache/ambari/server/bootstrap/SshHostInfo") >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r9 = (org.apache.ambari.server.bootstrap.SshHostInfo) $r8
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r9 = (org.apache.ambari.server.bootstrap.SshHostInfo) $r8 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r10 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.BootStrapImpl: org.apache.ambari.server.bootstrap.BSResponse runBootStrap(org.apache.ambari.server.bootstrap.SshHostInfo)>($r9)
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r10 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.BootStrapImpl: org.apache.ambari.server.bootstrap.BSResponse runBootStrap(org.apache.ambari.server.bootstrap.SshHostInfo)>($r9) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r11 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r10)
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r11 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r12 = r0.<org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule: org.apache.ambari.server.bootstrap.BootStrapResourceTest this$0>
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r12 = r0.<org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule: org.apache.ambari.server.bootstrap.BootStrapResourceTest this$0> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r13 = virtualinvoke $r12.<org.apache.ambari.server.bootstrap.BootStrapResourceTest: org.apache.ambari.server.bootstrap.BSResponse generateBSResponse()>()
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r13 = virtualinvoke $r12.<org.apache.ambari.server.bootstrap.BootStrapResourceTest: org.apache.ambari.server.bootstrap.BSResponse generateBSResponse()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : interfaceinvoke $r11.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r13)
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : interfaceinvoke $r11.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/bootstrap/BootStrapImpl")
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/bootstrap/BootStrapImpl") >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1)
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r16 = newarray (java.lang.Class)[1]
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r16 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r16[0] = class "org/apache/ambari/server/api/rest/BootStrapResource"
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : $r16[0] = class "org/apache/ambari/server/api/rest/BootStrapResource" >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : virtualinvoke r0.<org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule: void requestStaticInjection(java.lang.Class[])>($r16)
org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : virtualinvoke r0.<org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule: void requestStaticInjection(java.lang.Class[])>($r16) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapResourceTest$MockModule.configure : return
