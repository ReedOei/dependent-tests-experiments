org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r2.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r3 = $r2
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r3 = $r2 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r5 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r5 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r6 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getOsType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r6 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r7 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.Long getRepositoryVersionId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r7 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.Long getRepositoryVersionId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r8 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getVersionDefinitionId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r8 = virtualinvoke r1.<org.apache.ambari.server.controller.OperatingSystemRequest: java.lang.String getVersionDefinitionId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null != r7
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null != r7 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r8
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null != r7 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r7 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r7 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r14 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r7 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r8
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r8 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r23 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r8 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r6 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r6 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r41 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r6 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r44 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r44 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r45 = virtualinvoke $r44.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Set getOperatingSystems(java.lang.String,java.lang.String)>(r4, r5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r45 = virtualinvoke $r44.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Set getOperatingSystems(java.lang.String,java.lang.String)>(r4, r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r46 = interfaceinvoke r45.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r46 = interfaceinvoke r45.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z6 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r47 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : return r3
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r47 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r48 = (org.apache.ambari.server.state.OperatingSystemInfo) $r47
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r48 = (org.apache.ambari.server.state.OperatingSystemInfo) $r47 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r49 = virtualinvoke r48.<org.apache.ambari.server.state.OperatingSystemInfo: org.apache.ambari.server.controller.OperatingSystemResponse convertToResponse()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r49 = virtualinvoke r48.<org.apache.ambari.server.state.OperatingSystemInfo: org.apache.ambari.server.controller.OperatingSystemResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r49)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r41 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r42 = virtualinvoke $r41.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.OperatingSystemInfo getOperatingSystem(java.lang.String,java.lang.String,java.lang.String)>(r4, r5, r6)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r42 = virtualinvoke $r41.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.OperatingSystemInfo getOperatingSystem(java.lang.String,java.lang.String,java.lang.String)>(r4, r5, r6) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r43 = virtualinvoke r42.<org.apache.ambari.server.state.OperatingSystemInfo: org.apache.ambari.server.controller.OperatingSystemResponse convertToResponse()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r43 = virtualinvoke r42.<org.apache.ambari.server.state.OperatingSystemInfo: org.apache.ambari.server.controller.OperatingSystemResponse convertToResponse()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r43)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r3]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r3] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : return r3
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r23 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r24 = virtualinvoke $r23.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.repository.VersionDefinitionXml getVersionDefinition(java.lang.String)>(r8)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r24 = virtualinvoke $r23.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.repository.VersionDefinitionXml getVersionDefinition(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null != r24
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null != r24 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r25 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null != r24 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r28 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r28 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r29 = r24.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r29 = r24.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r30 = $r29.<org.apache.ambari.server.state.repository.Release: java.lang.String stackId>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r30 = $r29.<org.apache.ambari.server.state.repository.Release: java.lang.String stackId> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r28.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>($r30)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r28.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r31 = $r28
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r31 = $r28 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r32 = r24.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r32 = r24.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.stack.RepositoryXml repositoryInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r33 = virtualinvoke $r32.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r33 = virtualinvoke $r32.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r34 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r34 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z4 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z4 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z4 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r35 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r3]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r3] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : return r3
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r35 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r36 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r35
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r36 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r35 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r37 = new org.apache.ambari.server.controller.OperatingSystemResponse
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r37 = new org.apache.ambari.server.controller.OperatingSystemResponse >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r38 = virtualinvoke r36.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.lang.String getFamily()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r38 = virtualinvoke r36.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.lang.String getFamily()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r37.<org.apache.ambari.server.controller.OperatingSystemResponse: void <init>(java.lang.String)>($r38)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r37.<org.apache.ambari.server.controller.OperatingSystemResponse: void <init>(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r13 = $r37
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r13 = $r37 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r13.<org.apache.ambari.server.controller.OperatingSystemResponse: void setVersionDefinitionId(java.lang.String)>(r8)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r13.<org.apache.ambari.server.controller.OperatingSystemResponse: void setVersionDefinitionId(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r39 = virtualinvoke r31.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r39 = virtualinvoke r31.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r13.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackName(java.lang.String)>($r39)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r13.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackName(java.lang.String)>($r39) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r40 = virtualinvoke r31.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r40 = virtualinvoke r31.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r13.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackVersion(java.lang.String)>($r40)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r13.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackVersion(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r13)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $z4 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $z4 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z4 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r25 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r26 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r26 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r26[0] = r8
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r26[0] = r8 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Version identified by %s does not exist", $r26)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Version identified by %s does not exist", $r26) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r25.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r27)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r25.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : throw $r25
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r14 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r15 = virtualinvoke $r14.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.lang.Object findByPK(java.lang.Object)>(r7)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r15 = virtualinvoke $r14.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.lang.Object findByPK(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r9 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r15
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r9 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r15 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r9 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r9 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r16 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.util.List getOperatingSystems()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r9 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r3]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r3] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : return r3
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r16 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.util.List getOperatingSystems()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r10 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r10 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z1 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r17 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= return r3]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r17 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r11 = (org.apache.ambari.server.orm.entities.OperatingSystemEntity) $r17
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r11 = (org.apache.ambari.server.orm.entities.OperatingSystemEntity) $r17 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r18 = new org.apache.ambari.server.controller.OperatingSystemResponse
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r18 = new org.apache.ambari.server.controller.OperatingSystemResponse >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r19 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String getOsType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r19 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r18.<org.apache.ambari.server.controller.OperatingSystemResponse: void <init>(java.lang.String)>($r19)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : specialinvoke $r18.<org.apache.ambari.server.controller.OperatingSystemResponse: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r12 = $r18
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r12 = $r18 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r8
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r8 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r20 = virtualinvoke r7.<java.lang.Long: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r8 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r12.<org.apache.ambari.server.controller.OperatingSystemResponse: void setRepositoryVersionId(java.lang.Long)>(r7)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r12.<org.apache.ambari.server.controller.OperatingSystemResponse: void setRepositoryVersionId(java.lang.Long)>(r7) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r21 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r21 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r12.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackName(java.lang.String)>($r21)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r12.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackName(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r22 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r22 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r12.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackVersion(java.lang.String)>($r22)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r12.<org.apache.ambari.server.controller.OperatingSystemResponse: void setStackVersion(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z2 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: boolean isAmbariManagedRepos()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z2 = virtualinvoke r11.<org.apache.ambari.server.orm.entities.OperatingSystemEntity: boolean isAmbariManagedRepos()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r12.<org.apache.ambari.server.controller.OperatingSystemResponse: void setAmbariManagedRepos(boolean)>($z2)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r12.<org.apache.ambari.server.controller.OperatingSystemResponse: void setAmbariManagedRepos(boolean)>($z2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r12)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r20 = virtualinvoke r7.<java.lang.Long: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r12.<org.apache.ambari.server.controller.OperatingSystemResponse: void setVersionDefinitionId(java.lang.String)>($r20)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : virtualinvoke r12.<org.apache.ambari.server.controller.OperatingSystemResponse: void setVersionDefinitionId(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $r21 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : goto [?= $r21 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $r21 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r8 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z0 = staticinvoke <org.apache.commons.lang.math.NumberUtils: boolean isDigits(java.lang.String)>(r8)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if null == r8 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r7 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : $z0 = staticinvoke <org.apache.commons.lang.math.NumberUtils: boolean isDigits(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r8)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r7 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getOperatingSystems : if r7 == null
