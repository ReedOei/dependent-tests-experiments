org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r0 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: org.apache.ambari.server.topology.BlueprintFactory blueprintFactory> >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r1 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: org.apache.ambari.server.orm.dao.BlueprintDAO dao>
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r1 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: org.apache.ambari.server.orm.dao.BlueprintDAO dao> >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r2 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: org.apache.ambari.server.topology.SecurityConfigurationFactory securityFactory>
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r2 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: org.apache.ambari.server.topology.SecurityConfigurationFactory securityFactory> >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r3 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: com.google.gson.Gson gson>
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r3 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r4 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo>
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r4 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: org.apache.ambari.server.api.services.AmbariMetaInfo metaInfo> >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : staticinvoke <org.apache.ambari.server.controller.internal.BlueprintResourceProvider: void init(org.apache.ambari.server.topology.BlueprintFactory,org.apache.ambari.server.orm.dao.BlueprintDAO,org.apache.ambari.server.topology.SecurityConfigurationFactory,com.google.gson.Gson,org.apache.ambari.server.api.services.AmbariMetaInfo)>($r0, $r1, $r2, $r3, $r4)
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : staticinvoke <org.apache.ambari.server.controller.internal.BlueprintResourceProvider: void init(org.apache.ambari.server.topology.BlueprintFactory,org.apache.ambari.server.orm.dao.BlueprintDAO,org.apache.ambari.server.topology.SecurityConfigurationFactory,com.google.gson.Gson,org.apache.ambari.server.api.services.AmbariMetaInfo)>($r0, $r1, $r2, $r3, $r4) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r6 = new org.apache.ambari.server.orm.entities.StackEntity
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r6 = new org.apache.ambari.server.orm.entities.StackEntity >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : specialinvoke $r6.<org.apache.ambari.server.orm.entities.StackEntity: void <init>()>()
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : specialinvoke $r6.<org.apache.ambari.server.orm.entities.StackEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : r5 = $r6
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : r5 = $r6 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : virtualinvoke r5.<org.apache.ambari.server.orm.entities.StackEntity: void setStackName(java.lang.String)>("test-stack-name")
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : virtualinvoke r5.<org.apache.ambari.server.orm.entities.StackEntity: void setStackName(java.lang.String)>("test-stack-name") >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : virtualinvoke r5.<org.apache.ambari.server.orm.entities.StackEntity: void setStackVersion(java.lang.String)>("test-stack-version")
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : virtualinvoke r5.<org.apache.ambari.server.orm.entities.StackEntity: void setStackVersion(java.lang.String)>("test-stack-version") >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r7 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: org.apache.ambari.server.orm.dao.StackDAO stackDAO>
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r7 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: org.apache.ambari.server.orm.dao.StackDAO stackDAO> >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r9 = (java.lang.String) $r8
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r9 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String")
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "java/lang/String") >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r11 = (java.lang.String) $r10
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r11 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r12 = virtualinvoke $r7.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r9, $r11)
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r12 = virtualinvoke $r7.<org.apache.ambari.server.orm.dao.StackDAO: org.apache.ambari.server.orm.entities.StackEntity find(java.lang.String,java.lang.String)>($r9, $r11) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12)
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r14 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r14 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r16 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r16 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r17 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: org.apache.ambari.server.orm.dao.StackDAO stackDAO>
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r17 = <org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest: org.apache.ambari.server.orm.dao.StackDAO stackDAO> >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r16[0] = $r17
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : $r16[0] = $r17 >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r16)
org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r16) >>>>>>>> org.apache.ambari.server.controller.internal.BlueprintResourceProviderTest.initClass : return
