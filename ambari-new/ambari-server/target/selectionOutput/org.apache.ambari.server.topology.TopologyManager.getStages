org.apache.ambari.server.topology.TopologyManager.getStages : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void ensureInitialized()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : $r4 = new java.util.ArrayList
org.apache.ambari.server.topology.TopologyManager.getStages : $r4 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.topology.TopologyManager.getStages : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : r1 = $r4
org.apache.ambari.server.topology.TopologyManager.getStages : r1 = $r4 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : $r5 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests>
org.apache.ambari.server.topology.TopologyManager.getStages : $r5 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.topology.TopologyManager.getStages : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.getStages : r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.getStages : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : if $z0 == 0
org.apache.ambari.server.topology.TopologyManager.getStages : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.getStages : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : return r1
org.apache.ambari.server.topology.TopologyManager.getStages : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : r3 = (org.apache.ambari.server.topology.LogicalRequest) $r7
org.apache.ambari.server.topology.TopologyManager.getStages : r3 = (org.apache.ambari.server.topology.LogicalRequest) $r7 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : $r8 = virtualinvoke r3.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getStageEntities()>()
org.apache.ambari.server.topology.TopologyManager.getStages : $r8 = virtualinvoke r3.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getStageEntities()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : interfaceinvoke r1.<java.util.Collection: boolean addAll(java.util.Collection)>($r8)
org.apache.ambari.server.topology.TopologyManager.getStages : interfaceinvoke r1.<java.util.Collection: boolean addAll(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.getStages : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getStages : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
