org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : if null != r3 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r8 = new java.lang.NullPointerException
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : if null != r3 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r9 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r9 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r10 = interfaceinvoke $r9.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r10 = interfaceinvoke $r9.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : r5 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.controller.ServiceConfigVersionResponse applyServiceConfigVersion(java.lang.String,java.lang.Long,java.lang.String,java.lang.String)>(r1, r2, r3, r4)
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r13 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : r7 = $r13 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r14 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : r7 = $r13 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r13 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r14 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r15 = interfaceinvoke $r14.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r15 = interfaceinvoke $r14.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : interfaceinvoke $r15.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : interfaceinvoke $r15.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : throw r7
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : r5 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.controller.ServiceConfigVersionResponse applyServiceConfigVersion(java.lang.String,java.lang.Long,java.lang.String,java.lang.String)>(r1, r2, r3, r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : r6 = r5
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : r5 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.controller.ServiceConfigVersionResponse applyServiceConfigVersion(java.lang.String,java.lang.Long,java.lang.String,java.lang.String)>(r1, r2, r3, r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r13 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : r6 = r5 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r11 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock>
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : r6 = r5 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r13 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r11 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.concurrent.locks.ReadWriteLock clusterGlobalLock> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r12 = interfaceinvoke $r11.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r12 = interfaceinvoke $r11.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : return r6
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : $r8 = new java.lang.NullPointerException >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("User must be specified.")
org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("User must be specified.") >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.setServiceConfigVersion : throw $r8
