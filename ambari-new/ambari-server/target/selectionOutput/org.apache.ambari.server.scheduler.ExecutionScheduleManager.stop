org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : $r1 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Stopping scheduler")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Stopping scheduler") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: boolean schedulerAvailable> = 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: boolean schedulerAvailable> = 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : $r3 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: boolean schedulerAvailable> = 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : $r4 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : r2 = $r4 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : $r5 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : $r5 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String)>("Unable to stop scheduler. No new recurring tasks will be scheduled.")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String)>("Unable to stop scheduler. No new recurring tasks will be scheduled.") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : return
org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : $r3 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : interfaceinvoke $r3.<org.apache.ambari.server.scheduler.ExecutionScheduler: void stopScheduler()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : $r3 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : $r4 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : interfaceinvoke $r3.<org.apache.ambari.server.scheduler.ExecutionScheduler: void stopScheduler()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : goto [?= return]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : interfaceinvoke $r3.<org.apache.ambari.server.scheduler.ExecutionScheduler: void stopScheduler()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : $r4 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : goto [?= return] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.stop : return
