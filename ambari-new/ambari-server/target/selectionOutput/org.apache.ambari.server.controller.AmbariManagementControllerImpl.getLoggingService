org.apache.ambari.server.controller.AmbariManagementControllerImpl.getLoggingService : $r2 = new org.apache.ambari.server.api.services.LoggingService >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getLoggingService : specialinvoke $r2.<org.apache.ambari.server.api.services.LoggingService: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getLoggingService : specialinvoke $r2.<org.apache.ambari.server.api.services.LoggingService: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getLoggingService : r3 = $r2
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getLoggingService : r3 = $r2 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getLoggingService : $r4 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.inject.Injector injector>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getLoggingService : $r4 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getLoggingService : interfaceinvoke $r4.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r3)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getLoggingService : interfaceinvoke $r4.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getLoggingService : return r3
