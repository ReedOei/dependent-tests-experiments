org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r13 = interfaceinvoke $r12.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r13 = interfaceinvoke $r12.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r14 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r14 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r15 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>($r14)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r15 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>($r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r2 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r2 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z0 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r17 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : return
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r17 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r3 = (org.apache.ambari.server.state.Cluster) $r17
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r3 = (org.apache.ambari.server.state.Cluster) $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r18 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r18 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : specialinvoke $r18.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : specialinvoke $r18.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r4 = $r18
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r4 = $r18 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r5 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-hdfs-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r5 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-hdfs-plugin-properties") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r5 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r5 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r19 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r5 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r6 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hive-env")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r6 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hive-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r6 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r23 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-hbase-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-hbase-plugin-properties") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r7 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r29 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r8 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-storm-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r8 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-storm-plugin-properties") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r8 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r8 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r33 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r8 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r9 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-knox-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r9 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-knox-plugin-properties") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r9 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r9 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r37 = interfaceinvoke r9.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r9 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r10 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-yarn-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r10 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-yarn-plugin-properties") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r10 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r10 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r41 = interfaceinvoke r10.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r10 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r11 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-kafka-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r11 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-kafka-plugin-properties") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r11 == null
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r11 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r45 = interfaceinvoke r11.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if r11 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z9 = interfaceinvoke r4.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z9 = interfaceinvoke r4.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z9 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z9 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r3, "ranger-env", r4, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z9 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog220: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r3, "ranger-env", r4, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r45 = interfaceinvoke r11.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z8 = interfaceinvoke $r45.<java.util.Map: boolean containsKey(java.lang.Object)>("ranger-kafka-plugin-enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z8 = interfaceinvoke $r45.<java.util.Map: boolean containsKey(java.lang.Object)>("ranger-kafka-plugin-enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z8 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z8 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r46 = interfaceinvoke r11.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z8 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z9 = interfaceinvoke r4.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r46 = interfaceinvoke r11.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r47 = interfaceinvoke $r46.<java.util.Map: java.lang.Object get(java.lang.Object)>("ranger-kafka-plugin-enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r47 = interfaceinvoke $r46.<java.util.Map: java.lang.Object get(java.lang.Object)>("ranger-kafka-plugin-enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-kafka-plugin-enabled", $r47)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-kafka-plugin-enabled", $r47) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z9 = interfaceinvoke r4.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r41 = interfaceinvoke r10.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z7 = interfaceinvoke $r41.<java.util.Map: boolean containsKey(java.lang.Object)>("ranger-yarn-plugin-enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z7 = interfaceinvoke $r41.<java.util.Map: boolean containsKey(java.lang.Object)>("ranger-yarn-plugin-enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z7 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z7 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r42 = interfaceinvoke r10.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z7 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r11 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-kafka-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r42 = interfaceinvoke r10.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r43 = interfaceinvoke $r42.<java.util.Map: java.lang.Object get(java.lang.Object)>("ranger-yarn-plugin-enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r43 = interfaceinvoke $r42.<java.util.Map: java.lang.Object get(java.lang.Object)>("ranger-yarn-plugin-enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-yarn-plugin-enabled", $r43)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-yarn-plugin-enabled", $r43) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r11 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-kafka-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r37 = interfaceinvoke r9.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z6 = interfaceinvoke $r37.<java.util.Map: boolean containsKey(java.lang.Object)>("ranger-knox-plugin-enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z6 = interfaceinvoke $r37.<java.util.Map: boolean containsKey(java.lang.Object)>("ranger-knox-plugin-enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z6 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z6 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r38 = interfaceinvoke r9.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z6 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r10 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-yarn-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r38 = interfaceinvoke r9.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r39 = interfaceinvoke $r38.<java.util.Map: java.lang.Object get(java.lang.Object)>("ranger-knox-plugin-enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r39 = interfaceinvoke $r38.<java.util.Map: java.lang.Object get(java.lang.Object)>("ranger-knox-plugin-enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-knox-plugin-enabled", $r39)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-knox-plugin-enabled", $r39) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r10 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-yarn-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r33 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z5 = interfaceinvoke $r33.<java.util.Map: boolean containsKey(java.lang.Object)>("ranger-storm-plugin-enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z5 = interfaceinvoke $r33.<java.util.Map: boolean containsKey(java.lang.Object)>("ranger-storm-plugin-enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z5 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r34 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r9 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-knox-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r34 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r35 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>("ranger-storm-plugin-enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r35 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>("ranger-storm-plugin-enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-storm-plugin-enabled", $r35)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-storm-plugin-enabled", $r35) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r9 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-knox-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r29 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z4 = interfaceinvoke $r29.<java.util.Map: boolean containsKey(java.lang.Object)>("ranger-hbase-plugin-enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z4 = interfaceinvoke $r29.<java.util.Map: boolean containsKey(java.lang.Object)>("ranger-hbase-plugin-enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z4 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z4 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r30 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z4 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r8 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-storm-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r30 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("ranger-hbase-plugin-enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("ranger-hbase-plugin-enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-hbase-plugin-enabled", $r31)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-hbase-plugin-enabled", $r31) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r8 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-storm-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r23 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z2 = interfaceinvoke $r23.<java.util.Map: boolean containsKey(java.lang.Object)>("hive_security_authorization")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z2 = interfaceinvoke $r23.<java.util.Map: boolean containsKey(java.lang.Object)>("hive_security_authorization") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r24 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-hbase-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r24 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>("hive_security_authorization")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>("hive_security_authorization") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r26 = (java.lang.String) $r25
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r26 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z3 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("ranger")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z3 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("ranger") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z3 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-hive-plugin-enabled", "Yes")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-hbase-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-hive-plugin-enabled", "Yes") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("ranger-hbase-plugin-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r19 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z1 = interfaceinvoke $r19.<java.util.Map: boolean containsKey(java.lang.Object)>("ranger-hdfs-plugin-enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $z1 = interfaceinvoke $r19.<java.util.Map: boolean containsKey(java.lang.Object)>("ranger-hdfs-plugin-enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r20 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r6 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hive-env")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r20 = interfaceinvoke r5.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>("ranger-hdfs-plugin-enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>("ranger-hdfs-plugin-enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-hdfs-plugin-enabled", $r21)
org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ranger-hdfs-plugin-enabled", $r21) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220.updateRangerEnvConfig : r6 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hive-env")
