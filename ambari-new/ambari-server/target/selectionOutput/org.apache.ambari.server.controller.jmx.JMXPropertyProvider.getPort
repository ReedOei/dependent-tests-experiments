org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r6 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r6[0] = r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r6[0] = r1 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r6[1] = r2
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r6[1] = r2 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r6[2] = $r7
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r6[2] = $r7 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s-%s-%s", $r6)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s-%s-%s", $r6) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r8 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map clusterComponentPortsMap>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r8 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map clusterComponentPortsMap> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : r5 = (java.lang.String) $r9
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : r5 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : if r5 != null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : if r5 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r10 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.jmx.JMXHostProvider jmxHostProvider>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : if r5 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : return r5
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r10 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.jmx.JMXHostProvider jmxHostProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : r11 = interfaceinvoke $r10.<org.apache.ambari.server.controller.jmx.JMXHostProvider: java.lang.String getPort(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, z0)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : r11 = interfaceinvoke $r10.<org.apache.ambari.server.controller.jmx.JMXHostProvider: java.lang.String getPort(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, z0) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : if r11 != null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : if r11 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r12 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map DEFAULT_JMX_PORTS>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : if r11 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r14 = r11
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r14 = r11 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : r5 = $r14
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : r5 = $r14 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r15 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map clusterComponentPortsMap>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r15 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map clusterComponentPortsMap> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : return r5
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r12 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map DEFAULT_JMX_PORTS> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r14 = (java.lang.String) $r13
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : $r14 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : goto [?= r5 = $r14]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : goto [?= r5 = $r14] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.getPort : r5 = $r14
