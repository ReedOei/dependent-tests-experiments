org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r1 = <org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory$1: int[] $SwitchMap$org$apache$ambari$server$api$predicate$operators$Operator$TYPE> >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r2 = interfaceinvoke r0.<org.apache.ambari.server.api.predicate.operators.LogicalOperator: org.apache.ambari.server.api.predicate.operators.Operator$TYPE getType()>()
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r2 = interfaceinvoke r0.<org.apache.ambari.server.api.predicate.operators.LogicalOperator: org.apache.ambari.server.api.predicate.operators.Operator$TYPE getType()>() >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $i0 = virtualinvoke $r2.<org.apache.ambari.server.api.predicate.operators.Operator$TYPE: int ordinal()>()
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $i0 = virtualinvoke $r2.<org.apache.ambari.server.api.predicate.operators.Operator$TYPE: int ordinal()>() >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $i1 = $r1[$i0]
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $i1 = $r1[$i0] >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : tableswitch($i1) {     case 1:
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r3 = new org.apache.ambari.server.api.predicate.expressions.LogicalExpression
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r4 = new org.apache.ambari.server.api.predicate.expressions.NotLogicalExpression
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r5 = new java.lang.RuntimeException
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r5 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An invalid logical operator type was encountered: ")
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An invalid logical operator type was encountered: ") >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9)
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : throw $r5
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r4 = new org.apache.ambari.server.api.predicate.expressions.NotLogicalExpression >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : specialinvoke $r4.<org.apache.ambari.server.api.predicate.expressions.NotLogicalExpression: void <init>(org.apache.ambari.server.api.predicate.operators.LogicalOperator)>(r0)
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : specialinvoke $r4.<org.apache.ambari.server.api.predicate.expressions.NotLogicalExpression: void <init>(org.apache.ambari.server.api.predicate.operators.LogicalOperator)>(r0) >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : return $r4
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : $r3 = new org.apache.ambari.server.api.predicate.expressions.LogicalExpression >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : specialinvoke $r3.<org.apache.ambari.server.api.predicate.expressions.LogicalExpression: void <init>(org.apache.ambari.server.api.predicate.operators.LogicalOperator)>(r0)
org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : specialinvoke $r3.<org.apache.ambari.server.api.predicate.expressions.LogicalExpression: void <init>(org.apache.ambari.server.api.predicate.operators.LogicalOperator)>(r0) >>>>>>>> org.apache.ambari.server.api.predicate.expressions.LogicalExpressionFactory.createLogicalExpression : return $r3
