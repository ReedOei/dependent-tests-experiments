org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r13 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r14 = interfaceinvoke $r13.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r14 = interfaceinvoke $r13.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r15 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r15 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r16
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-properties") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r6 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r17 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r28 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logfeeder-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r28 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logfeeder-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r28 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r28 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r29 = interfaceinvoke r28.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r28 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r34 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r34 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r34 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r34 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r35 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r34 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r42 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logfeeder-log4j")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r42 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logfeeder-log4j") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r42 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r42 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r43 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r42 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r53 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-log4j")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r53 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-log4j") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r53 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r53 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r54 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r53 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r54 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r54.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r54.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r55 = $r54
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r55 = $r54 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r56 = interfaceinvoke r53.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r56 = interfaceinvoke r53.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r57 = interfaceinvoke $r56.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r57 = interfaceinvoke $r56.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r12 = (java.lang.String) $r57
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r12 = (java.lang.String) $r57 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z11 = virtualinvoke r12.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{logsearch_log_dir}}/logsearch.err")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z11 = virtualinvoke r12.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{logsearch_log_dir}}/logsearch.err") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z11 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z11 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r12 = virtualinvoke r12.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{logsearch_log_dir}}/logsearch.err", "{{logsearch_log_dir}}/logsearch.log")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z11 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z12 = virtualinvoke r12.<java.lang.String: boolean contains(java.lang.CharSequence)>("<priority value=\"warn\"/>")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z12 = virtualinvoke r12.<java.lang.String: boolean contains(java.lang.CharSequence)>("<priority value=\"warn\"/>") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z12 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z12 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r12 = virtualinvoke r12.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<priority value=\"warn\"/>", "<priority value=\"info\"/>")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z12 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r58 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r12, "logsearch_log_maxfilesize", "logsearch_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch.log\" />\n    <param name=\"Threshold\" value=\"info\" />\n    <param name=\"append\" value=\"true\" />\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\" />\n", "10", r55)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r58 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r12, "logsearch_log_maxfilesize", "logsearch_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch.log\" />\n    <param name=\"Threshold\" value=\"info\" />\n    <param name=\"append\" value=\"true\" />\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\" />\n", "10", r55) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r59 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r58, "logsearch_log_maxbackupindex", "logsearch_log_maxbackupindex", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch.log\" />\n    <param name=\"Threshold\" value=\"info\" />\n    <param name=\"append\" value=\"true\" />\n    <param name=\"maxFileSize\" value=\"\\{\\{logsearch_log_maxfilesize}}MB\" />\n    <param name=\"maxBackupIndex\" value=\"(\\w+)\" />\n", "10", r55)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r59 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r58, "logsearch_log_maxbackupindex", "logsearch_log_maxbackupindex", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch.log\" />\n    <param name=\"Threshold\" value=\"info\" />\n    <param name=\"append\" value=\"true\" />\n    <param name=\"maxFileSize\" value=\"\\{\\{logsearch_log_maxfilesize}}MB\" />\n    <param name=\"maxBackupIndex\" value=\"(\\w+)\" />\n", "10", r55) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r60 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r59, "logsearch_json_log_maxfilesize", "logsearch_json_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch.json\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\"/>\n", "10", r55)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r60 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r59, "logsearch_json_log_maxfilesize", "logsearch_json_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch.json\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\"/>\n", "10", r55) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r61 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r60, "logsearch_json_log_maxbackupindex", "logsearch_json_log_maxbackupindex", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch.json\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"\\{\\{logsearch_json_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"(\\w+)\"/>\n", "10", r55)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r61 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r60, "logsearch_json_log_maxbackupindex", "logsearch_json_log_maxbackupindex", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch.json\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"\\{\\{logsearch_json_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"(\\w+)\"/>\n", "10", r55) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r62 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r61, "logsearch_audit_log_maxfilesize", "logsearch_audit_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch-audit.json\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\"/>\n", "10", r55)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r62 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r61, "logsearch_audit_log_maxfilesize", "logsearch_audit_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch-audit.json\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\"/>\n", "10", r55) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r63 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r62, "logsearch_audit_log_maxbackupindex", "logsearch_audit_log_maxbackupindex", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch-audit.json\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"\\{\\{logsearch_audit_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"(\\w+)\"/>\n", "10", r55)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r63 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r62, "logsearch_audit_log_maxbackupindex", "logsearch_audit_log_maxbackupindex", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch-audit.json\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"\\{\\{logsearch_audit_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"(\\w+)\"/>\n", "10", r55) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r64 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r63, "logsearch_perf_log_maxfilesize", "logsearch_perf_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch-performance.json\"/>\n    <param name=\"Threshold\" value=\"info\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\"/>\n", "10", r55)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r64 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r63, "logsearch_perf_log_maxfilesize", "logsearch_perf_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch-performance.json\"/>\n    <param name=\"Threshold\" value=\"info\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\"/>\n", "10", r55) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r65 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r64, "logsearch_perf_log_maxbackupindex", "logsearch_perf_log_maxbackupindex", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch-performance.json\"/>\n    <param name=\"Threshold\" value=\"info\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"\\{\\{logsearch_perf_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"(\\w+)\"/>\n", "10", r55)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r65 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r64, "logsearch_perf_log_maxbackupindex", "logsearch_perf_log_maxbackupindex", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch-performance.json\"/>\n    <param name=\"Threshold\" value=\"info\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"\\{\\{logsearch_perf_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"(\\w+)\"/>\n", "10", r55) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r55.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r65)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r55.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r65) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r67 = interfaceinvoke r53.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r67 = interfaceinvoke r53.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r68 = interfaceinvoke $r67.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r68 = interfaceinvoke $r67.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z13 = virtualinvoke r65.<java.lang.String: boolean equals(java.lang.Object)>($r68)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z13 = virtualinvoke r65.<java.lang.String: boolean equals(java.lang.Object)>($r68) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z13 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z13 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logsearch-log4j", r55, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z13 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logsearch-log4j", r55, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r12 = virtualinvoke r12.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<priority value=\"warn\"/>", "<priority value=\"info\"/>") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r58 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r12, "logsearch_log_maxfilesize", "logsearch_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logsearch_log_dir}}/logsearch.log\" />\n    <param name=\"Threshold\" value=\"info\" />\n    <param name=\"append\" value=\"true\" />\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\" />\n", "10", r55)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r12 = virtualinvoke r12.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{logsearch_log_dir}}/logsearch.err", "{{logsearch_log_dir}}/logsearch.log") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z12 = virtualinvoke r12.<java.lang.String: boolean contains(java.lang.CharSequence)>("<priority value=\"warn\"/>")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r43 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r43.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r43.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = $r43
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = $r43 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r45 = interfaceinvoke r42.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r45 = interfaceinvoke r42.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r46 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r46 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r47 = (java.lang.String) $r46
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r47 = (java.lang.String) $r46 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r48 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r47, "logfeeder_log_maxfilesize", "logfeeder_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logfeeder_log_dir}}/logfeeder.log\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\"/>", "10", r44)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r48 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r47, "logfeeder_log_maxfilesize", "logfeeder_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logfeeder_log_dir}}/logfeeder.log\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\"/>", "10", r44) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r49 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r48, "logfeeder_log_maxbackupindex", "logfeeder_log_maxbackupindex", "    <param name=\"file\" value=\"\\{\\{logfeeder_log_dir}}/logfeeder.log\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"\\{\\{logfeeder_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"(\\w+)\"/>", "10", r44)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r49 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r48, "logfeeder_log_maxbackupindex", "logfeeder_log_maxbackupindex", "    <param name=\"file\" value=\"\\{\\{logfeeder_log_dir}}/logfeeder.log\"/>\n    <param name=\"append\" value=\"true\"/>\n    <param name=\"maxFileSize\" value=\"\\{\\{logfeeder_log_maxfilesize}}MB\"/>\n    <param name=\"maxBackupIndex\" value=\"(\\w+)\"/>", "10", r44) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r50 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r49, "logfeeder_json_log_maxfilesize", "logfeeder_json_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logfeeder_log_dir}}/logsearch-logfeeder.json\" />\n    <param name=\"append\" value=\"true\" />\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\" />", "10", r44)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r50 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r49, "logfeeder_json_log_maxfilesize", "logfeeder_json_log_maxfilesize", "    <param name=\"file\" value=\"\\{\\{logfeeder_log_dir}}/logsearch-logfeeder.json\" />\n    <param name=\"append\" value=\"true\" />\n    <param name=\"maxFileSize\" value=\"(\\w+)MB\" />", "10", r44) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r51 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r50, "logfeeder_json_log_maxbackupindex", "logfeeder_json_log_maxbackupindex", "    <param name=\"file\" value=\"\\{\\{logfeeder_log_dir}}/logsearch-logfeeder.json\" />\n    <param name=\"append\" value=\"true\" />\n    <param name=\"maxFileSize\" value=\"\\{\\{logfeeder_json_log_maxfilesize}}MB\" />\n    <param name=\"maxBackupIndex\" value=\"(\\w+)\" />", "10", r44)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r51 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r50, "logfeeder_json_log_maxbackupindex", "logfeeder_json_log_maxbackupindex", "    <param name=\"file\" value=\"\\{\\{logfeeder_log_dir}}/logsearch-logfeeder.json\" />\n    <param name=\"append\" value=\"true\" />\n    <param name=\"maxFileSize\" value=\"\\{\\{logfeeder_json_log_maxfilesize}}MB\" />\n    <param name=\"maxBackupIndex\" value=\"(\\w+)\" />", "10", r44) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r51)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r51) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logfeeder-log4j", r44, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logfeeder-log4j", r44, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r53 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-log4j")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r35 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r35.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r35.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r9 = $r35
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r9 = $r35 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r36 = interfaceinvoke r34.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r36 = interfaceinvoke r34.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r37 = interfaceinvoke $r36.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r37 = interfaceinvoke $r36.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = (java.lang.String) $r37
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = (java.lang.String) $r37 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z6 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\'")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z6 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\'") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z6 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z6 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\'", "logsearch_use_ssl")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z6 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r38 = interfaceinvoke r34.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r38 = interfaceinvoke r34.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r39 = interfaceinvoke $r38.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r39 = interfaceinvoke $r38.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z7 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>($r39)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z7 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z7 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z7 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r10)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z7 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r41 = new java.util.HashSet
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r41 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r41.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r41.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r11 = $r41
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r11 = $r41 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_use_ranger")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_use_ranger") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_zk_node")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_zk_node") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_zk_quorum")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_zk_quorum") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r5, "logsearch-env", r9, r11, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r5, "logsearch-env", r9, r11, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r42 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logfeeder-log4j")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r41 = new java.util.HashSet
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\'", "logsearch_use_ssl") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r38 = interfaceinvoke r34.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r29 = interfaceinvoke r28.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r30 = interfaceinvoke $r29.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r30 = interfaceinvoke $r29.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r31 = (java.lang.String) $r30
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r31 = (java.lang.String) $r30 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z5 = virtualinvoke r31.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z5 = virtualinvoke r31.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z5 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r32 = virtualinvoke r31.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled", "logfeeder_use_ssl")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r34 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r32 = virtualinvoke r31.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled", "logfeeder_use_ssl") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r33 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r32)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r33 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r32) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logfeeder-env", $r33, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logfeeder-env", $r33, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r34 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r17 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r17.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r17.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r7 = $r17
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r7 = $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r18 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r18 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.enabled", $r19)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.enabled", $r19) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r21 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r21 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.host_url")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r22 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.host_url") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.host_url", $r22)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.host_url", $r22) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r24 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r24 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.login_url")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r25 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.login_url") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.login_url", $r25)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.login_url", $r25) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r27 = new java.util.HashSet
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r27 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r27.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r27.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r8 = $r27
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r8 = $r27 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.host_url")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.host_url") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.login_url")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.login_url") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r5, "logsearch-properties", r7, r8, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r5, "logsearch-properties", r7, r8, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r28 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logfeeder-env")
