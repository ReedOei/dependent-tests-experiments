org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r12 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/stack/StackDirectory") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r4 = (org.apache.ambari.server.stack.StackDirectory) $r12
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r4 = (org.apache.ambari.server.stack.StackDirectory) $r12 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r6 = r3
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r6 = r3 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : i0 = lengthof r6
org.apache.ambari.server.stack.StackModuleTest.createStackModule : i0 = lengthof r6 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : i1 = 0
org.apache.ambari.server.stack.StackModuleTest.createStackModule : i1 = 0 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : if i1 >= i0
org.apache.ambari.server.stack.StackModuleTest.createStackModule : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r7 = r6[i1]
org.apache.ambari.server.stack.StackModuleTest.createStackModule : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z3 = virtualinvoke r2.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z3 = virtualinvoke r2.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : if $z3 == 0
org.apache.ambari.server.stack.StackModuleTest.createStackModule : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r44 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/RepositoryXml")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r53 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.util.Collection getServiceDirectories()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r53 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.util.Collection getServiceDirectories()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r54 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r53)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r54 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r54.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r54.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r56 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getStackDirName()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r56 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getStackDirName()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r57 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r56)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r57 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r57.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r0)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r57.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r59 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.io.File getDirectory()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r59 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.io.File getDirectory()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r60 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r59)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r60 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r59) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r61 = new java.io.File
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r61 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : specialinvoke $r61.<java.io.File: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : specialinvoke $r61.<java.io.File: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r60.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r61)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r60.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r61) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r63 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/stack/StackContext")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r63 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/stack/StackContext") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r64 = (org.apache.ambari.server.stack.StackContext) $r63
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r64 = (org.apache.ambari.server.stack.StackContext) $r63 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r65 = new org.apache.ambari.server.stack.StackModule
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r65 = new org.apache.ambari.server.stack.StackModule >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : specialinvoke $r65.<org.apache.ambari.server.stack.StackModule: void <init>(org.apache.ambari.server.stack.StackDirectory,org.apache.ambari.server.stack.StackContext)>(r4, r64)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : specialinvoke $r65.<org.apache.ambari.server.stack.StackModule: void <init>(org.apache.ambari.server.stack.StackDirectory,org.apache.ambari.server.stack.StackContext)>(r4, r64) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r66 = $r65
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r66 = $r65 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r67 = newarray (java.lang.Object)[2]
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r67 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r67[0] = r0
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r67[0] = r0 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r67[1] = r1
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r67[1] = r1 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r68 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s", $r67)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r68 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s", $r67) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r69 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>($r68, r66)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r69 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>($r68, r66) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r70 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r70 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r71 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r71 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : virtualinvoke r66.<org.apache.ambari.server.stack.StackModule: void resolve(org.apache.ambari.server.stack.StackModule,java.util.Map,java.util.Map,java.util.Map)>(null, $r69, $r70, $r71)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : virtualinvoke r66.<org.apache.ambari.server.stack.StackModule: void resolve(org.apache.ambari.server.stack.StackModule,java.util.Map,java.util.Map,java.util.Map)>(null, $r69, $r70, $r71) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : return r66
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r44 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/RepositoryXml") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r45 = (org.apache.ambari.server.state.stack.RepositoryXml) $r44
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r45 = (org.apache.ambari.server.state.stack.RepositoryXml) $r44 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r46 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.RepositoryXml getRepoFile()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r46 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.RepositoryXml getRepoFile()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r47 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r46)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r47 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r47.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r45)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r47.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r45) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r49 = virtualinvoke r45.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getRepositories()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r49 = virtualinvoke r45.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getRepositories()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r50 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r49)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r50 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r51 = virtualinvoke r2.<com.google.common.base.Optional: java.lang.Object get()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r51 = virtualinvoke r2.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r50.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r51)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r50.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r53 = virtualinvoke r4.<org.apache.ambari.server.stack.StackDirectory: java.util.Collection getServiceDirectories()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r7 = r6[i1] >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r13 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/stack/StackServiceDirectory")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r13 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/stack/StackServiceDirectory") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r8 = (org.apache.ambari.server.stack.StackServiceDirectory) $r13
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r8 = (org.apache.ambari.server.stack.StackServiceDirectory) $r13 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r14 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/RepositoryXml")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r14 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/RepositoryXml") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r9 = (org.apache.ambari.server.state.stack.RepositoryXml) $r14
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r9 = (org.apache.ambari.server.state.stack.RepositoryXml) $r14 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r15 = virtualinvoke r8.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.RepositoryXml getRepoFile()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r15 = virtualinvoke r8.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.RepositoryXml getRepoFile()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r16 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r15)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r16 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r16.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r9)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r16.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r18 = virtualinvoke r9.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getRepositories()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r18 = virtualinvoke r9.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getRepositories()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r19 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r18)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r19 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r19.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r7)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r19.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r21 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/ServiceMetainfoXml")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r21 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/ServiceMetainfoXml") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r10 = (org.apache.ambari.server.state.stack.ServiceMetainfoXml) $r21
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r10 = (org.apache.ambari.server.state.stack.ServiceMetainfoXml) $r21 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z0 = virtualinvoke r10.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: boolean isValid()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z0 = virtualinvoke r10.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: boolean isValid()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r23 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r22)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r23 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r23.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r24)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r23.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r26 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceInfo")
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r26 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/ambari/server/state/ServiceInfo") >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : r11 = (org.apache.ambari.server.state.ServiceInfo) $r26
org.apache.ambari.server.stack.StackModuleTest.createStackModule : r11 = (org.apache.ambari.server.state.ServiceInfo) $r26 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z1 = virtualinvoke r11.<org.apache.ambari.server.state.ServiceInfo: boolean isValid()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $z1 = virtualinvoke r11.<org.apache.ambari.server.state.ServiceInfo: boolean isValid()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r28 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r27)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r28 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r28.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r29)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r28.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r31 = virtualinvoke r11.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r31 = virtualinvoke r11.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r32 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r31)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r32 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r33 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r33 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r34 = virtualinvoke $r33.<java.util.UUID: java.lang.String toString()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r34 = virtualinvoke $r33.<java.util.UUID: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r32.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r34)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r32.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r36 = virtualinvoke r10.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: java.util.List getServices()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r36 = virtualinvoke r10.<org.apache.ambari.server.state.stack.ServiceMetainfoXml: java.util.List getServices()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r37 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r36)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r37 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r38 = newarray (org.apache.ambari.server.state.ServiceInfo)[1]
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r38 = newarray (org.apache.ambari.server.state.ServiceInfo)[1] >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r38[0] = r11
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r38[0] = r11 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r39 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r38)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r39 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r38) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r37.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r39)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r37.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r41 = virtualinvoke r8.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.ServiceMetainfoXml getMetaInfoFile()>()
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r41 = virtualinvoke r8.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.ServiceMetainfoXml getMetaInfoFile()>() >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r42 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r41)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : $r42 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r41) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r42.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r10)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke $r42.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.stack.StackModuleTest.createStackModule : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : i1 = i1 + 1
org.apache.ambari.server.stack.StackModuleTest.createStackModule : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : goto [?= (branch)]
org.apache.ambari.server.stack.StackModuleTest.createStackModule : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackModuleTest.createStackModule : if i1 >= i0
