org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : n0 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : n1 = null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : n1 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : n2 = null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : n2 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r5 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : n2 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r20 = $r19 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r21 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r21 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : specialinvoke $r21.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("Exception occurred while performing request", r20)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : specialinvoke $r21.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("Exception occurred while performing request", r20) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : throw $r21
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r5 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r5 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.state.Cluster: java.util.Map getAllRequestExecutions()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r6 = interfaceinvoke $r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.state.Cluster: java.util.Map getAllRequestExecutions()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.state.Cluster: java.util.Map getAllRequestExecutions()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r2 = (org.apache.ambari.server.state.scheduler.RequestExecution) $r9
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r2 = (org.apache.ambari.server.state.scheduler.RequestExecution) $r9 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.scheduler.RequestExecution: org.apache.ambari.server.state.scheduler.BatchRequest getBatchRequest(long)>(l1)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r2 = (org.apache.ambari.server.state.scheduler.RequestExecution) $r9 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.scheduler.RequestExecution: org.apache.ambari.server.state.scheduler.BatchRequest getBatchRequest(long)>(l1) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r10 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.String getType()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.scheduler.RequestExecution: org.apache.ambari.server.state.scheduler.BatchRequest getBatchRequest(long)>(l1) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r10 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r11 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.String getUri()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r10 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r11 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.String getUri()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r11 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.String getUri()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r13 = interfaceinvoke r2.<org.apache.ambari.server.state.scheduler.RequestExecution: java.lang.String getRequestBody(java.lang.Long)>($r12)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r13 = interfaceinvoke r2.<org.apache.ambari.server.state.scheduler.RequestExecution: java.lang.String getRequestBody(java.lang.Long)>($r12) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r14 = interfaceinvoke r2.<org.apache.ambari.server.state.scheduler.RequestExecution: java.lang.Integer getAuthenticatedUserId()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r13 = interfaceinvoke r2.<org.apache.ambari.server.state.scheduler.RequestExecution: java.lang.String getRequestBody(java.lang.Long)>($r12) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r14 = interfaceinvoke r2.<org.apache.ambari.server.state.scheduler.RequestExecution: java.lang.Integer getAuthenticatedUserId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r4 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.state.scheduler.BatchRequestResponse performApiRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>(r11, r13, r10, $r14)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r14 = interfaceinvoke r2.<org.apache.ambari.server.state.scheduler.RequestExecution: java.lang.Integer getAuthenticatedUserId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r4 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.state.scheduler.BatchRequestResponse performApiRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>(r11, r13, r10, $r14) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: void updateBatchRequest(long,long,java.lang.String,org.apache.ambari.server.state.scheduler.BatchRequestResponse,boolean)>(l0, l1, r1, r4, 0)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : r4 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.state.scheduler.BatchRequestResponse performApiRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)>(r11, r13, r10, $r14) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: void updateBatchRequest(long,long,java.lang.String,org.apache.ambari.server.state.scheduler.BatchRequestResponse,boolean)>(l0, l1, r1, r4, 0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r15 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.Long getRequestId()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: void updateBatchRequest(long,long,java.lang.String,org.apache.ambari.server.state.scheduler.BatchRequestResponse,boolean)>(l0, l1, r1, r4, 0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r15 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.Long getRequestId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : if $r15 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r15 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.Long getRequestId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : if $r15 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r16 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.actionmanager.ActionDBAccessor actionDBAccessor>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : if $r15 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r18 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.Long getRequestId()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : if $r15 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r18 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.Long getRequestId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : return $r18
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r18 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.Long getRequestId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r16 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.actionmanager.ActionDBAccessor actionDBAccessor> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r17 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.Long getRequestId()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r16 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.actionmanager.ActionDBAccessor actionDBAccessor> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r17 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.Long getRequestId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $l2 = virtualinvoke $r17.<java.lang.Long: long longValue()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r17 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.Long getRequestId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $l2 = virtualinvoke $r17.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : interfaceinvoke $r16.<org.apache.ambari.server.actionmanager.ActionDBAccessor: void setSourceScheduleForRequest(long,long)>($l2, l0)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $l2 = virtualinvoke $r17.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : interfaceinvoke $r16.<org.apache.ambari.server.actionmanager.ActionDBAccessor: void setSourceScheduleForRequest(long,long)>($l2, l0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r18 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.BatchRequestResponse: java.lang.Long getRequestId()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : interfaceinvoke $r16.<org.apache.ambari.server.actionmanager.ActionDBAccessor: void setSourceScheduleForRequest(long,long)>($l2, l0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.executeBatchRequest : $r19 := @caughtexception
