org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r1 = "c1" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r24 = new org.apache.ambari.server.controller.ClusterRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r24 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r24.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>(null, r1, "HDP-2.0.6", null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r24.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>(null, r1, "HDP-2.0.6", null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r2 = $r24
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r2 = $r24 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r25 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r25 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r25.<org.apache.ambari.server.controller.AmbariManagementController: void createCluster(org.apache.ambari.server.controller.ClusterRequest)>(r2)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r25.<org.apache.ambari.server.controller.AmbariManagementController: void createCluster(org.apache.ambari.server.controller.ClusterRequest)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r26 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r26 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r3 = interfaceinvoke $r26.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r3 = interfaceinvoke $r26.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r27 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r27 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r27.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0.6")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r27.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0.6") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r27)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: void setDesiredStackVersion(org.apache.ambari.server.state.StackId)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r4 = "HDFS"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r4 = "HDFS" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r5 = "YARN"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r5 = "YARN" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r6 = "MAPREDUCE2"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r6 = "MAPREDUCE2" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r5, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r5, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r6, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createService(java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r6, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r7 = "NAMENODE"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r7 = "NAMENODE" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r8 = "DATANODE"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r8 = "DATANODE" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r9 = "HDFS_CLIENT"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r9 = "HDFS_CLIENT" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r10 = "RESOURCEMANAGER"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r10 = "RESOURCEMANAGER" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r11 = "JOURNALNODE"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r11 = "JOURNALNODE" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r12 = "HISTORYSERVER"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r12 = "HISTORYSERVER" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r13 = "NODEMANAGER"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r13 = "NODEMANAGER" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r28 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r28 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, $r28)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r7, $r28) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r29 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r29 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r8, $r29)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r8, $r29) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r30 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r30 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r9, $r30)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r9, $r30) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r31 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r31 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r5, r10, $r31)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r5, r10, $r31) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r32 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r32 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r11, $r32)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r11, $r32) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r33 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r33 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r6, r12, $r33)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r6, r12, $r33) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r34 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r34 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r5, r13, $r34)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponent(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r5, r13, $r34) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r14 = "h1"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r14 = "h1" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r35 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r35 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r35.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r14)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r35.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r14) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r36 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r36 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r36.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r36.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r15 = $r36
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r15 = $r36 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "5.9")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "5.9") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r39 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r39 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r40 = interfaceinvoke $r39.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r40 = interfaceinvoke $r39.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h1") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r40.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r15)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r40.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r15) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r16 = "h2"
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r16 = "h2" >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r41 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r41 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r41.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r16)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r41.<org.apache.ambari.server.state.Clusters: void addHost(java.lang.String)>(r16) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r42 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r42 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r42.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r42.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r43 = $r42
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r43 = $r42 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_family", "redhat") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("os_release_version", "6.3") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r46 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r46 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r47 = interfaceinvoke $r46.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h2")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r47 = interfaceinvoke $r46.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>("h2") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r47.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r43)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r47.<org.apache.ambari.server.state.Host: void setHostAttributes(java.util.Map)>(r43) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r48 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r48 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r48.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r14, r1)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r48.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r14, r1) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r49 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r49 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r49.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r16, r1)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r49.<org.apache.ambari.server.state.Clusters: void mapHostToCluster(java.lang.String,java.lang.String)>(r16, r1) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, null, r7, r14, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, null, r7, r14, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r8, r14, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r8, r14, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r8, r16, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r8, r16, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r9, r14, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r9, r14, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r11, r14, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r11, r14, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r11, r16, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r11, r16, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r9, r16, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r4, r9, r16, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r5, r10, r16, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r5, r10, r16, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r6, r12, r16, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r6, r12, r16, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r5, r13, r16, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: void createServiceComponentHost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.State)>(r1, r5, r13, r16, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r50 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r50 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r50.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r50.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r17 = $r50
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r17 = $r50 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.http.address", "localhost:${ambari.dfs.datanode.http.port}")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.http.address", "localhost:${ambari.dfs.datanode.http.port}") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.datanode.http.address", "localhost:70075")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.datanode.http.address", "localhost:70075") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari.dfs.datanode.http.port", "70070")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari.dfs.datanode.http.port", "70070") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.journalnode.https-address", "localhost:8481")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.journalnode.https-address", "localhost:8481") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.datanode.https.address", "50475")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.datanode.https.address", "50475") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.http.policy", "HTTPS_ONLY")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs.http.policy", "HTTPS_ONLY") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r57 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r57 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r57.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r57.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r18 = $r57
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r18 = $r57 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.resourcemanager.webapp.address", "8088")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.resourcemanager.webapp.address", "8088") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.webapp.address", "8042")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.webapp.address", "8042") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.resourcemanager.webapp.https.address", "8090")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.resourcemanager.webapp.https.address", "8090") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.webapp.https.address", "8044")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.webapp.https.address", "8044") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.http.policy", "HTTPS_ONLY")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.http.policy", "HTTPS_ONLY") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r63 = new java.util.HashMap
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r63 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r63.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r63.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r19 = $r63
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r19 = $r63 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mapreduce.jobhistory.webapp.https.address", "19889")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mapreduce.jobhistory.webapp.https.address", "19889") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mapreduce.jobhistory.http.policy", "HTTPS_ONLY")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mapreduce.jobhistory.http.policy", "HTTPS_ONLY") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r66 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r66 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r66.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r1, "hdfs-site", "versionN", r17, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r66.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r1, "hdfs-site", "versionN", r17, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r20 = $r66
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r20 = $r66 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r67 = new org.apache.ambari.server.controller.ClusterRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r67 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $l0 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $l0 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r68 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r68 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r67.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r68, r1, null, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r67.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.util.Set)>($r68, r1, null, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r21 = $r67
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r21 = $r67 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r69 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r20)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r69 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke r21.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r69)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke r21.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r69) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r70 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r70 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r71 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r21)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r71 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r21) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r70.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r71, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r70.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r71, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r73 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r73 = r0.<org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r74 = interfaceinvoke $r73.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r74 = interfaceinvoke $r73.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r75 = interfaceinvoke r74.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hdfs-site")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r75 = interfaceinvoke r74.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hdfs-site") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r76 = interfaceinvoke $r75.<org.apache.ambari.server.state.Config: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r76 = interfaceinvoke $r75.<org.apache.ambari.server.state.Config: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("versionN", $r76)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("versionN", $r76) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r77 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r77 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r77.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r1, "yarn-site", "versionN", r18, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r77.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r1, "yarn-site", "versionN", r18, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r22 = $r77
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r22 = $r77 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r78 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r22)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r78 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r22) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke r21.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r78)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke r21.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r78) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r79 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r79 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r80 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r21)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r80 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r21) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r79.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r80, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r79.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r80, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r82 = new org.apache.ambari.server.controller.ConfigurationRequest
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r82 = new org.apache.ambari.server.controller.ConfigurationRequest >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r82.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r1, "mapred-site", "versionN", r19, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : specialinvoke $r82.<org.apache.ambari.server.controller.ConfigurationRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r1, "mapred-site", "versionN", r19, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r23 = $r82
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : r23 = $r82 >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r83 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r23)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r83 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r23) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke r21.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r83)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : virtualinvoke r21.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>($r83) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r84 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r84 = <org.apache.ambari.server.controller.internal.JMXHostProviderTest: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r85 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r21)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r85 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r21) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r84.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r85, null)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : interfaceinvoke $r84.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>($r85, null) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r87 = interfaceinvoke r74.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("yarn-site")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r87 = interfaceinvoke r74.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("yarn-site") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r88 = interfaceinvoke $r87.<org.apache.ambari.server.state.Config: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r88 = interfaceinvoke $r87.<org.apache.ambari.server.state.Config: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("versionN", $r88)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("versionN", $r88) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r89 = interfaceinvoke r74.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hdfs-site")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r89 = interfaceinvoke r74.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hdfs-site") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r90 = interfaceinvoke $r89.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r90 = interfaceinvoke $r89.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r91 = interfaceinvoke $r90.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs.http.address")
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : $r91 = interfaceinvoke $r90.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs.http.address") >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("localhost:${ambari.dfs.datanode.http.port}", $r91)
org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("localhost:${ambari.dfs.datanode.http.port}", $r91) >>>>>>>> org.apache.ambari.server.controller.internal.JMXHostProviderTest.createConfigs : return
