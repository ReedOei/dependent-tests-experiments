org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : r4 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.Map getMetricsRequests(java.util.Set,org.apache.ambari.server.controller.spi.Request,java.util.Set)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r10 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r10 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : r5 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : r5 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : if $z0 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : return r1
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : r6 = (java.util.Map$Entry) $r11
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : r6 = (java.util.Map$Entry) $r11 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r12 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r13 = (java.util.Map) $r12
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r13 = (java.util.Map) $r12 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : r7 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : r7 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : if $z1 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r15 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r15 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : r8 = (org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest) $r15
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : r8 = (org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest) $r15 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : virtualinvoke r8.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: java.util.Collection populateResources()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : r8 = (org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest) $r15 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r17 := @caughtexception
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : r9 = $r17 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $z2 = r9 instanceof java.net.SocketTimeoutException
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $z2 = r9 instanceof java.net.SocketTimeoutException >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : if $z2 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r18 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r18 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $z3 = interfaceinvoke $r18.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $z3 = interfaceinvoke $r18.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : if $z3 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r19 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : goto [?= (branch)]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r19 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String)>("Skip populating resources on socket timeout.")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String)>("Skip populating resources on socket timeout.") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : goto [?= (branch)]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : virtualinvoke r8.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: java.util.Collection populateResources()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : goto [?= (branch)]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : virtualinvoke r8.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: java.util.Collection populateResources()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : $r17 := @caughtexception
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.populateResourcesWithProperties : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
