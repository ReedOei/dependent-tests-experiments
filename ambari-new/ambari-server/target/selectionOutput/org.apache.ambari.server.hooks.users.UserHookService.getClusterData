org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r1 = "NA" >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r2 = "NA"
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r2 = "NA" >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r6 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r6 = r0.<org.apache.ambari.server.hooks.users.UserHookService: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r3 = (java.util.Map$Entry) $r10
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r3 = (java.util.Map$Entry) $r10 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r4 = (org.apache.ambari.server.state.Cluster) $r11
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r4 = (org.apache.ambari.server.state.Cluster) $r11 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r12 = <org.apache.ambari.server.hooks.users.UserHookService$1: int[] $SwitchMap$org$apache$ambari$server$state$SecurityType>
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r12 = <org.apache.ambari.server.hooks.users.UserHookService$1: int[] $SwitchMap$org$apache$ambari$server$state$SecurityType> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r13 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r13 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $i0 = virtualinvoke $r13.<org.apache.ambari.server.state.SecurityType: int ordinal()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $i0 = virtualinvoke $r13.<org.apache.ambari.server.state.SecurityType: int ordinal()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $i1 = $r12[$i0]
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $i1 = $r12[$i0] >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : lookupswitch($i1) {     case 1:
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : lookupswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r14 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hadoop-env")
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : lookupswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r17 = <org.apache.ambari.server.hooks.users.UserHookService: org.slf4j.Logger LOGGER>
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r17 = <org.apache.ambari.server.hooks.users.UserHookService: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r18 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r18 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : interfaceinvoke $r17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("The cluster security is not set. Security type: {}", $r18)
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : interfaceinvoke $r17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("The cluster security is not set. Security type: {}", $r18) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r19 = new org.apache.ambari.server.hooks.users.UserHookService$ClusterData
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r19 = new org.apache.ambari.server.hooks.users.UserHookService$ClusterData >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r20 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r20 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $l2 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $l2 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r22 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r22 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r23 = virtualinvoke $r22.<org.apache.ambari.server.state.SecurityType: java.lang.String name()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r23 = virtualinvoke $r22.<org.apache.ambari.server.state.SecurityType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : specialinvoke $r19.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: void <init>(java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String)>($r20, $r21, $r23, r2, r1)
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : specialinvoke $r19.<org.apache.ambari.server.hooks.users.UserHookService$ClusterData: void <init>(java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String)>($r20, $r21, $r23, r2, r1) >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : return $r19
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r14 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("hadoop-env") >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r5 = interfaceinvoke $r14.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r5 = interfaceinvoke $r14.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r15 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("hdfs_user_keytab")
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r15 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("hdfs_user_keytab") >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r1 = (java.lang.String) $r15
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r1 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r16 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("hdfs_principal_name")
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r16 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("hdfs_principal_name") >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r2 = (java.lang.String) $r16
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : r2 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : goto [?= $r19 = new org.apache.ambari.server.hooks.users.UserHookService$ClusterData]
org.apache.ambari.server.hooks.users.UserHookService.getClusterData : goto [?= $r19 = new org.apache.ambari.server.hooks.users.UserHookService$ClusterData] >>>>>>>> org.apache.ambari.server.hooks.users.UserHookService.getClusterData : $r19 = new org.apache.ambari.server.hooks.users.UserHookService$ClusterData
