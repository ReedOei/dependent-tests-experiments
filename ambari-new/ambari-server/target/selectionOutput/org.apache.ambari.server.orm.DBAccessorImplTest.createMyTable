org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r4 = r0.<org.apache.ambari.server.orm.DBAccessorImplTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r5 = interfaceinvoke $r4.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessorImpl")
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r5 = interfaceinvoke $r4.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessorImpl") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : r2 = (org.apache.ambari.server.orm.DBAccessorImpl) $r5
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : r2 = (org.apache.ambari.server.orm.DBAccessorImpl) $r5 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r6 = new java.util.ArrayList
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : r3 = $r6
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : r3 = $r6 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r7 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r7 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "java/lang/Long", null, null, 0)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r7.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("id", class "java/lang/Long", null, null, 0) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r8 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r8 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20000)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(20000) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("name", class "java/lang/String", $r9, null, 1)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r8.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("name", class "java/lang/String", $r9, null, 1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r8)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r10 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r10 = new org.apache.ambari.server.orm.DBAccessor$DBColumnInfo >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r10.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("time", class "java/lang/Long", null, null, 1)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : specialinvoke $r10.<org.apache.ambari.server.orm.DBAccessor$DBColumnInfo: void <init>(java.lang.String,java.lang.Class,java.lang.Integer,java.lang.Object,boolean)>("time", class "java/lang/Long", null, null, 1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r10)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r11 = newarray (java.lang.String)[1]
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r11 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r11[0] = "id"
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : $r11[0] = "id" >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessorImpl: void createTable(java.lang.String,java.util.List,java.lang.String[])>(r1, r3, $r11)
org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : virtualinvoke r2.<org.apache.ambari.server.orm.DBAccessorImpl: void createTable(java.lang.String,java.util.List,java.lang.String[])>(r1, r3, $r11) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImplTest.createMyTable : return
