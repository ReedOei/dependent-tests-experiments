org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : if $z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : r3 = (org.apache.ambari.server.controller.GroupRequest) $r5
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : r3 = (org.apache.ambari.server.controller.GroupRequest) $r5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r6 = virtualinvoke r3.<org.apache.ambari.server.controller.GroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r6 = virtualinvoke r3.<org.apache.ambari.server.controller.GroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r6)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : if $z1 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r7 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.security.authorization.Users users>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r8 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.security.authorization.Users users> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r9 = virtualinvoke r3.<org.apache.ambari.server.controller.GroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r9 = virtualinvoke r3.<org.apache.ambari.server.controller.GroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : r4 = virtualinvoke $r8.<org.apache.ambari.server.security.authorization.Users: org.apache.ambari.server.security.authorization.Group getGroup(java.lang.String)>($r9)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : r4 = virtualinvoke $r8.<org.apache.ambari.server.security.authorization.Users: org.apache.ambari.server.security.authorization.Group getGroup(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : if r4 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : if r4 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : if r4 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r11 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.security.authorization.Users users>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r11 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.security.authorization.Users users> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r12 = virtualinvoke r3.<org.apache.ambari.server.controller.GroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r12 = virtualinvoke r3.<org.apache.ambari.server.controller.GroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r13 = <org.apache.ambari.server.security.authorization.GroupType: org.apache.ambari.server.security.authorization.GroupType LOCAL>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r13 = <org.apache.ambari.server.security.authorization.GroupType: org.apache.ambari.server.security.authorization.GroupType LOCAL> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : virtualinvoke $r11.<org.apache.ambari.server.security.authorization.Users: void createGroup(java.lang.String,org.apache.ambari.server.security.authorization.GroupType)>($r12, $r13)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : virtualinvoke $r11.<org.apache.ambari.server.security.authorization.Users: void createGroup(java.lang.String,org.apache.ambari.server.security.authorization.GroupType)>($r12, $r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r10 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Group already exists.")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Group already exists.") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : throw $r10
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : $r7 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : specialinvoke $r7.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Group name must be supplied.")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : specialinvoke $r7.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Group name must be supplied.") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createGroups : throw $r7
