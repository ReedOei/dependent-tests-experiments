org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r1 = new org.apache.ambari.server.controller.jmx.TestStreamProvider >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r1.<org.apache.ambari.server.controller.jmx.TestStreamProvider: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r1.<org.apache.ambari.server.controller.jmx.TestStreamProvider: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r2 = $r1
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r2 = $r1 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r10 = new org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestJMXHostProvider
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r10 = new org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestJMXHostProvider >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r10.<org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestJMXHostProvider: void <init>(boolean)>(0)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r10.<org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestJMXHostProvider: void <init>(boolean)>(0) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r3 = $r10
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r3 = $r10 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r11 = new org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestMetricHostProvider
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r11 = new org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestMetricHostProvider >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r11.<org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestMetricHostProvider: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r11.<org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest$TestMetricHostProvider: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r4 = $r11
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r4 = $r11 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r12 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory metricPropertyProviderFactory>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r12 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory metricPropertyProviderFactory> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r13 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.util.Map jmxPropertyIdsWithHAState>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r13 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.util.Map jmxPropertyIdsWithHAState> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "cluster_name")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "cluster_name") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r15 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "host_name")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r15 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "host_name") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "component_name")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r16 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "component_name") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r17 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "state")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r17 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>("HostRoles", "state") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r5 = interfaceinvoke $r12.<org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory: org.apache.ambari.server.controller.jmx.JMXPropertyProvider createJMXPropertyProvider(java.util.Map,org.apache.ambari.server.controller.utilities.StreamProvider,org.apache.ambari.server.controller.jmx.JMXHostProvider,org.apache.ambari.server.controller.metrics.MetricHostProvider,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, r2, r3, r4, $r14, $r15, $r16, $r17)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r5 = interfaceinvoke $r12.<org.apache.ambari.server.controller.metrics.MetricPropertyProviderFactory: org.apache.ambari.server.controller.jmx.JMXPropertyProvider createJMXPropertyProvider(java.util.Map,org.apache.ambari.server.controller.utilities.StreamProvider,org.apache.ambari.server.controller.jmx.JMXHostProvider,org.apache.ambari.server.controller.metrics.MetricHostProvider,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, r2, r3, r4, $r14, $r15, $r16, $r17) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r18 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r18 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r19 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r19 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r18.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r19)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r18.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r19) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r6 = $r18
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r6 = $r18 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r20 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r20 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r20, "c1")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r20, "c1") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r21 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r21 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r21, "domu-12-31-39-0e-34-e1.compute-1.internal")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r21, "domu-12-31-39-0e-34-e1.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r22 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r22 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r22, "NAMENODE")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r22, "NAMENODE") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r23 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_STATE_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r23 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_STATE_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r23, "STARTED")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r23, "STARTED") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r24 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r24 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r24.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r24.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r7 = $r24
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r7 = $r24 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r25 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("metrics/dfs/FSNamesystem")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r25 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("metrics/dfs/FSNamesystem") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r8 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set,java.util.Map)>($r25, r7)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r8 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set,java.util.Map)>($r25, r7) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r26 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r6)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r26 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r27 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r26, r8, null)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r27 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r26, r8, null) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $i0 = interfaceinvoke $r27.<java.util.Set: int size()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $i0 = interfaceinvoke $r27.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $l1 = (long) $i0
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r28 = new java.util.ArrayList
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r28 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r28.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r28.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r9 = $r28
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r9 = $r28 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r29 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r29 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r29)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r30 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx?get=Hadoop:service=NameNode,name=FSNamesystem::tag.HAState")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r30 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx?get=Hadoop:service=NameNode,name=FSNamesystem::tag.HAState") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r30)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r31 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.util.List getSpecs()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r31 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.util.List getSpecs()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r9, $r31)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r9, $r31) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(184320)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(184320) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r33 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/dfs/FSNamesystem/CapacityUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r33 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/dfs/FSNamesystem/CapacityUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r32, $r33)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r32, $r33) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(21)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(21) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r35 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/dfs/FSNamesystem/UnderReplicatedBlocks")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r35 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/dfs/FSNamesystem/UnderReplicatedBlocks") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r35)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r34, $r35) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r36 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/dfs/FSNamesystem/HAState")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r36 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/dfs/FSNamesystem/HAState") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("customState", $r36)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("customState", $r36) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r37 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/rpc/ReceivedBytes")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r37 = interfaceinvoke r6.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/rpc/ReceivedBytes") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r37)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r38 = new org.apache.ambari.server.controller.internal.ResourceImpl
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r38 = new org.apache.ambari.server.controller.internal.ResourceImpl >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r39 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r39 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r38.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r39)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r38.<org.apache.ambari.server.controller.internal.ResourceImpl: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r39) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r40 = $r38
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r40 = $r38 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r41 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r41 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r41, "c1")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r41, "c1") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r42 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_HOST_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r42 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_HOST_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r42, "domu-12-31-39-0e-34-e1.compute-1.internal")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r42, "domu-12-31-39-0e-34-e1.compute-1.internal") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r43 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r43 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_COMPONENT_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r43, "NAMENODE")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r43, "NAMENODE") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r44 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_STATE_PROPERTY_ID>
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r44 = <org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest: java.lang.String HOST_COMPONENT_STATE_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r44, "STARTED")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: void setProperty(java.lang.String,java.lang.Object)>($r44, "STARTED") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r45 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.util.List getSpecs()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r45 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.util.List getSpecs()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke $r45.<java.util.List: void clear()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke $r45.<java.util.List: void clear()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r46 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r46 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r46.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : specialinvoke $r46.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r47 = $r46
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r47 = $r46 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r48 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("metrics/dfs/FSNamesystem/CapacityUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r48 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>("metrics/dfs/FSNamesystem/CapacityUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r49 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set,java.util.Map)>($r48, r47)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : r49 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set,java.util.Map)>($r48, r47) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r50 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r40)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r50 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r40) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r51 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r50, r49, null)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r51 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r50, r49, null) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $i2 = interfaceinvoke $r51.<java.util.Set: int size()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $i2 = interfaceinvoke $r51.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $l3 = (long) $i2
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $l3 = (long) $i2 >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r9.<java.util.List: void clear()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r9.<java.util.List: void clear()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r52 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r52 = virtualinvoke r5.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("http", "domu-12-31-39-0e-34-e1.compute-1.internal", "50070", "/jmx") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r52)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r53 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.util.List getSpecs()>()
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r53 = virtualinvoke r2.<org.apache.ambari.server.controller.jmx.TestStreamProvider: java.util.List getSpecs()>() >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r9, $r53)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r9, $r53) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(184320)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(184320) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r55 = interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/dfs/FSNamesystem/CapacityUsed")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r55 = interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/dfs/FSNamesystem/CapacityUsed") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r54, $r55)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r54, $r55) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r56 = interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/dfs/FSNamesystem/HAState")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r56 = interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/dfs/FSNamesystem/HAState") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r56)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r57 = interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/rpc/ReceivedBytes")
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : $r57 = interfaceinvoke r40.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>("metrics/rpc/ReceivedBytes") >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r57)
org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.controller.metrics.JMXPropertyProviderTest.testPopulateResources_HAState_request : return
