org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r2 = new org.apache.ambari.server.bootstrap.BSResponse >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : specialinvoke $r2.<org.apache.ambari.server.bootstrap.BSResponse: void <init>()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : specialinvoke $r2.<org.apache.ambari.server.bootstrap.BSResponse: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : r3 = $r2
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : r3 = $r2 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r5 = <org.apache.ambari.server.bootstrap.BootStrapImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r5 = <org.apache.ambari.server.bootstrap.BootStrapImpl: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BootStrapping hosts ")
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BootStrapping hosts ") >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r8 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: java.lang.String hostListAsString()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r8 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: java.lang.String hostListAsString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : interfaceinvoke $r5.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r10)
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : interfaceinvoke $r5.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r11 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: org.apache.ambari.server.bootstrap.BSRunner bsRunner>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r11 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: org.apache.ambari.server.bootstrap.BSRunner bsRunner> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : if $r11 == null
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : if $r11 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setLog(java.lang.String)>("BootStrap in Progress: Cannot Run more than one.")
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : if $r11 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i0 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int requestId>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i0 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int requestId> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i1 = $i0 + 1
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i1 = $i0 + 1 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int requestId> = $i1
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int requestId> = $i1 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r14 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: java.util.List getHosts()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r14 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: java.util.List getHosts()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : if $r14 == null
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : if $r14 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r15 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: java.util.List getHosts()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : if $r14 == null >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r16 = new org.apache.ambari.server.bootstrap.BootStrapStatus
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r16 = new org.apache.ambari.server.bootstrap.BootStrapStatus >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : specialinvoke $r16.<org.apache.ambari.server.bootstrap.BootStrapStatus: void <init>()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : specialinvoke $r16.<org.apache.ambari.server.bootstrap.BootStrapStatus: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : r4 = $r16
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : r4 = $r16 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r4.<org.apache.ambari.server.bootstrap.BootStrapStatus: void setLog(java.lang.String)>("Host list is empty.")
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r4.<org.apache.ambari.server.bootstrap.BootStrapStatus: void setLog(java.lang.String)>("Host list is empty.") >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r17 = new java.util.ArrayList
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r17 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r4.<org.apache.ambari.server.bootstrap.BootStrapStatus: void setHostsStatus(java.util.List)>($r17)
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r4.<org.apache.ambari.server.bootstrap.BootStrapStatus: void setHostsStatus(java.util.List)>($r17) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r18 = <org.apache.ambari.server.bootstrap.BootStrapStatus$BSStat: org.apache.ambari.server.bootstrap.BootStrapStatus$BSStat ERROR>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r18 = <org.apache.ambari.server.bootstrap.BootStrapStatus$BSStat: org.apache.ambari.server.bootstrap.BootStrapStatus$BSStat ERROR> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r4.<org.apache.ambari.server.bootstrap.BootStrapStatus: void setStatus(org.apache.ambari.server.bootstrap.BootStrapStatus$BSStat)>($r18)
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r4.<org.apache.ambari.server.bootstrap.BootStrapStatus: void setStatus(org.apache.ambari.server.bootstrap.BootStrapStatus$BSStat)>($r18) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i2 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int requestId>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i2 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int requestId> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $l3 = (long) $i2
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $l3 = (long) $i2 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: void updateStatus(long,org.apache.ambari.server.bootstrap.BootStrapStatus)>($l3, r4)
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: void updateStatus(long,org.apache.ambari.server.bootstrap.BootStrapStatus)>($l3, r4) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r19 = <org.apache.ambari.server.bootstrap.BSResponse$BSRunStat: org.apache.ambari.server.bootstrap.BSResponse$BSRunStat OK>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r19 = <org.apache.ambari.server.bootstrap.BSResponse$BSRunStat: org.apache.ambari.server.bootstrap.BSResponse$BSRunStat OK> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setStatus(org.apache.ambari.server.bootstrap.BSResponse$BSRunStat)>($r19)
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setStatus(org.apache.ambari.server.bootstrap.BSResponse$BSRunStat)>($r19) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setLog(java.lang.String)>("Host list is empty.")
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setLog(java.lang.String)>("Host list is empty.") >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i4 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int requestId>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i4 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int requestId> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $l5 = (long) $i4
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $l5 = (long) $i4 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setRequestId(long)>($l5)
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setRequestId(long)>($l5) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : return r3
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r15 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: java.util.List getHosts()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $z0 = interfaceinvoke $r15.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $z0 = interfaceinvoke $r15.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : if $z0 == 0
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r16 = new org.apache.ambari.server.bootstrap.BootStrapStatus
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r20 = new org.apache.ambari.server.bootstrap.BSRunner
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r20 = new org.apache.ambari.server.bootstrap.BSRunner >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r21 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.io.File bootStrapDir>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r21 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.io.File bootStrapDir> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r22 = virtualinvoke $r21.<java.io.File: java.lang.String toString()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r22 = virtualinvoke $r21.<java.io.File: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r23 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.lang.String bootScript>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r23 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.lang.String bootScript> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r24 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.lang.String bootSetupAgentScript>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r24 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.lang.String bootSetupAgentScript> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r25 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.lang.String bootSetupAgentPassword>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r25 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.lang.String bootSetupAgentPassword> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i6 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int requestId>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i6 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int requestId> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r26 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.lang.String masterHostname>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r26 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.lang.String masterHostname> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $z1 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: boolean isVerbose()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $z1 = virtualinvoke r1.<org.apache.ambari.server.bootstrap.SshHostInfo: boolean isVerbose()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r27 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.lang.String clusterOsFamily>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r27 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.lang.String clusterOsFamily> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r28 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.lang.String projectVersion>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r28 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: java.lang.String projectVersion> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i7 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int serverPort>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i7 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int serverPort> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : specialinvoke $r20.<org.apache.ambari.server.bootstrap.BSRunner: void <init>(org.apache.ambari.server.bootstrap.BootStrapImpl,org.apache.ambari.server.bootstrap.SshHostInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long,java.lang.String,boolean,java.lang.String,java.lang.String,int)>(r0, r1, $r22, $r23, $r24, $r25, $i6, 0L, $r26, $z1, $r27, $r28, $i7)
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : specialinvoke $r20.<org.apache.ambari.server.bootstrap.BSRunner: void <init>(org.apache.ambari.server.bootstrap.BootStrapImpl,org.apache.ambari.server.bootstrap.SshHostInfo,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long,java.lang.String,boolean,java.lang.String,java.lang.String,int)>(r0, r1, $r22, $r23, $r24, $r25, $i6, 0L, $r26, $z1, $r27, $r28, $i7) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: org.apache.ambari.server.bootstrap.BSRunner bsRunner> = $r20
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: org.apache.ambari.server.bootstrap.BSRunner bsRunner> = $r20 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r29 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: org.apache.ambari.server.bootstrap.BSRunner bsRunner>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r29 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: org.apache.ambari.server.bootstrap.BSRunner bsRunner> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke $r29.<org.apache.ambari.server.bootstrap.BSRunner: void start()>()
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke $r29.<org.apache.ambari.server.bootstrap.BSRunner: void start()>() >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r30 = <org.apache.ambari.server.bootstrap.BSResponse$BSRunStat: org.apache.ambari.server.bootstrap.BSResponse$BSRunStat OK>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r30 = <org.apache.ambari.server.bootstrap.BSResponse$BSRunStat: org.apache.ambari.server.bootstrap.BSResponse$BSRunStat OK> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setStatus(org.apache.ambari.server.bootstrap.BSResponse$BSRunStat)>($r30)
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setStatus(org.apache.ambari.server.bootstrap.BSResponse$BSRunStat)>($r30) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setLog(java.lang.String)>("Running Bootstrap now.")
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setLog(java.lang.String)>("Running Bootstrap now.") >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i8 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int requestId>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $i8 = r0.<org.apache.ambari.server.bootstrap.BootStrapImpl: int requestId> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $l9 = (long) $i8
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $l9 = (long) $i8 >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setRequestId(long)>($l9)
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setRequestId(long)>($l9) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : return r3
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setLog(java.lang.String)>("BootStrap in Progress: Cannot Run more than one.") >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r12 = <org.apache.ambari.server.bootstrap.BSResponse$BSRunStat: org.apache.ambari.server.bootstrap.BSResponse$BSRunStat ERROR>
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : $r12 = <org.apache.ambari.server.bootstrap.BSResponse$BSRunStat: org.apache.ambari.server.bootstrap.BSResponse$BSRunStat ERROR> >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setStatus(org.apache.ambari.server.bootstrap.BSResponse$BSRunStat)>($r12)
org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : virtualinvoke r3.<org.apache.ambari.server.bootstrap.BSResponse: void setStatus(org.apache.ambari.server.bootstrap.BSResponse$BSRunStat)>($r12) >>>>>>>> org.apache.ambari.server.bootstrap.BootStrapImpl.runBootStrap : return r3
