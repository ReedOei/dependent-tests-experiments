org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r5 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set getRequestPropertyIds(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r2, r3) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r23 = new java.util.HashSet
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r23 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r23.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r23.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r6 = $r23
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r6 = $r23 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r24 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String componentNamePropertyId>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r24 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String componentNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r25 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r24)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r25 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r7 = (java.lang.String) $r25
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r7 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r26 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map getComponentMetrics()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r26 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map getComponentMetrics()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r27 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r27 = interfaceinvoke $r26.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r27 != null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r27 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r27 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r8 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r8 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z1 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r28 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke r5.<java.util.Set: boolean removeAll(java.util.Collection)>(r6)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke r5.<java.util.Set: boolean removeAll(java.util.Collection)>(r6) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z6 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z6 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z6 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r30 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String statePropertyId>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r30 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String statePropertyId> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r30 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r30 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r31 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String statePropertyId>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r30 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r35 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String clusterNamePropertyId>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r35 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String clusterNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r36 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r35)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r36 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r37 = (java.lang.String) $r36
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r37 = (java.lang.String) $r36 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r38 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.jmx.JMXHostProvider jmxHostProvider>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r38 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.jmx.JMXHostProvider jmxHostProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r39 = interfaceinvoke $r38.<org.apache.ambari.server.controller.jmx.JMXHostProvider: java.lang.String getJMXProtocol(java.lang.String,java.lang.String)>(r37, r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r39 = interfaceinvoke $r38.<org.apache.ambari.server.controller.jmx.JMXHostProvider: java.lang.String getJMXProtocol(java.lang.String,java.lang.String)>(r37, r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : z0 = 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : z0 = 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z8 = virtualinvoke r39.<java.lang.String: boolean equals(java.lang.Object)>("https")
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z8 = virtualinvoke r39.<java.lang.String: boolean equals(java.lang.Object)>("https") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z8 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : z0 = 1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r10 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set getHosts(org.apache.ambari.server.controller.spi.Resource,java.lang.String,java.lang.String)>(r1, r37, r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r10 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set getHosts(org.apache.ambari.server.controller.spi.Resource,java.lang.String,java.lang.String)>(r1, r37, r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r10 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r10 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z9 = interfaceinvoke r10.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r10 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r40 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r40 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r41 = new java.lang.StringBuilder
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r41 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r41.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get JMX metrics.  No host name for ")
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get JMX metrics.  No host name for ") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r40.<org.slf4j.Logger: void warn(java.lang.String)>($r44)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r40.<org.slf4j.Logger: void warn(java.lang.String)>($r44) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z9 = interfaceinvoke r10.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z9 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r40 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : n0 = null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : n0 = null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r11 = interfaceinvoke r10.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r11 = interfaceinvoke r10.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z10 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z10 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z10 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r45 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r45 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r12 = (java.lang.String) $r45
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r12 = (java.lang.String) $r45 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r13 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getPort(java.lang.String,java.lang.String,java.lang.String,boolean)>(r37, r7, r12, z0)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r12 = (java.lang.String) $r45 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r79 = $r78 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r80 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r80 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r81 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r81 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r81[0] = r12
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r81[0] = r12 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r81[1] = r7
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r81[1] = r7 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r81[2] = n0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r81[2] = n0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r82 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to get JMX metrics from the host %s for the component %s. Spec: %s", $r81)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r82 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to get JMX metrics from the host %s for the component %s. Spec: %s", $r81) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r80.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r82, r79)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r80.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r82, r79) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r83 = $r80
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r83 = $r80 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : staticinvoke <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String logException(java.lang.Throwable)>(r83)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : staticinvoke <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String logException(java.lang.Throwable)>(r83) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z10 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z10 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z10 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r13 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getPort(java.lang.String,java.lang.String,java.lang.String,boolean)>(r37, r7, r12, z0) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r13 != null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r13 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getPort(java.lang.String,java.lang.String,java.lang.String,boolean)>(r37, r7, r12, z0) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r13 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r46 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r13 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r14 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r39, r12, r13, "/jmx")
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r13 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r14 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r39, r12, r13, "/jmx") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r52 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r14 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r39, r12, r13, "/jmx") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r52 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r53 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r52 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r53 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r54 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r53 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r54 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r52.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r53, $r54, r14)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r54 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r52.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r53, $r54, r14) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r55 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r52.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r53, $r54, r14) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r55 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r15 = virtualinvoke $r55.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r14)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r55 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r15 = virtualinvoke $r55.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r14) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z11 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r15 = virtualinvoke $r55.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r14) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z11 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z11 != 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z11 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r15
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r15 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void getHadoopMetricValue(org.apache.ambari.server.controller.jmx.JMXMetricHolder,java.util.Set,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket)>(r15, r5, r1, r2, r4)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r15 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r57 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r15 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r57 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z12 = interfaceinvoke $r57.<java.util.Map: boolean containsKey(java.lang.Object)>(r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r57 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z12 = interfaceinvoke $r57.<java.util.Map: boolean containsKey(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z12 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z12 = interfaceinvoke $r57.<java.util.Map: boolean containsKey(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r16 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= (branch)]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z10 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r16 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r16 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z13 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z13 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r58 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z13 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= (branch)]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z13 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r58 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r17 = (java.lang.String) $r58
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r58 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r17 = (java.lang.String) $r58 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r59 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r17 = (java.lang.String) $r58 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r59 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r60 = interfaceinvoke $r59.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r59 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r60 = interfaceinvoke $r59.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r61 = (java.util.Map) $r60
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r60 = interfaceinvoke $r59.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r61 = (java.util.Map) $r60 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r62 = interfaceinvoke $r61.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r61 = (java.util.Map) $r60 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r62 = interfaceinvoke $r61.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r18 = interfaceinvoke $r62.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r62 = interfaceinvoke $r61.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r18 = interfaceinvoke $r62.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z14 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r18 = interfaceinvoke $r62.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z14 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z14 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z14 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r63 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r63 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r19 = (java.lang.String) $r63
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r63 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r19 = (java.lang.String) $r63 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r20 = null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r19 = (java.lang.String) $r63 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r20 = null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z15 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>(r17)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r20 = null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z15 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z15 != 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z15 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z15 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r64 = new java.lang.StringBuilder
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z15 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r68 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z15 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r68 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r69 = interfaceinvoke $r68.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r68 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r69 = interfaceinvoke $r68.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r70 = (java.util.Map) $r69
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r69 = interfaceinvoke $r68.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r70 = (java.util.Map) $r69 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r71 = interfaceinvoke $r70.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r70 = (java.util.Map) $r69 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r71 = interfaceinvoke $r70.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r20 = (java.lang.String) $r71
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r71 = interfaceinvoke $r70.<java.util.Map: java.lang.Object get(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r20 = (java.lang.String) $r71 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r20 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r20 = (java.lang.String) $r71 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r20 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r21 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r39, r12, r13, r20)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r20 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z14 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r20 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z14 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z14 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z14 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r21 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r39, r12, r13, r20) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r21 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r39, r12, r13, r20) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r73 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r73 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r74 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r73 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r74 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r72.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r73, $r74, r21)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r74 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r72.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r73, $r74, r21) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r75 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r72.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r73, $r74, r21) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r75 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r22 = virtualinvoke $r75.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r21)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r75 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r22 = virtualinvoke $r75.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r21) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z17 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r22 = virtualinvoke $r75.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r21) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z17 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z17 != 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z17 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z17 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z17 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r22
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z17 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r22 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r77 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r17)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r22 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z14 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r22 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r77 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void getHadoopMetricValue(org.apache.ambari.server.controller.jmx.JMXMetricHolder,java.util.Set,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket)>(r22, $r77, r1, r2, r4)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r77 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r17) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void getHadoopMetricValue(org.apache.ambari.server.controller.jmx.JMXMetricHolder,java.util.Set,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket)>(r22, $r77, r1, r2, r4) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z14 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void getHadoopMetricValue(org.apache.ambari.server.controller.jmx.JMXMetricHolder,java.util.Set,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket)>(r22, $r77, r1, r2, r4) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r64 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r64.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r64 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r64.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r64.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z16 = virtualinvoke r19.<java.lang.String: boolean startsWith(java.lang.String)>($r67)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z16 = virtualinvoke r19.<java.lang.String: boolean startsWith(java.lang.String)>($r67) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z16 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z16 = virtualinvoke r19.<java.lang.String: boolean startsWith(java.lang.String)>($r67) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r68 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r20 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void getHadoopMetricValue(org.apache.ambari.server.controller.jmx.JMXMetricHolder,java.util.Set,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket)>(r15, r5, r1, r2, r4) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r57 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void getHadoopMetricValue(org.apache.ambari.server.controller.jmx.JMXMetricHolder,java.util.Set,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket)>(r15, r5, r1, r2, r4) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r46 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r47 = new java.lang.StringBuilder
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r46 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r47 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r47 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get JMX metrics.  No port value for ")
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get JMX metrics.  No port value for ") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get JMX metrics.  No port value for ") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r46.<org.slf4j.Logger: void warn(java.lang.String)>($r50)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r46.<org.slf4j.Logger: void warn(java.lang.String)>($r50) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r46.<org.slf4j.Logger: void warn(java.lang.String)>($r50) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r78 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : z0 = 1 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r10 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set getHosts(org.apache.ambari.server.controller.spi.Resource,java.lang.String,java.lang.String)>(r1, r37, r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r31 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String statePropertyId> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r32 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r31)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r32 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r33 = (java.lang.String) $r32
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r33 = (java.lang.String) $r32 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r33 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r33 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r34 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set healthyStates>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r33 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r35 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String clusterNamePropertyId>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r34 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set healthyStates> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z7 = interfaceinvoke $r34.<java.util.Set: boolean contains(java.lang.Object)>(r33)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z7 = interfaceinvoke $r34.<java.util.Set: boolean contains(java.lang.Object)>(r33) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z7 != 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r35 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String clusterNamePropertyId>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r28 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r9 = (java.lang.String) $r28
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r9 = (java.lang.String) $r28 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r29 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Request: org.apache.ambari.server.controller.spi.TemporalInfo getTemporalInfo(java.lang.String)>(r9)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r29 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Request: org.apache.ambari.server.controller.spi.TemporalInfo getTemporalInfo(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r29 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r29 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r29 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z3 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: boolean isSupportedPropertyId(java.lang.String,java.lang.String)>(r7, r9)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z3 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: boolean isSupportedPropertyId(java.lang.String,java.lang.String)>(r7, r9) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z3 != 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z3 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: boolean isSupportedPropertyId(java.lang.String,java.lang.String)>(r7, r9)
