org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $r4 = r0.<org.apache.ambari.server.controller.internal.AbstractPropertyProvider: java.util.Map componentMetrics> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : r3 = (java.util.Map) $r5
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : r3 = (java.util.Map) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : if r3 == null
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $z2 = 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $z2 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : return $z2
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : if $z0 != 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $z1 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractPropertyProvider: boolean checkPropertyCategory(java.lang.String)>(r2)
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $z2 = 1
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $z2 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : goto [?= return $z2]
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : return $z2
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $z1 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.AbstractPropertyProvider: boolean checkPropertyCategory(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : if $z1 == 0
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $z2 = 1
org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractPropertyProvider.isSupportedPropertyId : $z2 = 0
