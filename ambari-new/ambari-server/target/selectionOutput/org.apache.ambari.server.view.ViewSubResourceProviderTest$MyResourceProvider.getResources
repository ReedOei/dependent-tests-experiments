org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : specialinvoke $r2.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : r3 = $r2
org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : r3 = $r2 >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r4 = new org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResource
org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r4 = new org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResource >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r6 = specialinvoke r0.<org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider: java.util.Map getMetricsValue(java.lang.Number,org.apache.ambari.view.ReadRequest,java.lang.String)>($r5, r1, "myMetric")
org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r6 = specialinvoke r0.<org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider: java.util.Map getMetricsValue(java.lang.Number,org.apache.ambari.view.ReadRequest,java.lang.String)>($r5, r1, "myMetric") >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : specialinvoke $r4.<org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResource: void <init>(java.lang.String,java.lang.String,java.util.Map)>("1", "foo", $r6)
org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : specialinvoke $r4.<org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResource: void <init>(java.lang.String,java.lang.String,java.util.Map)>("1", "foo", $r6) >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r4)
org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r7 = new org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResource
org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r7 = new org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResource >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r9 = specialinvoke r0.<org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider: java.util.Map getMetricsValue(java.lang.Number,org.apache.ambari.view.ReadRequest,java.lang.String)>($r8, r1, "myMetric")
org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : $r9 = specialinvoke r0.<org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider: java.util.Map getMetricsValue(java.lang.Number,org.apache.ambari.view.ReadRequest,java.lang.String)>($r8, r1, "myMetric") >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : specialinvoke $r7.<org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResource: void <init>(java.lang.String,java.lang.String,java.util.Map)>("2", "bar", $r9)
org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : specialinvoke $r7.<org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResource: void <init>(java.lang.String,java.lang.String,java.util.Map)>("2", "bar", $r9) >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.view.ViewSubResourceProviderTest$MyResourceProvider.getResources : return r3
