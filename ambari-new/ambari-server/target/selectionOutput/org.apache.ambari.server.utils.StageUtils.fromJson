org.apache.ambari.server.utils.StageUtils.fromJson : $r2 = new org.codehaus.jackson.map.ObjectMapper >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : specialinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: void <init>()>()
org.apache.ambari.server.utils.StageUtils.fromJson : specialinvoke $r2.<org.codehaus.jackson.map.ObjectMapper: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : r3 = $r2
org.apache.ambari.server.utils.StageUtils.fromJson : r3 = $r2 >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : $r5 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT>
org.apache.ambari.server.utils.StageUtils.fromJson : $r5 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT> >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : virtualinvoke r3.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>($r5, 1)
org.apache.ambari.server.utils.StageUtils.fromJson : virtualinvoke r3.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>($r5, 1) >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : $r7 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature USE_ANNOTATIONS>
org.apache.ambari.server.utils.StageUtils.fromJson : $r7 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature USE_ANNOTATIONS> >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : virtualinvoke r3.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>($r7, 1)
org.apache.ambari.server.utils.StageUtils.fromJson : virtualinvoke r3.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>($r7, 1) >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : $r9 = new java.io.ByteArrayInputStream
org.apache.ambari.server.utils.StageUtils.fromJson : $r9 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : $r10 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF8")
org.apache.ambari.server.utils.StageUtils.fromJson : $r10 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF8") >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : $r11 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r10)
org.apache.ambari.server.utils.StageUtils.fromJson : $r11 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r10) >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : specialinvoke $r9.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11)
org.apache.ambari.server.utils.StageUtils.fromJson : specialinvoke $r9.<java.io.ByteArrayInputStream: void <init>(byte[])>($r11) >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : r4 = $r9
org.apache.ambari.server.utils.StageUtils.fromJson : r4 = $r9 >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : $r12 = virtualinvoke r3.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.InputStream,java.lang.Class)>(r4, r1)
org.apache.ambari.server.utils.StageUtils.fromJson : $r12 = virtualinvoke r3.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.InputStream,java.lang.Class)>(r4, r1) >>>>>>>> org.apache.ambari.server.utils.StageUtils.fromJson : return $r12
