org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r2 = $r1
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r2 = $r1 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r9 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection allHostRequests>
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r9 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection allHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r3 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r3 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : if $z0 == 0
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : return r2
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r4 = (org.apache.ambari.server.topology.HostRequest) $r10
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r4 = (org.apache.ambari.server.topology.HostRequest) $r10 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r5 = virtualinvoke r4.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostGroup getHostGroup()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r5 = virtualinvoke r4.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostGroup getHostGroup()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r11 = r0.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r11 = r0.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r13 = interfaceinvoke r5.<org.apache.ambari.server.topology.HostGroup: java.lang.String getName()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r13 = interfaceinvoke r5.<org.apache.ambari.server.topology.HostGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r14 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13)
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r14 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r15 = (org.apache.ambari.server.topology.HostGroupInfo) $r14
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r15 = (org.apache.ambari.server.topology.HostGroupInfo) $r14 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r16 = virtualinvoke $r15.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r16 = virtualinvoke $r15.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r6 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : if $z1 == 0
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r17 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r17 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r7 = (java.lang.String) $r17
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r7 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r18 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r18 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r8 = (java.util.Collection) $r18
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r8 = (java.util.Collection) $r18 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : if r8 != null
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : if r8 != null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r19 = new java.util.HashSet
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : if r8 != null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r21 = interfaceinvoke r5.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r21 = interfaceinvoke r5.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : interfaceinvoke r8.<java.util.Collection: boolean addAll(java.util.Collection)>($r21)
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : interfaceinvoke r8.<java.util.Collection: boolean addAll(java.util.Collection)>($r21) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r19 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : specialinvoke $r19.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : specialinvoke $r19.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r8 = $r19
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : r8 = $r19 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8)
org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r8) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.getProjectedTopology : $r21 = interfaceinvoke r5.<org.apache.ambari.server.topology.HostGroup: java.util.Collection getComponentNames()>()
