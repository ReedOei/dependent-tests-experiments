org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r5 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r5[0] = "RANGER"
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r5[0] = "RANGER" >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5)
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $z0 = specialinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isApplicable(org.apache.ambari.server.controller.PrereqCheckRequest,java.util.List,boolean)>(r1, $r6, 1)
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $z0 = specialinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isApplicable(org.apache.ambari.server.controller.PrereqCheckRequest,java.util.List,boolean)>(r1, $r6, 1) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : if $z0 != 0
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : return 0
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r7 = r0.<org.apache.ambari.server.checks.RangerPasswordCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r7 = r0.<org.apache.ambari.server.checks.RangerPasswordCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r8 = interfaceinvoke $r7.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r8 = interfaceinvoke $r7.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r9 = (org.apache.ambari.server.state.Clusters) $r8
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r9 = (org.apache.ambari.server.state.Clusters) $r8 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r10 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r10 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : r2 = interfaceinvoke $r9.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r10)
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : r2 = interfaceinvoke $r9.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r11 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r11 = virtualinvoke r3.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("HDP")
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("HDP") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : if $z1 == 0
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r12 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId getSourceStackId()>()
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : return 1
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $r12 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId getSourceStackId()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : r4 = virtualinvoke $r12.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : r4 = virtualinvoke $r12.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String)>(r4, "2.3.0.0")
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String)>(r4, "2.3.0.0") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : if $i0 < 0
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : if $i0 < 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $z2 = 1
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : if $i0 < 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $z2 = 0
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $z2 = 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : return $z2
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : $z2 = 1 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : goto [?= return $z2]
org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.isApplicable : return $z2
