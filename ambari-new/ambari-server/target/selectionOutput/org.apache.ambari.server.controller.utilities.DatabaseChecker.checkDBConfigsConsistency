org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r0 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Checking DB configs consistency")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Checking DB configs consistency") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z0 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z0 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r17 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r17 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r17 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r17 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r18 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r17 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r21 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r21 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r22 = interfaceinvoke $r21.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterDAO")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r22 = interfaceinvoke $r21.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ClusterDAO") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r1 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r22
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r1 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r22 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r2 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r2 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r2 == null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r2 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r2 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if z0 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r85 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r86 = "DB configs consistency check failed. Run \"ambari-server start --skip-database-validation\" to skip validation."
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r86 = "DB configs consistency check failed. Run \"ambari-server start --skip-database-validation\" to skip validation." >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r87 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r87 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r87.<org.slf4j.Logger: void error(java.lang.String)>(r86)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r87.<org.slf4j.Logger: void error(java.lang.String)>(r86) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r88 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r88 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r88.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r86)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r88.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r86) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : throw $r88
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r85 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r85.<org.slf4j.Logger: void info(java.lang.String)>("DB configs consistency check passed.")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r85.<org.slf4j.Logger: void info(java.lang.String)>("DB configs consistency check passed.") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= return]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : return
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z1 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r23 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if z0 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r23 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r4 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r23
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r4 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r23 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r5 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getConfigMappingEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r5 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getConfigMappingEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r6 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getClusterConfigEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r6 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getClusterConfigEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r5 == null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r5 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r24 = new java.util.HashMap
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r5 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r24 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r24.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r24.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r7 = $r24
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r7 = $r24 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r8 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r8 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z2 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r25 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r42 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getClusterServiceEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r42 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getClusterServiceEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r43 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.ClusterStateEntity getClusterStateEntity()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r43 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.ClusterStateEntity getClusterStateEntity()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r43 == null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r43 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r44 = virtualinvoke r43.<org.apache.ambari.server.orm.entities.ClusterStateEntity: org.apache.ambari.server.orm.entities.StackEntity getCurrentStack()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r43 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r44 = virtualinvoke r43.<org.apache.ambari.server.orm.entities.ClusterStateEntity: org.apache.ambari.server.orm.entities.StackEntity getCurrentStack()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r45 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r45 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r46 = virtualinvoke r44.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String getStackName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r46 = virtualinvoke r44.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r47 = virtualinvoke r44.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r47 = virtualinvoke r44.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r48 = virtualinvoke $r45.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>($r46, $r47)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r48 = virtualinvoke $r45.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>($r46, $r47) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r11 = interfaceinvoke r42.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r11 = interfaceinvoke r42.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z5 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z5 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z5 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r49 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r49 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r12 = (org.apache.ambari.server.orm.entities.ClusterServiceEntity) $r49
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r12 = (org.apache.ambari.server.orm.entities.ClusterServiceEntity) $r49 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r50 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r50 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r51 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity getServiceDesiredStateEntity()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r51 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity getServiceDesiredStateEntity()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r52 = virtualinvoke $r51.<org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r52 = virtualinvoke $r51.<org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z6 = virtualinvoke $r50.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r52)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z6 = virtualinvoke $r50.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z6 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r13 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z5 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z5 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z5 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r13 = virtualinvoke r12.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r53 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r53 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r54 = virtualinvoke r48.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r54 = virtualinvoke r48.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r55 = virtualinvoke r48.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r55 = virtualinvoke r48.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r14 = virtualinvoke $r53.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r54, $r55, r13)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r14 = virtualinvoke $r53.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r54, $r55, r13) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r56 = virtualinvoke r14.<org.apache.ambari.server.state.ServiceInfo: java.util.Map getConfigTypeAttributes()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r56 = virtualinvoke r14.<org.apache.ambari.server.state.ServiceInfo: java.util.Map getConfigTypeAttributes()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r57 = interfaceinvoke $r56.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r57 = interfaceinvoke $r56.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r15 = interfaceinvoke $r57.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r15 = interfaceinvoke $r57.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z7 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r58 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z5 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r58 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r16 = (java.lang.String) $r58
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r16 = (java.lang.String) $r58 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r59 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r59 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r59 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r59 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z0 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r59 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r67 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r67 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r68 = (java.lang.Integer) $r67
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r68 = (java.lang.Integer) $r67 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i4 = virtualinvoke $r68.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i4 = virtualinvoke $r68.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i4 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i4 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z0 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i4 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r76 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r76 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r77 = (java.lang.Integer) $r76
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r77 = (java.lang.Integer) $r76 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i5 = virtualinvoke $r77.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i5 = virtualinvoke $r77.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i5 <= 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i5 <= 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z0 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i5 <= 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z0 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r78 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r78 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r79 = new java.lang.StringBuilder
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r79 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r79.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r79.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClusterConfigMapping selected count is more than 1 for service=")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClusterConfigMapping selected count is more than 1 for service=") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type_name=")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type_name=") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r78.<org.slf4j.Logger: void error(java.lang.String)>($r84)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r78.<org.slf4j.Logger: void error(java.lang.String)>($r84) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z0 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r69 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r69 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r70 = new java.lang.StringBuilder
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r70 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r70.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClusterConfigMapping selected count is 0 for service=")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClusterConfigMapping selected count is 0 for service=") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type_name=")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type_name=") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r69.<org.slf4j.Logger: void error(java.lang.String)>($r75)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r69.<org.slf4j.Logger: void error(java.lang.String)>($r75) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z0 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r60 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r60 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r61 = new java.lang.StringBuilder
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r61 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r61.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r61.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClusterConfigMapping does not contain mapping for service=")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClusterConfigMapping does not contain mapping for service=") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type_name=")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" type_name=") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r60.<org.slf4j.Logger: void error(java.lang.String)>($r66)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r60.<org.slf4j.Logger: void error(java.lang.String)>($r66) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z7 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r25 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r9 = (org.apache.ambari.server.orm.entities.ClusterConfigMappingEntity) $r25
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r9 = (org.apache.ambari.server.orm.entities.ClusterConfigMappingEntity) $r25 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r10 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.ClusterConfigMappingEntity: java.lang.String getType()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r10 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.ClusterConfigMappingEntity: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i1 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.ClusterConfigMappingEntity: int isSelected()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i1 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.ClusterConfigMappingEntity: int isSelected()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i1 <= 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r26 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z4 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r10)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z4 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z4 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r40)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r40) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r26 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r26 == null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r26 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r27 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r26 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i2 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i2 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : i0 = $i2
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : i0 = $i2 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i3 = i0 + 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r29)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r29) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r31 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.ClusterConfigMappingEntity: java.lang.String getTag()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r31 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.ClusterConfigMappingEntity: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z3 = staticinvoke <org.apache.ambari.server.controller.utilities.DatabaseChecker: boolean clusterConfigsContainTypeAndTag(java.util.Collection,java.lang.String,java.lang.String)>(r6, r10, $r31)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z3 = staticinvoke <org.apache.ambari.server.controller.utilities.DatabaseChecker: boolean clusterConfigsContainTypeAndTag(java.util.Collection,java.lang.String,java.lang.String)>(r6, r10, $r31) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z3 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z0 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z0 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r32 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r32 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r33 = new java.lang.StringBuilder
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r33 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClusterConfig does not contain mapping for type_name=")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClusterConfig does not contain mapping for type_name=") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tag=")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tag=") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r37 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.ClusterConfigMappingEntity: java.lang.String getTag()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r37 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.ClusterConfigMappingEntity: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r32.<org.slf4j.Logger: void error(java.lang.String)>($r39)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r32.<org.slf4j.Logger: void error(java.lang.String)>($r39) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r27 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r28 = (java.lang.Integer) $r27
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r28 = (java.lang.Integer) $r27 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i2 = virtualinvoke $r28.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i2 = virtualinvoke $r28.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= i0 = $i2]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= i0 = $i2] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : i0 = $i2
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r18 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r19 = interfaceinvoke $r18.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r19 = interfaceinvoke $r18.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/api/services/AmbariMetaInfo") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r20 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r19
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r20 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r19 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> = $r20
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> = $r20 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r21 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector>
