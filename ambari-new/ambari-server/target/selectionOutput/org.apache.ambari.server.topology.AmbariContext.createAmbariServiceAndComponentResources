org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r13 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r3 = interfaceinvoke $r13.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r3 = interfaceinvoke $r13.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r14 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r3 = interfaceinvoke $r13.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r18 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r19 = $r18 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r20 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r20 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r5 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r21 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to persist service and component resources: ")
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r21 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to persist service and component resources: ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r23, r19)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r23, r19) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : throw $r20
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r14 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r15 = interfaceinvoke $r14.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r14 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r18 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r15 = interfaceinvoke $r14.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r4 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r15 = interfaceinvoke $r14.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r18 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r4 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r16 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r4 = interfaceinvoke $r15.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r18 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r16 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r16 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r18 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r3.<java.util.Collection: boolean removeAll(java.util.Collection)>($r17)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r18 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r3.<java.util.Collection: boolean removeAll(java.util.Collection)>($r17) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : goto [?= $r24 = new java.util.HashSet]
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r3.<java.util.Collection: boolean removeAll(java.util.Collection)>($r17) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r18 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : goto [?= $r24 = new java.util.HashSet] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r24 = new java.util.HashSet
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r24 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r24.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r24.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r25 = $r24
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r25 = $r24 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r26 = new java.util.HashSet
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r26 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r26.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r26.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r6 = $r26
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r6 = $r26 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r7 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r7 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : if $z1 == 0
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r27 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r35 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceResourceProvider()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r37 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r38 = $r37 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r39 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r39 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r40 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r40 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to persist service and component resources: ")
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to persist service and component resources: ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r43, r38)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r43, r38) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : throw $r39
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r35 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : virtualinvoke $r35.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void createServices(java.util.Set)>(r25)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r35 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r37 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : virtualinvoke $r35.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void createServices(java.util.Set)>(r25) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r36 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.ComponentResourceProvider getComponentResourceProvider()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : virtualinvoke $r35.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void createServices(java.util.Set)>(r25) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r37 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r36 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.ComponentResourceProvider getComponentResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : virtualinvoke $r36.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void createComponents(java.util.Set)>(r6)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r36 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.ComponentResourceProvider getComponentResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r37 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : virtualinvoke $r36.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void createComponents(java.util.Set)>(r6) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : goto [?= $r44 = new java.util.HashMap]
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : virtualinvoke $r36.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void createComponents(java.util.Set)>(r6) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r37 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : goto [?= $r44 = new java.util.HashMap] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r44 = new java.util.HashMap
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r44 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r44.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r44.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r45 = $r44
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r45 = $r44 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r46 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_SERVICE_STATE_PROPERTY_ID>
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r46 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_SERVICE_STATE_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r46, "INSTALLED")
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r46, "INSTALLED") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r48 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r48 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, r2)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r50 = new java.util.HashMap
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r50 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r50.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r50.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r51 = $r50
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r51 = $r50 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r52 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_SERVICE_STATE_PROPERTY_ID>
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r52 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_SERVICE_STATE_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, "STARTED")
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, "STARTED") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r54 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r54 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r54, r2)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r54, r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r56 = new org.apache.ambari.server.controller.predicate.EqualsPredicate
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r56 = new org.apache.ambari.server.controller.predicate.EqualsPredicate >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r57 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_CLUSTER_NAME_PROPERTY_ID>
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r57 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: java.lang.String SERVICE_CLUSTER_NAME_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r56.<org.apache.ambari.server.controller.predicate.EqualsPredicate: void <init>(java.lang.String,java.lang.Comparable)>($r57, r2)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r56.<org.apache.ambari.server.controller.predicate.EqualsPredicate: void <init>(java.lang.String,java.lang.Comparable)>($r57, r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r58 = $r56
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r58 = $r56 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r59 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceResourceProvider()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r58 = $r56 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r67 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r68 = $r67 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r69 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r69 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r70 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r70 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r70.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to update state of services during cluster provision: ")
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to update state of services during cluster provision: ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r68)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r68) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke $r69.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r73, r68)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke $r69.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r73, r68) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : return
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r59 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r60 = new org.apache.ambari.server.controller.internal.RequestImpl
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r59 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r67 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r60 = new org.apache.ambari.server.controller.internal.RequestImpl >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r61 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r45)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r60 = new org.apache.ambari.server.controller.internal.RequestImpl >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r67 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r61 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r45) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r60.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>(null, $r61, null, null)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r61 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r45) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r67 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r60.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>(null, $r61, null, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : virtualinvoke $r59.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r60, r58)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r60.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>(null, $r61, null, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r67 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : virtualinvoke $r59.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r60, r58) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r63 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceResourceProvider()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : virtualinvoke $r59.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r60, r58) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r67 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r63 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r64 = new org.apache.ambari.server.controller.internal.RequestImpl
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r63 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.internal.ServiceResourceProvider getServiceResourceProvider()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r67 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r64 = new org.apache.ambari.server.controller.internal.RequestImpl >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r65 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r51)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r64 = new org.apache.ambari.server.controller.internal.RequestImpl >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r67 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r65 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r51) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r64.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>(null, $r65, null, null)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r65 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r51) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r67 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r64.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>(null, $r65, null, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : virtualinvoke $r63.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r64, r58)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r64.<org.apache.ambari.server.controller.internal.RequestImpl: void <init>(java.util.Set,java.util.Set,java.util.Map,java.util.Map)>(null, $r65, null, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r67 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : virtualinvoke $r63.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r64, r58) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : goto [?= return]
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : virtualinvoke $r63.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus updateResources(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>($r64, r58) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r67 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : goto [?= return] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : return
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r27 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r8 = (java.lang.String) $r27
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r8 = (java.lang.String) $r27 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r28 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r28 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r9 = interfaceinvoke $r28.<org.apache.ambari.server.topology.Blueprint: java.lang.String getCredentialStoreEnabled(java.lang.String)>(r8)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r9 = interfaceinvoke $r28.<org.apache.ambari.server.topology.Blueprint: java.lang.String getCredentialStoreEnabled(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r29 = new org.apache.ambari.server.controller.ServiceRequest
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r29 = new org.apache.ambari.server.controller.ServiceRequest >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r29.<org.apache.ambari.server.controller.ServiceRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r8, null, r9)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r29.<org.apache.ambari.server.controller.ServiceRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r8, null, r9) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r25.<java.util.Set: boolean add(java.lang.Object)>($r29)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r25.<java.util.Set: boolean add(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r30 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r30 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r31 = interfaceinvoke $r30.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getComponents(java.lang.String)>(r8)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r31 = interfaceinvoke $r30.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getComponents(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r10 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r10 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : if $z3 == 0
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r32 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r32 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r11 = (java.lang.String) $r32
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r11 = (java.lang.String) $r32 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r33 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r33 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r12 = interfaceinvoke $r33.<org.apache.ambari.server.topology.Blueprint: java.lang.String getRecoveryEnabled(java.lang.String,java.lang.String)>(r8, r11)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : r12 = interfaceinvoke $r33.<org.apache.ambari.server.topology.Blueprint: java.lang.String getRecoveryEnabled(java.lang.String,java.lang.String)>(r8, r11) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r34 = new org.apache.ambari.server.controller.ServiceComponentRequest
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $r34 = new org.apache.ambari.server.controller.ServiceComponentRequest >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r34.<org.apache.ambari.server.controller.ServiceComponentRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r8, r11, null, r12)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : specialinvoke $r34.<org.apache.ambari.server.controller.ServiceComponentRequest: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r8, r11, null, r12) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r34)
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createAmbariServiceAndComponentResources : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
