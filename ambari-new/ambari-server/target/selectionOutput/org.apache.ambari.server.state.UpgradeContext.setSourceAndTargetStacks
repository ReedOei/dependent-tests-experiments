org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r1 = null >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r2 = null
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r2 = null >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r4 = <org.apache.ambari.server.state.UpgradeContext$1: int[] $SwitchMap$org$apache$ambari$server$state$stack$upgrade$Direction>
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r4 = <org.apache.ambari.server.state.UpgradeContext$1: int[] $SwitchMap$org$apache$ambari$server$state$stack$upgrade$Direction> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r5 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction m_direction>
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r5 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction m_direction> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $i0 = virtualinvoke $r5.<org.apache.ambari.server.state.stack.upgrade.Direction: int ordinal()>()
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $i0 = virtualinvoke $r5.<org.apache.ambari.server.state.stack.upgrade.Direction: int ordinal()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $i1 = $r4[$i0]
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $i1 = $r4[$i0] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : lookupswitch($i1) {     case 1:
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : lookupswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r6 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.Cluster m_cluster>
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : lookupswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r10 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.Cluster m_cluster>
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : lookupswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_originalStackId> = r1
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_originalStackId> = r1 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r12 = <org.apache.ambari.server.state.UpgradeContext$1: int[] $SwitchMap$org$apache$ambari$server$state$stack$upgrade$UpgradeType>
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r12 = <org.apache.ambari.server.state.UpgradeContext$1: int[] $SwitchMap$org$apache$ambari$server$state$stack$upgrade$UpgradeType> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r13 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.UpgradeType m_type>
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r13 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.UpgradeType m_type> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $i2 = virtualinvoke $r13.<org.apache.ambari.server.state.stack.upgrade.UpgradeType: int ordinal()>()
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $i2 = virtualinvoke $r13.<org.apache.ambari.server.state.stack.upgrade.UpgradeType: int ordinal()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $i3 = $r12[$i2]
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $i3 = $r12[$i2] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : tableswitch($i3) {     case 1:
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : tableswitch($i3) {     case 1: >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_effectiveStackId> = r2
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : tableswitch($i3) {     case 1: >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r15 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction m_direction>
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : tableswitch($i3) {     case 1: >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_effectiveStackId> = r2
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_effectiveStackId> = r2 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_targetStackId> = r2
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_targetStackId> = r2 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : return
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r15 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction m_direction> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $z0 = virtualinvoke $r15.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isUpgrade()>()
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $z0 = virtualinvoke $r15.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isUpgrade()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : if $z0 == 0
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r16 = r1
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r16 = r2
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r16 = r2 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_effectiveStackId> = $r16
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_effectiveStackId> = $r16 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : goto [?= r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_targetStackId> = r2]
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : goto [?= r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_targetStackId> = r2] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_targetStackId> = r2
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r16 = r1 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : goto [?= r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_effectiveStackId> = $r16]
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : goto [?= r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_effectiveStackId> = $r16] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_effectiveStackId> = $r16
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_effectiveStackId> = r2 >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : goto [?= r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_targetStackId> = r2]
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : goto [?= r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_targetStackId> = r2] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_targetStackId> = r2
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r10 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.Cluster m_cluster> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r1 = interfaceinvoke $r10.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r1 = interfaceinvoke $r10.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r11 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.Cluster m_cluster>
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r11 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.Cluster m_cluster> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r2 = interfaceinvoke $r11.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r2 = interfaceinvoke $r11.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_originalStackId> = r1
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r6 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.Cluster m_cluster> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r1 = interfaceinvoke $r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r1 = interfaceinvoke $r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r7 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO m_repoVersionDAO>
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r7 = r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.orm.dao.RepositoryVersionDAO m_repoVersionDAO> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r8 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r8 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r9 = r0.<org.apache.ambari.server.state.UpgradeContext: java.lang.String m_version>
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : $r9 = r0.<org.apache.ambari.server.state.UpgradeContext: java.lang.String m_version> >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r3 = virtualinvoke $r7.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackNameAndVersion(java.lang.String,java.lang.String)>($r8, $r9)
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r3 = virtualinvoke $r7.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackNameAndVersion(java.lang.String,java.lang.String)>($r8, $r9) >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r2 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r2 = virtualinvoke r3.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : goto [?= r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_originalStackId> = r1]
org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : goto [?= r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_originalStackId> = r1] >>>>>>>> org.apache.ambari.server.state.UpgradeContext.setSourceAndTargetStacks : r0.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.StackId m_originalStackId> = r1
