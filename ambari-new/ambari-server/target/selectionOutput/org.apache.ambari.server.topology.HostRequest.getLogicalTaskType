org.apache.ambari.server.topology.HostRequest.getLogicalTaskType : $r1 = <org.apache.ambari.server.topology.TopologyTask$Type: org.apache.ambari.server.topology.TopologyTask$Type INSTALL> >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTaskType : if r0 != $r1
org.apache.ambari.server.topology.HostRequest.getLogicalTaskType : if r0 != $r1 >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTaskType : $r2 = <org.apache.ambari.server.topology.AmbariContext$TaskType: org.apache.ambari.server.topology.AmbariContext$TaskType INSTALL>
org.apache.ambari.server.topology.HostRequest.getLogicalTaskType : if r0 != $r1 >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTaskType : $r2 = <org.apache.ambari.server.topology.AmbariContext$TaskType: org.apache.ambari.server.topology.AmbariContext$TaskType START>
org.apache.ambari.server.topology.HostRequest.getLogicalTaskType : $r2 = <org.apache.ambari.server.topology.AmbariContext$TaskType: org.apache.ambari.server.topology.AmbariContext$TaskType START> >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTaskType : return $r2
org.apache.ambari.server.topology.HostRequest.getLogicalTaskType : $r2 = <org.apache.ambari.server.topology.AmbariContext$TaskType: org.apache.ambari.server.topology.AmbariContext$TaskType INSTALL> >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTaskType : goto [?= return $r2]
org.apache.ambari.server.topology.HostRequest.getLogicalTaskType : goto [?= return $r2] >>>>>>>> org.apache.ambari.server.topology.HostRequest.getLogicalTaskType : return $r2
