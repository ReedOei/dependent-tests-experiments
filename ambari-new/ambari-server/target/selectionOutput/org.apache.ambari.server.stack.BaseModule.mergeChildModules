org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r6 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : specialinvoke $r6.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r7 = $r6
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r7 = $r6 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r12 = new java.util.HashSet
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r12 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : specialinvoke $r12.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : specialinvoke $r12.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r8 = $r12
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r8 = $r12 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r13 = interfaceinvoke r4.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r13 = interfaceinvoke r4.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r9 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r9 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z0 == 0
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r14 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r16 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r16 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z5 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z5 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z5 == 0
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : return r8
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r19 = (org.apache.ambari.server.stack.StackDefinitionModule) $r18
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r19 = (org.apache.ambari.server.stack.StackDefinitionModule) $r18 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r20 = interfaceinvoke r19.<org.apache.ambari.server.stack.StackDefinitionModule: java.lang.String getId()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r20 = interfaceinvoke r19.<org.apache.ambari.server.stack.StackDefinitionModule: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z6 = interfaceinvoke r7.<java.util.Set: boolean contains(java.lang.Object)>(r20)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z6 = interfaceinvoke r7.<java.util.Set: boolean contains(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z6 != 0
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z6 != 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r19)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z6 != 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : goto [?= $z5 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.BaseModule.mergeChildModules : goto [?= $z5 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z5 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : goto [?= $z5 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r14 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r10 = (org.apache.ambari.server.stack.StackDefinitionModule) $r14
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r10 = (org.apache.ambari.server.stack.StackDefinitionModule) $r14 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : r11 = interfaceinvoke r10.<org.apache.ambari.server.stack.StackDefinitionModule: java.lang.String getId()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : r11 = interfaceinvoke r10.<org.apache.ambari.server.stack.StackDefinitionModule: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r11)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke r7.<java.util.Set: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z2 = interfaceinvoke r10.<org.apache.ambari.server.stack.StackDefinitionModule: boolean isDeleted()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z2 = interfaceinvoke r10.<org.apache.ambari.server.stack.StackDefinitionModule: boolean isDeleted()>() >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z2 != 0
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z2 != 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z3 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r11)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z2 != 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.BaseModule.mergeChildModules : goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $z3 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z3 == 0
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r15 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : $r15 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke r10.<org.apache.ambari.server.stack.StackDefinitionModule: void resolve(java.lang.Object,java.util.Map,java.util.Map,java.util.Map)>($r15, r1, r2, r3)
org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke r10.<org.apache.ambari.server.stack.StackDefinitionModule: void resolve(java.lang.Object,java.util.Map,java.util.Map,java.util.Map)>($r15, r1, r2, r3) >>>>>>>> org.apache.ambari.server.stack.BaseModule.mergeChildModules : interfaceinvoke r8.<java.util.Collection: boolean add(java.lang.Object)>(r10)
