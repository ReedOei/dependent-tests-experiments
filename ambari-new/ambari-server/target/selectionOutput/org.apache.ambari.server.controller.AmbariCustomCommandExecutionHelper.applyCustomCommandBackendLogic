org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : r6 = r4 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : b0 = -1
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : b0 = -1 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $i1 = virtualinvoke r6.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $i1 = virtualinvoke r6.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : lookupswitch($i1) {     case 1815489007:
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : lookupswitch($i1) {     case 1815489007: >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("RESTART")
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : lookupswitch($i1) {     case 1815489007: >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : lookupswitch(b0) {     case 0:
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : lookupswitch(b0) {     case 0: >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2)
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : lookupswitch(b0) {     case 0: >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r17 = <org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r17 = <org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : interfaceinvoke $r17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("No backend operations needed for the custom command: {}", r4)
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : interfaceinvoke $r17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("No backend operations needed for the custom command: {}", r4) >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : return
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : r7 = interfaceinvoke $r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r3)
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : r7 = interfaceinvoke $r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : r8 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r5)
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : r8 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : r9 = interfaceinvoke r8.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : r9 = interfaceinvoke r8.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $z1 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>()
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $z1 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>() >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : if $z1 != 0
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r12 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r16 = <org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r16 = <org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Desired state for client components should not be updated on RESTART. Service/Component {}/{}", r2, r3)
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Desired state for client components should not be updated on RESTART. Service/Component {}/{}", r2, r3) >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : goto [?= return]
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : return
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r12 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : if r9 == $r12
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : if r9 == $r12 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r13 = <org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : if r9 == $r12 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : return
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r13 = <org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r14 = newarray (java.lang.Object)[4]
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r14 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r10 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r10 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r14[0] = $r10
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r14[0] = $r10 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r14[1] = r2
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r14[1] = r2 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r14[2] = r3
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r14[2] = r3 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r14[3] = r9
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r14[3] = r9 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Updating desired state to {} on RESTART for {}/{} because it was {}", $r14)
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Updating desired state to {} on RESTART for {}/{} because it was {}", $r14) >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r15 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $r15 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : interfaceinvoke r8.<org.apache.ambari.server.state.ServiceComponentHost: void setDesiredState(org.apache.ambari.server.state.State)>($r15)
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : interfaceinvoke r8.<org.apache.ambari.server.state.ServiceComponentHost: void setDesiredState(org.apache.ambari.server.state.State)>($r15) >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : goto [?= return]
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : return
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("RESTART") >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : if $z0 == 0
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : b0 = 0
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : lookupswitch(b0) {     case 0:
org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : b0 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper.applyCustomCommandBackendLogic : lookupswitch(b0) {     case 0:
