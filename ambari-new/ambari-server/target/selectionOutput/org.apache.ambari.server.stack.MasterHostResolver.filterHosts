org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r27 = $r26 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r28 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r28 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : interfaceinvoke $r28.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Could not determine host components to upgrade. Defaulting to saved hosts.", r27)
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : interfaceinvoke $r28.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Could not determine host components to upgrade. Defaulting to saved hosts.", r27) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : return r1
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r13 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster m_cluster> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r4 = interfaceinvoke $r13.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2)
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r13 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster m_cluster> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r4 = interfaceinvoke $r13.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r3)
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r4 = interfaceinvoke $r13.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r14 = new java.util.ArrayList
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r14 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : specialinvoke $r14.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r14 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : specialinvoke $r14.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r6 = $r14
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : specialinvoke $r14.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r6 = $r14 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r15 = new java.util.LinkedHashSet
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r6 = $r14 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r15 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : specialinvoke $r15.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r15 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : specialinvoke $r15.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r7 = $r15
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : specialinvoke $r15.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r7 = $r15 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r16 = r1.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r7 = $r15 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r16 = r1.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r8 = virtualinvoke $r16.<java.util.LinkedHashSet: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r16 = r1.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r8 = virtualinvoke $r16.<java.util.LinkedHashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r8 = virtualinvoke $r16.<java.util.LinkedHashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if $z0 == 0
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r17 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r1.<org.apache.ambari.server.stack.HostsType: java.util.List unhealthy> = r6
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r1.<org.apache.ambari.server.stack.HostsType: java.util.List unhealthy> = r6 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r1.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> = r7
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r1.<org.apache.ambari.server.stack.HostsType: java.util.List unhealthy> = r6 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r1.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> = r7 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : return r1
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r1.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> = r7 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r17 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r9 = (java.lang.String) $r17
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r17 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r9 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r10 = interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r9)
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r9 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r10 = interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r11 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.Host getHost()>()
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r10 = interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r11 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.Host getHost()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $l0 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: long getClusterId()>()
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r11 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.Host getHost()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $l0 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: long getClusterId()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r12 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0)
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $l0 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: long getClusterId()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r12 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r18 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : r12 = interfaceinvoke r11.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r18 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if r12 == $r18
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r18 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if r12 == $r18 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if r12 == $r18 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r19 = r0.<org.apache.ambari.server.stack.MasterHostResolver: java.lang.String m_version>
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if r12 == $r18 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r19 = r0.<org.apache.ambari.server.stack.MasterHostResolver: java.lang.String m_version> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if null == $r19
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r19 = r0.<org.apache.ambari.server.stack.MasterHostResolver: java.lang.String m_version> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if null == $r19 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r20 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getVersion()>()
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if null == $r19 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : virtualinvoke r7.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if null == $r19 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : virtualinvoke r7.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : virtualinvoke r7.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r20 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if null == $r20
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r20 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if null == $r20 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r21 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getVersion()>()
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if null == $r20 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : virtualinvoke r7.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if null == $r20 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r21 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r22 = r0.<org.apache.ambari.server.stack.MasterHostResolver: java.lang.String m_version>
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r21 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r22 = r0.<org.apache.ambari.server.stack.MasterHostResolver: java.lang.String m_version> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22)
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r22 = r0.<org.apache.ambari.server.stack.MasterHostResolver: java.lang.String m_version> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if $z2 == 0
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $z2 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r23 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.UpgradeState getUpgradeState()>()
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : virtualinvoke r7.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r23 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.UpgradeState getUpgradeState()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r24 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState FAILED>
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r23 = interfaceinvoke r10.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.UpgradeState getUpgradeState()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r24 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState FAILED> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if $r23 != $r24
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r24 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState FAILED> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if $r23 != $r24 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : virtualinvoke r7.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if $r23 != $r24 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : if $r23 != $r24 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : goto [?= $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.MasterHostResolver.filterHosts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.filterHosts : $r26 := @caughtexception
