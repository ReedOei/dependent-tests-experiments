org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r4 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r4.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r4.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r5 = $r4
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r5 = $r4 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r6 = null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r6 = null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r27 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r27 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r27.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r27.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r7 = $r27
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r7 = $r27 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r28 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r28 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r28.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r28.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r8 = $r28
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r8 = $r28 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r9 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r9 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z2 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r29 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : return r5
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r29 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r10 = (org.apache.ambari.server.controller.spi.Resource) $r29
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r10 = (org.apache.ambari.server.controller.spi.Resource) $r29 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r30 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String clusterNamePropertyId>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r30 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String clusterNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r31 = interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r30)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r31 = interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r11 = (java.lang.String) $r31
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r11 = (java.lang.String) $r31 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r11)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z3 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z4 = interfaceinvoke r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r11)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z4 = interfaceinvoke r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z4 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r32 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r34 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r34 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r12 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r12 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z0 = interfaceinvoke $r34.<org.apache.ambari.server.controller.metrics.MetricHostProvider: boolean isCollectorComponentLive(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r11, $r12)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z0 = interfaceinvoke $r34.<org.apache.ambari.server.controller.metrics.MetricHostProvider: boolean isCollectorComponentLive(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r11, $r12) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r35 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r35)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r35) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z0 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r37 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCounter>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r40 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCounter>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r40 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCounter> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r40.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r40.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z6 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r11)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z6 = interfaceinvoke r7.<java.util.Map: boolean containsKey(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z6 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r41 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r43 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r43 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r44 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r44 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z1 = interfaceinvoke $r43.<org.apache.ambari.server.controller.metrics.MetricHostProvider: boolean isCollectorComponentLive(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r11, $r44)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z1 = interfaceinvoke $r43.<org.apache.ambari.server.controller.metrics.MetricHostProvider: boolean isCollectorComponentLive(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r11, $r44) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r45)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r45) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z1 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z1 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r47 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCompCounter>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z1 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r50 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCompCounter>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r50 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCompCounter> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r50.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r50.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r51 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r51 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r13 = (java.util.Map) $r51
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r13 = (java.util.Map) $r51 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r13 != null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r13 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r52 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r13 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r54 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r54 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r55 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r55 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r14 = interfaceinvoke $r54.<org.apache.ambari.server.controller.metrics.MetricHostProvider: java.lang.String getCollectorHostName(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r11, $r55)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r14 = interfaceinvoke $r54.<org.apache.ambari.server.controller.metrics.MetricHostProvider: java.lang.String getCollectorHostName(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r11, $r55) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r6 != null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r6 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r56 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r6 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r15 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r15 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z8 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r58 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r58 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r16 = (java.lang.String) $r58
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r16 = (java.lang.String) $r58 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r59 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r59 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r59.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r59.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r17 = $r59
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r17 = $r59 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r18 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getOverridenComponentName(org.apache.ambari.server.controller.spi.Resource)>(r10)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r18 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getOverridenComponentName(org.apache.ambari.server.controller.spi.Resource)>(r10) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r60 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.Map getComponentMetrics()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r60 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.Map getComponentMetrics()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r61 = interfaceinvoke $r60.<java.util.Map: java.lang.Object get(java.lang.Object)>(r18)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r61 = interfaceinvoke $r60.<java.util.Map: java.lang.Object get(java.lang.Object)>(r18) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r19 = (java.util.Map) $r61
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r19 = (java.util.Map) $r61 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r19 == null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r19 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z9 = interfaceinvoke r19.<java.util.Map: boolean containsKey(java.lang.Object)>(r16)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r19 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: void updatePropertyInfoMap(java.lang.String,java.lang.String,java.util.Map)>(r18, r16, r17)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: void updatePropertyInfoMap(java.lang.String,java.lang.String,java.util.Map)>(r18, r16, r17) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r62 = interfaceinvoke r17.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r62 = interfaceinvoke r17.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r20 = interfaceinvoke $r62.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r20 = interfaceinvoke $r62.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z10 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z10 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z10 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r63 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z10 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z8 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r63 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r21 = (java.util.Map$Entry) $r63
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r21 = (java.util.Map$Entry) $r63 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r64 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r64 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r22 = (java.lang.String) $r64
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r22 = (java.lang.String) $r64 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r65 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r65 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r23 = (org.apache.ambari.server.controller.internal.PropertyInfo) $r65
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r23 = (org.apache.ambari.server.controller.internal.PropertyInfo) $r65 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r24 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Request: org.apache.ambari.server.controller.spi.TemporalInfo getTemporalInfo(java.lang.String)>(r16)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r24 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Request: org.apache.ambari.server.controller.spi.TemporalInfo getTemporalInfo(java.lang.String)>(r16) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r24 != null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r24 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z11 = virtualinvoke r23.<org.apache.ambari.server.controller.internal.PropertyInfo: boolean isPointInTime()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r24 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r24 == null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r24 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z12 = virtualinvoke r23.<org.apache.ambari.server.controller.internal.PropertyInfo: boolean isTemporal()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r24 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z10 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z10 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z10 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z12 = virtualinvoke r23.<org.apache.ambari.server.controller.internal.PropertyInfo: boolean isTemporal()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z12 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r66 = interfaceinvoke r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z10 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r66 = interfaceinvoke r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r25 = (org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest) $r66
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r25 = (org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest) $r66 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r25 != null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r25 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r67 = new org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r25 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r77 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r10)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r77 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r10) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r25.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void putResource(java.lang.String,org.apache.ambari.server.controller.spi.Resource)>($r77, r10)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r25.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void putResource(java.lang.String,org.apache.ambari.server.controller.spi.Resource)>($r77, r10) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r78 = virtualinvoke r23.<org.apache.ambari.server.controller.internal.PropertyInfo: java.lang.String getPropertyId()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r78 = virtualinvoke r23.<org.apache.ambari.server.controller.internal.PropertyInfo: java.lang.String getPropertyId()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r79 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r10)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r79 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r10) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r80 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String preprocessPropertyId(java.lang.String,java.lang.String)>($r78, $r79)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r80 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String preprocessPropertyId(java.lang.String,java.lang.String)>($r78, $r79) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r25.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void putPropertyId(java.lang.String,java.lang.String)>($r80, r22)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r25.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void putPropertyId(java.lang.String,java.lang.String)>($r80, r22) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r81 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r10)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r81 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r10) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r82 = virtualinvoke r23.<org.apache.ambari.server.controller.internal.PropertyInfo: java.lang.String getPropertyId()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r82 = virtualinvoke r23.<org.apache.ambari.server.controller.internal.PropertyInfo: java.lang.String getPropertyId()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r83 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r10)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r83 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r10) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r84 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String preprocessPropertyId(java.lang.String,java.lang.String)>($r82, $r83)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r84 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String preprocessPropertyId(java.lang.String,java.lang.String)>($r82, $r83) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r25.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void linkResourceToMetric(java.lang.String,java.lang.String)>($r81, $r84)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r25.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void linkResourceToMetric(java.lang.String,java.lang.String)>($r81, $r84) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z14 = virtualinvoke r23.<org.apache.ambari.server.controller.internal.PropertyInfo: boolean isAmsHostMetric()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z14 = virtualinvoke r23.<org.apache.ambari.server.controller.internal.PropertyInfo: boolean isAmsHostMetric()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z14 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r85 = virtualinvoke r23.<org.apache.ambari.server.controller.internal.PropertyInfo: java.lang.String getPropertyId()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z10 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r85 = virtualinvoke r23.<org.apache.ambari.server.controller.internal.PropertyInfo: java.lang.String getPropertyId()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r25.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void putHosComponentHostMetric(java.lang.String)>($r85)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r25.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void putHosComponentHostMetric(java.lang.String)>($r85) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z10 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r67 = new org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r6 == null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r6 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r6 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i2 = 6188
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i2 = 6188 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r71 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r71 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z13 = virtualinvoke $r71.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean isHttpsEnabled()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z13 = virtualinvoke $r71.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean isHttpsEnabled()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r72 = staticinvoke <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.http.client.utils.URIBuilder getAMSUriBuilder(java.lang.String,int,boolean)>(r14, $i2, $z13)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r72 = staticinvoke <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.http.client.utils.URIBuilder getAMSUriBuilder(java.lang.String,int,boolean)>(r14, $i2, $z13) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r73 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String clusterNamePropertyId>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r73 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String clusterNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r74 = interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r73)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r74 = interfaceinvoke r10.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r73) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r75 = (java.lang.String) $r74
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r75 = (java.lang.String) $r74 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r67.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void <init>(org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider,org.apache.ambari.server.controller.spi.TemporalInfo,org.apache.http.client.utils.URIBuilder,java.lang.String,org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$1)>(r0, r24, $r72, $r75, null)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r67.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void <init>(org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider,org.apache.ambari.server.controller.spi.TemporalInfo,org.apache.http.client.utils.URIBuilder,java.lang.String,org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$1)>(r0, r24, $r72, $r75, null) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r25 = $r67
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r25 = $r67 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, r25)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, r25) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r77 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r10)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $r71 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $r71 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r71 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z11 = virtualinvoke r23.<org.apache.ambari.server.controller.internal.PropertyInfo: boolean isPointInTime()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z11 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r24 == null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r66 = interfaceinvoke r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z9 = interfaceinvoke r19.<java.util.Map: boolean containsKey(java.lang.Object)>(r16) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z9 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z9 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: void updateComponentMetricMap(java.util.Map,java.lang.String)>(r19, r16)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z9 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: void updatePropertyInfoMap(java.lang.String,java.lang.String,java.util.Map)>(r18, r16, r17)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: void updateComponentMetricMap(java.util.Map,java.lang.String)>(r19, r16) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: void updatePropertyInfoMap(java.lang.String,java.lang.String,java.util.Map)>(r18, r16, r17)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r56 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r57 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r57 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r6 = interfaceinvoke $r56.<org.apache.ambari.server.controller.metrics.MetricHostProvider: java.lang.String getCollectorPort(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r11, $r57)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r6 = interfaceinvoke $r56.<org.apache.ambari.server.controller.metrics.MetricHostProvider: java.lang.String getCollectorPort(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r11, $r57) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r15 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r52 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r52.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r52.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r13 = $r52
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r13 = $r52 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r13)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r13) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r54 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r47 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCompCounter> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i1 = virtualinvoke $r47.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i1 = virtualinvoke $r47.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $i1 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $i1 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r48 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $i1 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r49 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCompCounter>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r49 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCompCounter> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r49.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(1000, 0)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r49.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(1000, 0) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r48 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r48.<org.slf4j.Logger: void info(java.lang.String)>("METRICS_COLLECTOR is not live. Skip populating resources with metrics., next message will be logged after 1000 attempts.")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r48.<org.slf4j.Logger: void info(java.lang.String)>("METRICS_COLLECTOR is not live. Skip populating resources with metrics., next message will be logged after 1000 attempts.") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r41 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r42 = (java.lang.Boolean) $r41
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r42 = (java.lang.Boolean) $r41 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z1 = virtualinvoke $r42.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z1 = virtualinvoke $r42.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= (branch)]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z1 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r37 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCounter> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i0 = virtualinvoke $r37.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i0 = virtualinvoke $r37.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $i0 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r38 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r39 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCounter>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r39 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCounter> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r39.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(1000, 0)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r39.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(1000, 0) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r38 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r38.<org.slf4j.Logger: void info(java.lang.String)>("METRICS_COLLECTOR host is not live. Skip populating resources with metrics, next message will be logged after 1000 attempts.")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r38.<org.slf4j.Logger: void info(java.lang.String)>("METRICS_COLLECTOR host is not live. Skip populating resources with metrics, next message will be logged after 1000 attempts.") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r32 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r33 = (java.lang.Boolean) $r32
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r33 = (java.lang.Boolean) $r32 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z0 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z0 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= (branch)]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z0 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
