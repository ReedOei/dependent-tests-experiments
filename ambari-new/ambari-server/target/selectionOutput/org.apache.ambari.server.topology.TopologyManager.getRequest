org.apache.ambari.server.topology.TopologyManager.getRequest : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void ensureInitialized()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequest : $r1 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests>
org.apache.ambari.server.topology.TopologyManager.getRequest : $r1 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequest : $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.topology.TopologyManager.getRequest : $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequest : $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2)
org.apache.ambari.server.topology.TopologyManager.getRequest : $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequest : $r4 = (org.apache.ambari.server.topology.LogicalRequest) $r3
org.apache.ambari.server.topology.TopologyManager.getRequest : $r4 = (org.apache.ambari.server.topology.LogicalRequest) $r3 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.getRequest : return $r4
