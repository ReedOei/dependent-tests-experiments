org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $r2 = <org.apache.ambari.server.upgrade.SchemaUpgradeHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Executing DDL upgrade...")
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("Executing DDL upgrade...") >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : if r1 == null
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : if r1 == null >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : if r1 == null >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : return
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : if $z0 != 0
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : return
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : if $z1 == 0
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : return
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : r4 = (org.apache.ambari.server.upgrade.UpgradeCatalog) $r6
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : r4 = (org.apache.ambari.server.upgrade.UpgradeCatalog) $r6 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : interfaceinvoke r4.<org.apache.ambari.server.upgrade.UpgradeCatalog: void upgradeSchema()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : r4 = (org.apache.ambari.server.upgrade.UpgradeCatalog) $r6 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $r7 := @caughtexception
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : r5 = $r7 >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $r8 = <org.apache.ambari.server.upgrade.SchemaUpgradeHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $r8 = <org.apache.ambari.server.upgrade.SchemaUpgradeHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : interfaceinvoke $r8.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Upgrade failed. ", r5)
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : interfaceinvoke $r8.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Upgrade failed. ", r5) >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $r9 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $r9 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $r10 = virtualinvoke r5.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $r10 = virtualinvoke r5.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : specialinvoke $r9.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r5)
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : specialinvoke $r9.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r10, r5) >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : throw $r9
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : interfaceinvoke r4.<org.apache.ambari.server.upgrade.UpgradeCatalog: void upgradeSchema()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : goto [?= (branch)]
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : interfaceinvoke r4.<org.apache.ambari.server.upgrade.UpgradeCatalog: void upgradeSchema()>() >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $r7 := @caughtexception
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.SchemaUpgradeHelper.executeUpgrade : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
