org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z0 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r14 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r15 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r15 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r15.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r15.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r2 = $r15
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r2 = $r15 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r16 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r3 = interfaceinvoke $r16.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r3 = interfaceinvoke $r16.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r17 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r17 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r4 = interfaceinvoke $r17.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.configgroup.ConfigGroupFactory getConfigGroupFactory()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r4 = interfaceinvoke $r17.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.configgroup.ConfigGroupFactory getConfigGroupFactory()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r5 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z1 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : return r2
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r6 = (org.apache.ambari.server.controller.ConfigGroupRequest) $r18
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r6 = (org.apache.ambari.server.controller.ConfigGroupRequest) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r6 = (org.apache.ambari.server.controller.ConfigGroupRequest) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r20 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r8 = $r20 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r21 = new org.apache.ambari.server.ParentObjectNotFoundException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r21 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r21.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Attempted to add a config group to a cluster which doesn\'t exist", r8)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r21.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String,org.apache.ambari.server.ObjectNotFoundException)>("Attempted to add a config group to a cluster which doesn\'t exist", r8) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : throw $r21
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r19)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r19 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r20 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void validateRequest(org.apache.ambari.server.controller.ConfigGroupRequest)>(r6)]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r7 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r20 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void validateRequest(org.apache.ambari.server.controller.ConfigGroupRequest)>(r6)] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void validateRequest(org.apache.ambari.server.controller.ConfigGroupRequest)>(r6)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void validateRequest(org.apache.ambari.server.controller.ConfigGroupRequest)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r22 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r22 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigGroups()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r22 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r22 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r23 = interfaceinvoke r22.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r22 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r41 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r41 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r41.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r41.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r42 = $r41
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r42 = $r41 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r43 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r43 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $r43 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $r43 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r44 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $r43 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyHostList(org.apache.ambari.server.state.Cluster,java.util.Map,org.apache.ambari.server.controller.ConfigGroupRequest)>(r7, r42, r6)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyHostList(org.apache.ambari.server.state.Cluster,java.util.Map,org.apache.ambari.server.controller.ConfigGroupRequest)>(r7, r42, r6) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r52 = null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r52 = null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r53 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r53 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $r53 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $r53 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r54 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $r53 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r52)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r52) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z8 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r59 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r63 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r63 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r64 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r64 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r65 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r65 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z10 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r63, $r64, $r65)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z10 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r63, $r64, $r65) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z10 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r66 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r67 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger configLogger>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r67 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger configLogger> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r68 = newarray (java.lang.Object)[4]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r68 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r69 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r69 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r70 = interfaceinvoke $r69.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r70 = interfaceinvoke $r69.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r68[0] = $r70
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r68[0] = $r70 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r71 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r71 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r68[1] = $r71
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r68[1] = $r71 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r72 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r72 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r68[2] = $r72
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r68[2] = $r72 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r73 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r73 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r68[3] = $r73
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r68[3] = $r73 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r67.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("User {} is creating new configuration group {} for tag {} in cluster {}", $r68)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r67.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("User {} is creating new configuration group {} for tag {} in cluster {}", $r68) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r74 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r74 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r75 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r75 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyConfigs(java.util.Map,java.lang.String)>($r74, $r75)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyConfigs(java.util.Map,java.lang.String)>($r74, $r75) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r76 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r76 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r77 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r77 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r78 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getDescription()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r78 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getDescription()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r79 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r79 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r80 = interfaceinvoke r4.<org.apache.ambari.server.state.configgroup.ConfigGroupFactory: org.apache.ambari.server.state.configgroup.ConfigGroup createNew(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r7, $r76, $r77, $r78, $r79, r42)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r80 = interfaceinvoke r4.<org.apache.ambari.server.state.configgroup.ConfigGroupFactory: org.apache.ambari.server.state.configgroup.ConfigGroup createNew(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r7, $r76, $r77, $r78, $r79, r42) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setServiceName(java.lang.String)>(r52)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: void setServiceName(java.lang.String)>(r52) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addConfigGroup(org.apache.ambari.server.state.configgroup.ConfigGroup)>(r80)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: void addConfigGroup(org.apache.ambari.server.state.configgroup.ConfigGroup)>(r80) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r52 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r52 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r81 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r52 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r85 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r85 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r86 = interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r86 = interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r85.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Could not determine service name for config group {}, service config version not created", $r86)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r85.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Could not determine service name for config group {}, service config version not created", $r86) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r87 = new org.apache.ambari.server.controller.ConfigGroupResponse
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r87 = new org.apache.ambari.server.controller.ConfigGroupResponse >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r88 = interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.Long getId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r88 = interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r89 = interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r89 = interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r90 = interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r90 = interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r91 = interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r91 = interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r92 = interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getDescription()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r92 = interfaceinvoke r80.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getDescription()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r87.<org.apache.ambari.server.controller.ConfigGroupResponse: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set)>($r88, $r89, $r90, $r91, $r92, null, null)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r87.<org.apache.ambari.server.controller.ConfigGroupResponse: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set)>($r88, $r89, $r90, $r91, $r92, null, null) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r93 = $r87
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r93 = $r87 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r93)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r93) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r81 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r82 = interfaceinvoke $r81.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r82 = interfaceinvoke $r81.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r83 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getServiceConfigVersionNote()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r83 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getServiceConfigVersionNote()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ServiceConfigVersionResponse createServiceConfigVersion(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.configgroup.ConfigGroup)>(r52, $r82, $r83, r80)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ServiceConfigVersionResponse createServiceConfigVersion(java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.configgroup.ConfigGroup)>(r52, $r82, $r83, r80) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $r87 = new org.apache.ambari.server.controller.ConfigGroupResponse]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $r87 = new org.apache.ambari.server.controller.ConfigGroupResponse] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r87 = new org.apache.ambari.server.controller.ConfigGroupResponse
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r66 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r66.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to create config groups")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r66.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to create config groups") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : throw $r66
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r59 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r60 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r60 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r61 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r61 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_MANAGE_CONFIG_GROUPS> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z9 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r59, $r60, $r61)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z9 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r59, $r60, $r61) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z9 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z9 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r62 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z9 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r67 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger configLogger>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r62 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r62.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to create config groups")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r62.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to create config groups") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : throw $r62
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r54 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z7 = interfaceinvoke $r54.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z7 = interfaceinvoke $r54.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z7 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r55 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r52)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r57 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r58 = $r57 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r52)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r55 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r56 = interfaceinvoke $r55.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r55 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Map getConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r57 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r56 = interfaceinvoke $r55.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r52 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceForConfigTypes(java.util.Collection)>($r56)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r56 = interfaceinvoke $r55.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r57 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r52 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceForConfigTypes(java.util.Collection)>($r56) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r52)]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r52 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceForConfigTypes(java.util.Collection)>($r56) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r57 := @caughtexception
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r52)] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z8 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r52)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r44 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z5 = interfaceinvoke $r44.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z5 = interfaceinvoke $r44.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z5 != 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r45 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyHostList(org.apache.ambari.server.state.Cluster,java.util.Map,org.apache.ambari.server.controller.ConfigGroupRequest)>(r7, r42, r6)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r45 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r46 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r46 = interfaceinvoke $r45.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z6 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r47 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke r0.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: void verifyHostList(org.apache.ambari.server.state.Cluster,java.util.Map,org.apache.ambari.server.controller.ConfigGroupRequest)>(r7, r42, r6)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r47 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r11 = (java.lang.String) $r47
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r11 = (java.lang.String) $r47 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r12 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r11)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r12 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r48 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.orm.dao.HostDAO hostDAO>
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r48 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r13 = virtualinvoke $r48.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r11)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r13 = virtualinvoke $r48.<org.apache.ambari.server.orm.dao.HostDAO: org.apache.ambari.server.orm.entities.HostEntity findByName(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r12 == null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r12 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r13 != null
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r12 == null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r49 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r49 = new org.apache.ambari.server.HostNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r49.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>(r11)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r49.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : throw $r49
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r13 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r49 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if r13 != null >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r50 = virtualinvoke r13.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r50 = virtualinvoke r13.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r50, r12)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r50, r12) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z6 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r23 = interfaceinvoke r22.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r9 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r9 = interfaceinvoke $r23.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z2 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r24 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r41 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r24 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r10 = (org.apache.ambari.server.state.configgroup.ConfigGroup) $r24
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : r10 = (org.apache.ambari.server.state.configgroup.ConfigGroup) $r24 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r25 = interfaceinvoke r10.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r25 = interfaceinvoke r10.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r26 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r26 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z3 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r26)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z3 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z3 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r27 = interfaceinvoke r10.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r27 = interfaceinvoke r10.<org.apache.ambari.server.state.configgroup.ConfigGroup: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r28 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r28 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z4 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $z4 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z4 == 0
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r29 = new org.apache.ambari.server.DuplicateResourceException
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r29 = new org.apache.ambari.server.DuplicateResourceException >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r30 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r30 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config group already exists with the same name and tag, clusterName = ")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Config group already exists with the same name and tag, clusterName = ") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r32 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r32 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", groupName = ")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", groupName = ") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r35 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r35 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getGroupName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tag = ")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", tag = ") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r38 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r38 = virtualinvoke r6.<org.apache.ambari.server.controller.ConfigGroupRequest: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r29.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>($r40)
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : specialinvoke $r29.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : throw $r29
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : $r14 = <org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set")
org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : interfaceinvoke $r14.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set") >>>>>>>> org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider.createConfigGroups : return null
