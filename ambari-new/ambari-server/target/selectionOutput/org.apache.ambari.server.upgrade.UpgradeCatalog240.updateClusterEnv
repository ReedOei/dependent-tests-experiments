org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : r2 = $r1
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : r2 = $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("alerts_repeat_tolerance", "1")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("alerts_repeat_tolerance", "1") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("one_dir_per_partition", "false")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("one_dir_per_partition", "false") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : $r11 = interfaceinvoke $r10.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : $r11 = interfaceinvoke $r10.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : r4 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : r4 = interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : r5 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>(r4)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : r5 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>(r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : $r12 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : $r12 = interfaceinvoke r5.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : r6 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : r6 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : if $z0 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : return
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : $r13 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : r7 = (org.apache.ambari.server.state.Cluster) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : r7 = (org.apache.ambari.server.state.Cluster) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r7, "cluster-env", r2, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog240: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r7, "cluster-env", r2, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog240.updateClusterEnv : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
