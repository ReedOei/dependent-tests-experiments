org.apache.ambari.server.topology.LogicalRequest.offer : $r7 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : r2 = $r7
org.apache.ambari.server.topology.LogicalRequest.offer : r2 = $r7 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : entermonitor $r7
org.apache.ambari.server.topology.LogicalRequest.offer : entermonitor $r7 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r8 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : entermonitor $r7 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : r5 = $r27 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r2
org.apache.ambari.server.topology.LogicalRequest.offer : r5 = $r27 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r2 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : throw r5
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r2 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r8 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r9 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r8 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r9 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: attempting to match a request to a request for a reserved host to hostname = {}", $r9)
org.apache.ambari.server.topology.LogicalRequest.offer : $r9 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: attempting to match a request to a request for a reserved host to hostname = {}", $r9) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r10 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts>
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: attempting to match a request to a request for a reserved host to hostname = {}", $r9) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r10 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r11 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r10 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r11 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r11)
org.apache.ambari.server.topology.LogicalRequest.offer : $r11 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : r3 = (org.apache.ambari.server.topology.HostRequest) $r12
org.apache.ambari.server.topology.LogicalRequest.offer : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : r3 = (org.apache.ambari.server.topology.HostRequest) $r12 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : if r3 == null
org.apache.ambari.server.topology.LogicalRequest.offer : r3 = (org.apache.ambari.server.topology.HostRequest) $r12 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : if r3 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : r4 = virtualinvoke r3.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1)
org.apache.ambari.server.topology.LogicalRequest.offer : if r3 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r2
org.apache.ambari.server.topology.LogicalRequest.offer : if r3 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r2 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= z0 = 0]
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r2 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= z0 = 0] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : z0 = 0
org.apache.ambari.server.topology.LogicalRequest.offer : z0 = 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r28 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests>
org.apache.ambari.server.topology.LogicalRequest.offer : $r28 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : r29 = $r28
org.apache.ambari.server.topology.LogicalRequest.offer : r29 = $r28 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : entermonitor $r28
org.apache.ambari.server.topology.LogicalRequest.offer : entermonitor $r28 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r30 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests>
org.apache.ambari.server.topology.LogicalRequest.offer : entermonitor $r28 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : r6 = $r52 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r29
org.apache.ambari.server.topology.LogicalRequest.offer : r6 = $r52 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r29 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : throw r6
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r29 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r30 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : r31 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r30 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : r31 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.offer : r31 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : if $z1 == 0
org.apache.ambari.server.topology.LogicalRequest.offer : $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r32 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r46 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r46 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r47 = new java.lang.StringBuilder
org.apache.ambari.server.topology.LogicalRequest.offer : $r46 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r47 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r47 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest.offer: outstandingHost request list size = ")
org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest.offer: outstandingHost request list size = ") >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r49 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests>
org.apache.ambari.server.topology.LogicalRequest.offer : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest.offer: outstandingHost request list size = ") >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r49 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $i3 = interfaceinvoke $r49.<java.util.Collection: int size()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r49 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $i3 = interfaceinvoke $r49.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)
org.apache.ambari.server.topology.LogicalRequest.offer : $i3 = interfaceinvoke $r49.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r46.<org.slf4j.Logger: void info(java.lang.String)>($r51)
org.apache.ambari.server.topology.LogicalRequest.offer : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r46.<org.slf4j.Logger: void info(java.lang.String)>($r51) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r29
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r46.<org.slf4j.Logger: void info(java.lang.String)>($r51) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r29 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= (branch)]
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r29 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : if z0 != 0
org.apache.ambari.server.topology.LogicalRequest.offer : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r53 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts>
org.apache.ambari.server.topology.LogicalRequest.offer : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r54 = <org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse DECLINED_DUE_TO_PREDICATE>
org.apache.ambari.server.topology.LogicalRequest.offer : $r54 = <org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse DECLINED_DUE_TO_PREDICATE> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= return $r54]
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= return $r54] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : return $r54
org.apache.ambari.server.topology.LogicalRequest.offer : $r53 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $z2 = interfaceinvoke $r53.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $z2 = interfaceinvoke $r53.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : if $z2 != 0
org.apache.ambari.server.topology.LogicalRequest.offer : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r54 = <org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse DECLINED_DUE_TO_PREDICATE>
org.apache.ambari.server.topology.LogicalRequest.offer : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r54 = <org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse DECLINED_DUE_TO_DONE>
org.apache.ambari.server.topology.LogicalRequest.offer : $r54 = <org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse DECLINED_DUE_TO_DONE> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : return $r54
org.apache.ambari.server.topology.LogicalRequest.offer : $r32 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r33 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r32 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r33 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: attempting to match a request to a request for a non-reserved host to hostname = {}", $r33)
org.apache.ambari.server.topology.LogicalRequest.offer : $r33 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: attempting to match a request to a request for a non-reserved host to hostname = {}", $r33) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r34 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r32.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: attempting to match a request to a request for a non-reserved host to hostname = {}", $r33) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r34 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r35 = (org.apache.ambari.server.topology.HostRequest) $r34
org.apache.ambari.server.topology.LogicalRequest.offer : $r34 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r35 = (org.apache.ambari.server.topology.HostRequest) $r34 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : r36 = virtualinvoke $r35.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1)
org.apache.ambari.server.topology.LogicalRequest.offer : $r35 = (org.apache.ambari.server.topology.HostRequest) $r34 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : r36 = virtualinvoke $r35.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r37 = <org.apache.ambari.server.topology.LogicalRequest$1: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer>
org.apache.ambari.server.topology.LogicalRequest.offer : r36 = virtualinvoke $r35.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r37 = <org.apache.ambari.server.topology.LogicalRequest$1: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r38 = virtualinvoke r36.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r37 = <org.apache.ambari.server.topology.LogicalRequest$1: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r38 = virtualinvoke r36.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $i1 = virtualinvoke $r38.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r38 = virtualinvoke r36.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $i1 = virtualinvoke $r38.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $i2 = $r37[$i1]
org.apache.ambari.server.topology.LogicalRequest.offer : $i1 = virtualinvoke $r38.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $i2 = $r37[$i1] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : tableswitch($i2) {     case 1:
org.apache.ambari.server.topology.LogicalRequest.offer : $i2 = $r37[$i1] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke r31.<java.util.Iterator: void remove()>()
org.apache.ambari.server.topology.LogicalRequest.offer : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke r31.<java.util.Iterator: void remove()>()
org.apache.ambari.server.topology.LogicalRequest.offer : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r44 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.offer : tableswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r44 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r45 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r44 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r45 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r44.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request returned DECLINED_PREDICATE for hostname = {}", $r45)
org.apache.ambari.server.topology.LogicalRequest.offer : $r45 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r44.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request returned DECLINED_PREDICATE for hostname = {}", $r45) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : z0 = 1
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r44.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request returned DECLINED_PREDICATE for hostname = {}", $r45) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : z0 = 1 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.offer : z0 = 1 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke r31.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r42 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke r31.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r42 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r43 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r42 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r43 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request returned DECLINED_DONE for hostname = {}, host request has been removed from list", $r43)
org.apache.ambari.server.topology.LogicalRequest.offer : $r43 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request returned DECLINED_DONE for hostname = {}, host request has been removed from list", $r43) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= (branch)]
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r42.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request returned DECLINED_DONE for hostname = {}, host request has been removed from list", $r43) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.offer : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke r31.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r39 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke r31.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r39 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r40 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r39 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r40 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request matched to non-reserved host, hostname = {}, host request has been removed from list", $r40)
org.apache.ambari.server.topology.LogicalRequest.offer : $r40 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request matched to non-reserved host, hostname = {}, host request has been removed from list", $r40) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r29
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r39.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: host request matched to non-reserved host, hostname = {}, host request has been removed from list", $r40) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r29 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : return r36
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r29 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r52 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : r4 = virtualinvoke r3.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r13 = virtualinvoke r4.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>()
org.apache.ambari.server.topology.LogicalRequest.offer : r4 = virtualinvoke r3.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.host.HostImpl)>(r1) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r13 = virtualinvoke r4.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r14 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED>
org.apache.ambari.server.topology.LogicalRequest.offer : $r13 = virtualinvoke r4.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r14 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : if $r13 == $r14
org.apache.ambari.server.topology.LogicalRequest.offer : $r14 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : if $r13 == $r14 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r15 = new java.lang.RuntimeException
org.apache.ambari.server.topology.LogicalRequest.offer : if $r13 == $r14 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r21 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : if $r13 == $r14 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r21 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r22 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r21 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r22 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: request mapping ACCEPTED for host = {}", $r22)
org.apache.ambari.server.topology.LogicalRequest.offer : $r22 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: request mapping ACCEPTED for host = {}", $r22) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r23 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer: request mapping ACCEPTED for host = {}", $r22) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r23 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r24 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts>
org.apache.ambari.server.topology.LogicalRequest.offer : $r23 = <org.apache.ambari.server.topology.LogicalRequest: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r24 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $i0 = interfaceinvoke $r24.<java.util.Map: int size()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r24 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $i0 = interfaceinvoke $r24.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.topology.LogicalRequest.offer : $i0 = interfaceinvoke $r24.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer returning response, reservedHost list size = {}", $r25)
org.apache.ambari.server.topology.LogicalRequest.offer : $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer returning response, reservedHost list size = {}", $r25) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r2
org.apache.ambari.server.topology.LogicalRequest.offer : interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("LogicalRequest.offer returning response, reservedHost list size = {}", $r25) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r2 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : return r4
org.apache.ambari.server.topology.LogicalRequest.offer : exitmonitor r2 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r15 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.topology.LogicalRequest.offer : $r15 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ")
org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ") >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r18 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ") >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r18 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.topology.LogicalRequest.offer : $r18 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.LogicalRequest.offer : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20)
org.apache.ambari.server.topology.LogicalRequest.offer : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : throw $r15
org.apache.ambari.server.topology.LogicalRequest.offer : specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
org.apache.ambari.server.topology.LogicalRequest.offer : throw $r15 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.offer : $r27 := @caughtexception
