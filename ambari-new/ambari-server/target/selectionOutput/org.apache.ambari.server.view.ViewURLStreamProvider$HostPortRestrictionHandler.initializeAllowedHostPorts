org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : z0 = 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r7 = new java.util.HashMap
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r7 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : specialinvoke $r7.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : specialinvoke $r7.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r1 = $r7
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r1 = $r7 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r8 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.lang.String allowedHostPortsValue>
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r8 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.lang.String allowedHostPortsValue> >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>($r8)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $z1 == 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r9 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.lang.String allowedHostPortsValue>
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts> = r1
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts> = r1 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.lang.Boolean isProxyCallRestricted> = $r45
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.lang.Boolean isProxyCallRestricted> = $r45 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : return
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r9 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.lang.String allowedHostPortsValue> >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r2 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r2 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty PROXY_ALLOWED_HOST_PORTS>
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty PROXY_ALLOWED_HOST_PORTS> >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r11 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r11 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r11)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $z2 != 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $z2 != 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : z0 = 1
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $z2 != 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts> = r1
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : z0 = 1 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r12 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r12 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r3 = virtualinvoke $r12.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r3 = virtualinvoke $r12.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r4 = r3
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r4 = r3 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : i0 = lengthof r4
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : i0 = lengthof r4 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : i1 = 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : i1 = 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if i1 >= i0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if i1 >= i0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r5 = r4[i1]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if i1 >= i0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts> = r1
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r5 = r4[i1] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r13 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r13 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r6 = virtualinvoke $r13.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : r6 = virtualinvoke $r13.<java.lang.String: java.lang.String[] split(java.lang.String)>(":") >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $i2 = lengthof r6
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $i2 = lengthof r6 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $i2 != 1
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $i2 != 1 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r14 = r6[0]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $i2 != 1 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r28 = r6[0]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r28 = r6[0] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $z5 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r28)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $z5 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $z5 != 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $z5 != 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r29 = r6[0]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $z5 != 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r32 = r6[0]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r32 = r6[0] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r33 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r32)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r33 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r34 = (java.util.HashSet) $r33
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r34 = (java.util.HashSet) $r33 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r35 = r6[1]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r35 = r6[1] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : virtualinvoke $r34.<java.util.HashSet: boolean add(java.lang.Object)>($r35)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : virtualinvoke $r34.<java.util.HashSet: boolean add(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r36 = staticinvoke <org.apache.ambari.server.view.ViewURLStreamProvider: org.apache.commons.logging.Log access$000()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r36 = staticinvoke <org.apache.ambari.server.view.ViewURLStreamProvider: org.apache.commons.logging.Log access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r37 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r37 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : specialinvoke $r37.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Allow proxy to host ")
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Allow proxy to host ") >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r39 = r6[0]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r39 = r6[0] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and port ")
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and port ") >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r42 = r6[1]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r42 = r6[1] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : interfaceinvoke $r36.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r44)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : interfaceinvoke $r36.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : i1 = i1 + 1
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : goto [?= (branch)]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if i1 >= i0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r29 = r6[0] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r30 = new java.util.HashSet
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r30 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : specialinvoke $r30.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : specialinvoke $r30.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, $r30) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r32 = r6[0]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r14 = r6[0] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r14)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $z3 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $z3 != 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $z3 != 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r15 = r6[0]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : if $z3 != 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r18 = r6[0]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r18 = r6[0] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r19 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r19 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r20 = (java.util.HashSet) $r19
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r20 = (java.util.HashSet) $r19 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : virtualinvoke $r20.<java.util.HashSet: boolean add(java.lang.Object)>("*")
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : virtualinvoke $r20.<java.util.HashSet: boolean add(java.lang.Object)>("*") >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r21 = staticinvoke <org.apache.ambari.server.view.ViewURLStreamProvider: org.apache.commons.logging.Log access$000()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r21 = staticinvoke <org.apache.ambari.server.view.ViewURLStreamProvider: org.apache.commons.logging.Log access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r22 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Allow proxy to host ")
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Allow proxy to host ") >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r24 = r6[0]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r24 = r6[0] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and all ports.")
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and all ports.") >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : interfaceinvoke $r21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r27)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : interfaceinvoke $r21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : goto [?= i1 = i1 + 1]
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : i1 = i1 + 1
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r15 = r6[0] >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r16 = new java.util.HashSet
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r16 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : specialinvoke $r16.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : specialinvoke $r16.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.initializeAllowedHostPorts : $r18 = r6[0]
