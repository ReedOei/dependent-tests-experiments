org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z0 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z1 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: boolean isNameNodeHAEnabled()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z1 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: boolean isNameNodeHAEnabled()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z1 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : r6 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.util.Collection getHostAssignmentsForComponent(java.lang.String)>("NAMENODE")
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : return
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : r6 = virtualinvoke r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: java.util.Collection getHostAssignmentsForComponent(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $i0 = interfaceinvoke r6.<java.util.Collection: int size()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $i0 = interfaceinvoke r6.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $i0 == 2
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $i0 == 2 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r7 = new org.apache.ambari.server.topology.InvalidTopologyException
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $i0 == 2 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r13 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.Configuration configuration>
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r13 = r0.<org.apache.ambari.server.topology.ClusterTopologyImpl: org.apache.ambari.server.topology.Configuration configuration> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r14 = virtualinvoke $r13.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r14 = virtualinvoke $r13.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>("hadoop-env")
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>("hadoop-env") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : r16 = (java.util.Map) $r15
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : r16 = (java.util.Map) $r15 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if r16 == null
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if r16 == null >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z2 = interfaceinvoke r16.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if r16 == null >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : return
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z2 = interfaceinvoke r16.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z2 != 0
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z3 = interfaceinvoke r16.<java.util.Map: boolean containsKey(java.lang.Object)>("dfs_ha_initial_namenode_active")
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z2 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : return
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z3 = interfaceinvoke r16.<java.util.Map: boolean containsKey(java.lang.Object)>("dfs_ha_initial_namenode_active") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z3 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z4 = interfaceinvoke r16.<java.util.Map: boolean containsKey(java.lang.Object)>("dfs_ha_initial_namenode_standby")
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : return
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z4 = interfaceinvoke r16.<java.util.Map: boolean containsKey(java.lang.Object)>("dfs_ha_initial_namenode_standby") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z4 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r17 = <org.apache.ambari.server.topology.HostGroup: java.util.regex.Pattern HOSTGROUP_REGEX>
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : return
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r17 = <org.apache.ambari.server.topology.HostGroup: java.util.regex.Pattern HOSTGROUP_REGEX> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r18 = interfaceinvoke r16.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs_ha_initial_namenode_active")
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r18 = interfaceinvoke r16.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs_ha_initial_namenode_active") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r19 = (java.lang.CharSequence) $r18
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r19 = (java.lang.CharSequence) $r18 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r20 = virtualinvoke $r17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r19)
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r20 = virtualinvoke $r17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r19) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z5 = virtualinvoke $r20.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z5 = virtualinvoke $r20.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z5 != 0
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z5 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r21 = interfaceinvoke r16.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs_ha_initial_namenode_active")
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z5 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r22 = <org.apache.ambari.server.topology.HostGroup: java.util.regex.Pattern HOSTGROUP_REGEX>
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r22 = <org.apache.ambari.server.topology.HostGroup: java.util.regex.Pattern HOSTGROUP_REGEX> >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r23 = interfaceinvoke r16.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs_ha_initial_namenode_standby")
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r23 = interfaceinvoke r16.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs_ha_initial_namenode_standby") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r24 = (java.lang.CharSequence) $r23
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r24 = (java.lang.CharSequence) $r23 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r25 = virtualinvoke $r22.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r24)
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r25 = virtualinvoke $r22.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r24) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z7 = virtualinvoke $r25.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z7 = virtualinvoke $r25.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z7 != 0
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z7 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r26 = interfaceinvoke r16.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs_ha_initial_namenode_standby")
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z7 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : return
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r26 = interfaceinvoke r16.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs_ha_initial_namenode_standby") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z8 = interfaceinvoke r6.<java.util.Collection: boolean contains(java.lang.Object)>($r26)
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z8 = interfaceinvoke r6.<java.util.Collection: boolean contains(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z8 != 0
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z8 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r27 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z8 != 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : return
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r27 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r28 = new java.lang.StringBuilder
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NAMENODE HA hosts mapped incorrectly for properties \'dfs_ha_initial_namenode_active\' and \'dfs_ha_initial_namenode_standby\'. Expected hosts are: ")
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NAMENODE HA hosts mapped incorrectly for properties \'dfs_ha_initial_namenode_active\' and \'dfs_ha_initial_namenode_standby\'. Expected hosts are: ") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6)
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31)
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : throw $r27
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r21 = interfaceinvoke r16.<java.util.Map: java.lang.Object get(java.lang.Object)>("dfs_ha_initial_namenode_active") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z6 = interfaceinvoke r6.<java.util.Collection: boolean contains(java.lang.Object)>($r21)
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z6 = interfaceinvoke r6.<java.util.Collection: boolean contains(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z6 == 0
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r22 = <org.apache.ambari.server.topology.HostGroup: java.util.regex.Pattern HOSTGROUP_REGEX>
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r27 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r7 = new org.apache.ambari.server.topology.InvalidTopologyException >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r4 = new java.lang.StringBuilder
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NAMENODE HA requires exactly 2 hosts running NAMENODE but there are: ")
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NAMENODE HA requires exactly 2 hosts running NAMENODE but there are: ") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $i1 = interfaceinvoke r6.<java.util.Collection: int size()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $i1 = interfaceinvoke r6.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Hosts: ")
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Hosts: ") >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6)
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : specialinvoke $r7.<org.apache.ambari.server.topology.InvalidTopologyException: void <init>(java.lang.String)>($r12)
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : specialinvoke $r7.<org.apache.ambari.server.topology.InvalidTopologyException: void <init>(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : throw $r7
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : r3 = (org.apache.ambari.server.topology.TopologyValidator) $r5
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : r3 = (org.apache.ambari.server.topology.TopologyValidator) $r5 >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : interfaceinvoke r3.<org.apache.ambari.server.topology.TopologyValidator: void validate(org.apache.ambari.server.topology.ClusterTopology)>(r0)
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : interfaceinvoke r3.<org.apache.ambari.server.topology.TopologyValidator: void validate(org.apache.ambari.server.topology.ClusterTopology)>(r0) >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.ClusterTopologyImpl.validateTopology : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
