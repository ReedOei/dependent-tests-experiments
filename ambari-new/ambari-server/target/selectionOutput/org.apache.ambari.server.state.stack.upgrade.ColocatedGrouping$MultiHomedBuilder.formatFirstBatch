org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r4 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r5 = $r4
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r5 = $r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r15 = new java.util.HashMap
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r15.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r15.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r6 = $r15
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r6 = $r15 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r7 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r7 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r16 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : i0 = 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : i0 = 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r30 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r30 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i1 = interfaceinvoke $r30.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i1 = interfaceinvoke $r30.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if i0 >= $i1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if i0 >= $i1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r31 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if i0 >= $i1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r51 = new com.google.gson.JsonArray
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r51 = new com.google.gson.JsonArray >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r51.<com.google.gson.JsonArray: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r51.<com.google.gson.JsonArray: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r52 = $r51
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r52 = $r51 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r53 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r53 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r54 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r54 = interfaceinvoke $r53.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z9 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z9 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z9 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z9 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r55 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z9 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r68 = new com.google.gson.JsonObject
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r68 = new com.google.gson.JsonObject >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r68.<com.google.gson.JsonObject: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r68.<com.google.gson.JsonObject: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r69 = $r68
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r69 = $r68 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r69.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("topology", r52)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r69.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("topology", r52) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r70 = virtualinvoke r69.<com.google.gson.JsonObject: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r70 = virtualinvoke r69.<com.google.gson.JsonObject: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.lang.String structuredOut> = $r70
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.lang.String structuredOut> = $r70 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : return
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r55 = interfaceinvoke r54.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r56 = (java.util.Map$Entry) $r55
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r56 = (java.util.Map$Entry) $r55 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r57 = new com.google.gson.JsonObject
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r57 = new com.google.gson.JsonObject >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r57.<com.google.gson.JsonObject: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r57.<com.google.gson.JsonObject: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r58 = $r57
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r58 = $r57 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r59 = interfaceinvoke r56.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r59 = interfaceinvoke r56.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r60 = (java.lang.String) $r59
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r60 = (java.lang.String) $r59 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r58.<com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.String)>("host_name", $r60)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r58.<com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.String)>("host_name", $r60) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r61 = new com.google.gson.JsonArray
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r61 = new com.google.gson.JsonArray >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r61.<com.google.gson.JsonArray: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r61.<com.google.gson.JsonArray: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r62 = $r61
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r62 = $r61 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r63 = interfaceinvoke r56.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r63 = interfaceinvoke r56.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r64 = (java.util.Set) $r63
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r64 = (java.util.Set) $r63 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r65 = interfaceinvoke $r64.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r65 = interfaceinvoke $r64.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z10 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z10 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z10 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z10 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r66 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z10 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r58.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("components", r62)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r58.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("components", r62) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r52.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>(r58)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r52.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>(r58) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z9 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z9 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z9 = interfaceinvoke r54.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r66 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r14 = (java.lang.String) $r66
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r14 = (java.lang.String) $r66 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r67 = new com.google.gson.JsonPrimitive
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r67 = new com.google.gson.JsonPrimitive >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r67.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>(r14)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r67.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>(r14) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r62.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r67)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r62.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r67) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z10 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z10 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z10 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r31 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r32 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r32 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r33 = (java.lang.String) $r32
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r33 = (java.lang.String) $r32 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z8 = virtualinvoke r33.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{components}}")
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z8 = virtualinvoke r33.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{components}}") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z8 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z8 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r34 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z8 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : i0 = i0 + 1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $r30 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages>]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $r30 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages>] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r30 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r34 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r35 = $r34
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r35 = $r34 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r36 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r36 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r36.<java.util.ArrayList: void <init>(java.util.Collection)>(r5)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r36.<java.util.ArrayList: void <init>(java.util.Collection)>(r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r37 = $r36
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r37 = $r36 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i2 = interfaceinvoke r37.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i2 = interfaceinvoke r37.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $i2 != 1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $i2 != 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r38 = interfaceinvoke r37.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $i2 != 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i3 = interfaceinvoke r5.<java.util.Set: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i3 = interfaceinvoke r5.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $i3 <= 1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $i3 <= 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i4 = interfaceinvoke r37.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $i3 <= 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r47 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r47 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r48 = virtualinvoke r33.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{components}}", $r47)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r48 = virtualinvoke r33.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{components}}", $r47) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r49 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r49 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke $r49.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r48)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke $r49.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r48) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : i0 = i0 + 1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i4 = interfaceinvoke r37.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i5 = $i4 - 1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i5 = $i4 - 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r41 = interfaceinvoke r37.<java.util.List: java.lang.Object remove(int)>($i5)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r41 = interfaceinvoke r37.<java.util.List: java.lang.Object remove(int)>($i5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r42 = (java.lang.String) $r41
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r42 = (java.lang.String) $r41 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r43 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r37, ", ")
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r43 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r37, ", ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r45 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ")
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r45 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r47 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r38 = interfaceinvoke r37.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r39 = (java.lang.String) $r38
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r39 = (java.lang.String) $r38 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $r47 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $r47 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r47 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r16 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r8 = (org.apache.ambari.server.state.stack.upgrade.StageWrapper) $r16
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r8 = (org.apache.ambari.server.state.stack.upgrade.StageWrapper) $r16 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r17 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: java.util.List getTasks()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r17 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: java.util.List getTasks()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r9 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r9 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r18 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r18 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r10 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r18
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r10 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r18 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r19 = virtualinvoke r10.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getService()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r19 = virtualinvoke r10.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getService()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r19)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z2 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r20 = virtualinvoke r10.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r20 = virtualinvoke r10.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>($r20)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z3 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r21 = virtualinvoke r10.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r21 = virtualinvoke r10.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r11 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r11 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z4 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r22 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r27 = virtualinvoke r10.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getService()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r27 = virtualinvoke r10.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getService()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r28 = virtualinvoke r10.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r28 = virtualinvoke r10.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r29 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>($r27, $r28)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r29 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>($r27, $r28) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r29)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r22 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r12 = (java.lang.String) $r22
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r12 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z5 = interfaceinvoke r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r12)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z5 = interfaceinvoke r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z5 != 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z5 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r13 = new java.util.HashSet
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z5 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r24 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r24 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r25 = (java.util.Set) $r24
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r25 = (java.util.Set) $r24 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r26 = virtualinvoke r10.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r26 = virtualinvoke r10.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke $r25.<java.util.Set: boolean add(java.lang.Object)>($r26)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke $r25.<java.util.Set: boolean add(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r13 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r13.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r13.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r13)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r12, $r13) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r24 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r12)
