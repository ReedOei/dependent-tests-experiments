org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r11 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r12 = interfaceinvoke $r11.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r12 = interfaceinvoke $r11.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r12
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r12 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r13 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r13 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r4 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r4 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("infra-solr-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("infra-solr-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r6 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r15 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r20 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("infra-solr-log4j")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r20 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("infra-solr-log4j") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r20 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r20 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r21 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r20 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r27 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("infra-solr-client-log4j")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r27 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("infra-solr-client-log4j") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r27 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r27 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r28 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if r27 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r28 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : specialinvoke $r28.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : specialinvoke $r28.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r29 = $r28
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r29 = $r28 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r30 = interfaceinvoke r27.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r30 = interfaceinvoke r27.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r10 = (java.lang.String) $r31
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r10 = (java.lang.String) $r31 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z7 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_client_log")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z7 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_client_log") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z7 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z7 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r10 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_client_log", "solr_client_log")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z7 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r32 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r10, "infra_client_log_maxfilesize", "solr_client_log_maxfilesize", "log4j.appender.file.MaxFileSize=(\\w+)MB", "80", r29)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r32 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r10, "infra_client_log_maxfilesize", "solr_client_log_maxfilesize", "log4j.appender.file.MaxFileSize=(\\w+)MB", "80", r29) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r33 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r32, "infra_client_log_maxbackupindex", "solr_client_log_maxbackupindex", "log4j.appender.file.MaxBackupIndex=(\\w+)\n", "60", r29)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r33 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r32, "infra_client_log_maxbackupindex", "solr_client_log_maxbackupindex", "log4j.appender.file.MaxBackupIndex=(\\w+)\n", "60", r29) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r33)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r33) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "infra-solr-client-log4j", r29, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "infra-solr-client-log4j", r29, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r10 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_client_log", "solr_client_log") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r32 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r10, "infra_client_log_maxfilesize", "solr_client_log_maxfilesize", "log4j.appender.file.MaxFileSize=(\\w+)MB", "80", r29)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r21 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : specialinvoke $r21.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : specialinvoke $r21.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r8 = $r21
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r8 = $r21 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r22 = interfaceinvoke r20.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r22 = interfaceinvoke r20.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r9 = (java.lang.String) $r23
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r9 = (java.lang.String) $r23 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r24 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r9, "infra_log_maxfilesize", "infra_log_maxfilesize", "log4j.appender.file.MaxFileSize=(\\w+)MB", "10", r8)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r24 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r9, "infra_log_maxfilesize", "infra_log_maxfilesize", "log4j.appender.file.MaxFileSize=(\\w+)MB", "10", r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r25 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r24, "infra_log_maxbackupindex", "infra_log_maxbackupindex", "log4j.appender.file.MaxBackupIndex=(\\w+)\n", "9", r8)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r25 = staticinvoke <org.apache.ambari.server.upgrade.SchemaUpgradeUtil: java.lang.String extractProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r24, "infra_log_maxbackupindex", "infra_log_maxbackupindex", "log4j.appender.file.MaxBackupIndex=(\\w+)\n", "9", r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r25)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : interfaceinvoke r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r25) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "infra-solr-log4j", r8, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "infra-solr-log4j", r8, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r27 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("infra-solr-client-log4j")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r15 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r7 = (java.lang.String) $r16
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r7 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z2 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("SOLR_SSL_TRUST_STORE={{infra_solr_keystore_location}}")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z2 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("SOLR_SSL_TRUST_STORE={{infra_solr_keystore_location}}") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r7 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("SOLR_SSL_TRUST_STORE={{infra_solr_keystore_location}}", "SOLR_SSL_TRUST_STORE={{infra_solr_truststore_location}}")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z3 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("SOLR_SSL_TRUST_STORE_PASSWORD={{infra_solr_keystore_password}}")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z3 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("SOLR_SSL_TRUST_STORE_PASSWORD={{infra_solr_keystore_password}}") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z3 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r7 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("SOLR_SSL_TRUST_STORE_PASSWORD={{infra_solr_keystore_password}}", "SOLR_SSL_TRUST_STORE_PASSWORD={{infra_solr_truststore_password}}")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z4 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("SOLR_KERB_NAME_RULES={{infra_solr_kerberos_name_rules}}")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z4 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("SOLR_KERB_NAME_RULES={{infra_solr_kerberos_name_rules}}") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z4 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r7 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("SOLR_KERB_NAME_RULES={{infra_solr_kerberos_name_rules}}", "SOLR_KERB_NAME_RULES=\"{{infra_solr_kerberos_name_rules}}\"")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z5 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(" -Dsolr.kerberos.name.rules=${SOLR_KERB_NAME_RULES}")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z5 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(" -Dsolr.kerberos.name.rules=${SOLR_KERB_NAME_RULES}") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z5 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r7 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(" -Dsolr.kerberos.name.rules=${SOLR_KERB_NAME_RULES}", "")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r17 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r17 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z6 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r18)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z6 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z6 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z6 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r19 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r7)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : if $z6 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r20 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("infra-solr-log4j")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r19 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "infra-solr-env", $r19, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "infra-solr-env", $r19, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r20 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("infra-solr-log4j")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r7 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(" -Dsolr.kerberos.name.rules=${SOLR_KERB_NAME_RULES}", "") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $r17 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r7 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("SOLR_KERB_NAME_RULES={{infra_solr_kerberos_name_rules}}", "SOLR_KERB_NAME_RULES=\"{{infra_solr_kerberos_name_rules}}\"") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z5 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(" -Dsolr.kerberos.name.rules=${SOLR_KERB_NAME_RULES}")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r7 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("SOLR_SSL_TRUST_STORE_PASSWORD={{infra_solr_keystore_password}}", "SOLR_SSL_TRUST_STORE_PASSWORD={{infra_solr_truststore_password}}") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z4 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("SOLR_KERB_NAME_RULES={{infra_solr_kerberos_name_rules}}")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : r7 = virtualinvoke r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("SOLR_SSL_TRUST_STORE={{infra_solr_keystore_location}}", "SOLR_SSL_TRUST_STORE={{infra_solr_truststore_location}}") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateAmbariInfraConfigs : $z3 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("SOLR_SSL_TRUST_STORE_PASSWORD={{infra_solr_keystore_password}}")
