org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $i1 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : if $i1 <= 1
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r6 = new java.util.Stack
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : return r1
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r6 = new java.util.Stack >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : specialinvoke $r6.<java.util.Stack: void <init>()>()
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : specialinvoke $r6.<java.util.Stack: void <init>()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : r2 = $r6
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : r2 = $r6 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(0)
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(0) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r7)
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : virtualinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : if $z0 != 0
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r9 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r14 = new java.util.ArrayList
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r14 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : specialinvoke $r14.<java.util.ArrayList: void <init>(java.util.Collection)>(r2)
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : specialinvoke $r14.<java.util.ArrayList: void <init>(java.util.Collection)>(r2) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $i2 = i0 - 1
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $i2 = i0 - 1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r15 = specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryParser: java.util.List mergeExpressions(java.util.List,int)>($r14, $i2)
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r15 = specialinvoke r0.<org.apache.ambari.server.api.predicate.QueryParser: java.util.List mergeExpressions(java.util.List,int)>($r14, $i2) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : return $r15
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r9 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : r3 = (org.apache.ambari.server.api.predicate.expressions.Expression) $r9
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : r3 = (org.apache.ambari.server.api.predicate.expressions.Expression) $r9 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $z1 = virtualinvoke r2.<java.util.Stack: boolean empty()>()
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $z1 = virtualinvoke r2.<java.util.Stack: boolean empty()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : if $z1 == 0
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r10 = null
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r11 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>()
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r11 = virtualinvoke r2.<java.util.Stack: java.lang.Object pop()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r10 = (org.apache.ambari.server.api.predicate.expressions.Expression) $r11
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r10 = (org.apache.ambari.server.api.predicate.expressions.Expression) $r11 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : r4 = $r10
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : r4 = $r10 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(0)
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r12 = interfaceinvoke r1.<java.util.List: java.lang.Object remove(int)>(0) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : r5 = (org.apache.ambari.server.api.predicate.expressions.Expression) $r12
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : r5 = (org.apache.ambari.server.api.predicate.expressions.Expression) $r12 >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r13 = interfaceinvoke r3.<org.apache.ambari.server.api.predicate.expressions.Expression: java.util.List merge(org.apache.ambari.server.api.predicate.expressions.Expression,org.apache.ambari.server.api.predicate.expressions.Expression,int)>(r4, r5, i0)
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r13 = interfaceinvoke r3.<org.apache.ambari.server.api.predicate.expressions.Expression: java.util.List merge(org.apache.ambari.server.api.predicate.expressions.Expression,org.apache.ambari.server.api.predicate.expressions.Expression,int)>(r4, r5, i0) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : virtualinvoke r2.<java.util.Stack: boolean addAll(java.util.Collection)>($r13)
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : virtualinvoke r2.<java.util.Stack: boolean addAll(java.util.Collection)>($r13) >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : goto [?= $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()]
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : goto [?= $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()] >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : $r10 = null >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : goto [?= r4 = $r10]
org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : goto [?= r4 = $r10] >>>>>>>> org.apache.ambari.server.api.predicate.QueryParser.mergeExpressions : r4 = $r10
