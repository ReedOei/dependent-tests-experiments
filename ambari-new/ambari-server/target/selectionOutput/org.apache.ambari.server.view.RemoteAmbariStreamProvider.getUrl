org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : r2 = r0.<org.apache.ambari.server.view.RemoteAmbariStreamProvider: java.lang.String baseUrl> >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/")
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : if $z0 == 0
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r3 = new java.lang.StringBuilder
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r7 = new java.lang.StringBuilder
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : return $r6
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : goto [?= return $r6]
org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : goto [?= return $r6] >>>>>>>> org.apache.ambari.server.view.RemoteAmbariStreamProvider.getUrl : return $r6
