org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $z0 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean LINUX> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : if $z0 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r27 = <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r27 = <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r28 = newarray (java.lang.Object)[1]
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r28 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r28[0] = r0
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r28[0] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Not performing chown command for file %s because current OS is not Linux ", $r28)
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r29 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Not performing chown command for file %s because current OS is not Linux ", $r28) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : interfaceinvoke $r27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r29)
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : interfaceinvoke $r27.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r30 = new org.apache.ambari.server.utils.ShellCommandUtil$Result
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r30 = new org.apache.ambari.server.utils.ShellCommandUtil$Result >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : specialinvoke $r30.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(-1, "", "Cannot perform operation: The current OS is not Linux")
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : specialinvoke $r30.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(-1, "", "Cannot perform operation: The current OS is not Linux") >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : return $r30
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : if $z1 != 0
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : if $z1 != 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3 = newarray (java.lang.String)[3]
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : if $z1 != 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r26 = new org.apache.ambari.server.utils.ShellCommandUtil$Result
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : if $z1 != 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r5 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : if $z1 != 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r15 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : r16 = $r15 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r17 = <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r17 = <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r18 = newarray (java.lang.Object)[2]
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r18 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r18[0] = r1
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r18[0] = r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r18[1] = r0
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r18[1] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not perform chown %s %s", $r18)
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not perform chown %s %s", $r18) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : interfaceinvoke $r17.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r19, r16)
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : interfaceinvoke $r17.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r19, r16) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r20 = new org.apache.ambari.server.utils.ShellCommandUtil$Result
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r20 = new org.apache.ambari.server.utils.ShellCommandUtil$Result >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r21 = new java.lang.StringBuilder
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot perform operation: ")
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot perform operation: ") >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r23 = virtualinvoke r16.<java.lang.InterruptedException: java.lang.String getLocalizedMessage()>()
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r23 = virtualinvoke r16.<java.lang.InterruptedException: java.lang.String getLocalizedMessage()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : specialinvoke $r20.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(-1, "", $r25)
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : specialinvoke $r20.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(-1, "", $r25) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : return $r20
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : r2 = $r5 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r6 = <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r6 = <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r7 = newarray (java.lang.Object)[2]
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r7 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r7[0] = r1
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r7[0] = r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r7[1] = r0
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r7[1] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not perform chown %s %s", $r7)
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not perform chown %s %s", $r7) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : interfaceinvoke $r6.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r8, r2)
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : interfaceinvoke $r6.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>($r8, r2) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r9 = new org.apache.ambari.server.utils.ShellCommandUtil$Result
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r9 = new org.apache.ambari.server.utils.ShellCommandUtil$Result >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot perform operation: ")
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot perform operation: ") >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r12 = virtualinvoke r2.<java.io.IOException: java.lang.String getLocalizedMessage()>()
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r12 = virtualinvoke r2.<java.io.IOException: java.lang.String getLocalizedMessage()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : specialinvoke $r9.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(-1, "", $r14)
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : specialinvoke $r9.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(-1, "", $r14) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : return $r9
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r26 = new org.apache.ambari.server.utils.ShellCommandUtil$Result >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : specialinvoke $r26.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(0, "", "")
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : specialinvoke $r26.<org.apache.ambari.server.utils.ShellCommandUtil$Result: void <init>(int,java.lang.String,java.lang.String)>(0, "", "") >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : return $r26
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r5 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r15 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3[0] = "chown"
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3[0] = "chown" >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r5 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3[0] = "chown" >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r15 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3[0] = "chown" >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3[1] = r1
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3[1] = r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r5 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3[1] = r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r15 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3[1] = r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3[2] = r0
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3[2] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r5 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3[2] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r15 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r3[2] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r4 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler,boolean)>($r3, null, null, 1)
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r4 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler,boolean)>($r3, null, null, 1) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r5 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r4 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler,boolean)>($r3, null, null, 1) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r15 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : $r4 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler,boolean)>($r3, null, null, 1) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setFileOwner : return $r4
