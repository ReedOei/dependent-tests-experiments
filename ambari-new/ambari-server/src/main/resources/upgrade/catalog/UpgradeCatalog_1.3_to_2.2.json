{
  "version": "1.0",
  "stacks": [
    {
      "name": "HDP",
      "old-version": "1.3",
      "target-version": "2.2",
      "options": {
        "config-types": {
          "hdfs-site": {
            "merged-copy": "yes"
          },
          "core-site": {
            "merged-copy": "yes"
          },
          "hbase-site": {
            "merged-copy": "yes"
          },
          "hbase-env": {
            "merged-copy": "yes"
          },
          "oozie-env": {
            "merged-copy": "yes"
          },
          "hive-site": {
            "merged-copy": "yes"
          },
          "mapred-site": {
            "merged-copy": "yes"
          },
          "mapred-env": {
            "merged-copy": "yes"
          },
          "cluster-env" : {
            "merged-copy": "yes"
          },
          "sqoop-env": {
            "merged-copy": "yes"
          },
          "pig-env": {
            "merged-copy": "yes"
          },
          "pig-properties": {
            "merged-copy": "yes"
          },
          "webhcat-site": {
            "merged-copy": "yes"
          },
          "zookeeper-env": {
            "merged-copy": "yes"
          },
          "hadoop-env": {
            "merged-copy": "yes"
          },
          "hadoop-policy": {
            "merged-copy": "yes"
          },
          "hbase-log4j": {
            "merged-copy": "yes"
          },
          "hdfs-log4j": {
            "merged-copy": "yes"
          },
          "hive-env": {
            "merged-copy": "yes"
          },
          "hive-exec-log4j": {
            "merged-copy": "yes"
          },
          "hive-log4j": {
            "merged-copy": "yes"
          },
          "oozie-site": {
            "merged-copy": "yes"
          }
        }
      },
      "properties": {
        "oozie-site": {
          "oozie.service.ProxyUserService.proxyuser.falcon.hosts": "*",
          "oozie.service.coord.check.maximum.frequency": "false",
          "oozie.service.SchemaService.wf.ext.schemas": "shell-action-0.1.xsd,shell-action-0.2.xsd,shell-action-0.3.xsd,email-action-0.1.xsd,email-action-0.2.xsd,hive-action-0.2.xsd,hive-action-0.3.xsd,hive-action-0.4.xsd,hive-action-0.5.xsd,sqoop-action-0.2.xsd,sqoop-action-0.3.xsd,sqoop-action-0.4.xsd,ssh-action-0.1.xsd,ssh-action-0.2.xsd,distcp-action-0.1.xsd,distcp-action-0.2.xsd,oozie-sla-0.1.xsd,oozie-sla-0.2.xsd",
          "oozie.service.HadoopAccessorService.kerberos.enabled": "false",
          "oozie.service.coord.push.check.requeue.interval": "30000",
          "oozie.credentials.credentialclasses": "hcat=org.apache.oozie.action.hadoop.HCatCredentials",
          "oozie.authentication.kerberos.name.rules": "\n      RULE:[2:$1@$0]([jt]t@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-MAPREDUSER/\n      RULE:[2:$1@$0]([nd]n@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HDFSUSER/\n      RULE:[2:$1@$0](hm@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HBASE-USER/\n      RULE:[2:$1@$0](rs@.*TODO-KERBEROS-DOMAIN)s/.*/TODO-HBASE-USER/\n      DEFAULT",
          "oozie.authentication.simple.anonymous.allowed": "true",
          "oozie.service.AuthorizationService.security.enabled": "true",
          "oozie.services.ext": "org.apache.oozie.service.JMSAccessorService,org.apache.oozie.service.PartitionDependencyManagerService,org.apache.oozie.service.HCatAccessorService",
          "oozie.services": "\n      org.apache.oozie.service.SchedulerService,\n      org.apache.oozie.service.InstrumentationService,\n      org.apache.oozie.service.MemoryLocksService,\n      org.apache.oozie.service.UUIDService,\n      org.apache.oozie.service.ELService,\n      org.apache.oozie.service.AuthorizationService,\n      org.apache.oozie.service.UserGroupInformationService,\n      org.apache.oozie.service.HadoopAccessorService,\n      org.apache.oozie.service.JobsConcurrencyService,\n      org.apache.oozie.service.URIHandlerService,\n      org.apache.oozie.service.DagXLogInfoService,\n      org.apache.oozie.service.SchemaService,\n      org.apache.oozie.service.LiteWorkflowAppService,\n      org.apache.oozie.service.JPAService,\n      org.apache.oozie.service.StoreService,\n      org.apache.oozie.service.CoordinatorStoreService,\n      org.apache.oozie.service.SLAStoreService,\n      org.apache.oozie.service.DBLiteWorkflowStoreService,\n      org.apache.oozie.service.CallbackService,\n      org.apache.oozie.service.ShareLibService,\n      org.apache.oozie.service.CallableQueueService,\n      org.apache.oozie.service.ActionService,\n      org.apache.oozie.service.ActionCheckerService,\n      org.apache.oozie.service.RecoveryService,\n      org.apache.oozie.service.PurgeService,\n      org.apache.oozie.service.CoordinatorEngineService,\n      org.apache.oozie.service.BundleEngineService,\n      org.apache.oozie.service.DagEngineService,\n      org.apache.oozie.service.CoordMaterializeTriggerService,\n      org.apache.oozie.service.StatusTransitService,\n      org.apache.oozie.service.PauseTransitService,\n      org.apache.oozie.service.GroupsService,\n      org.apache.oozie.service.ProxyUserService,\n      org.apache.oozie.service.XLogStreamingService,\n      org.apache.oozie.service.JvmPauseMonitorService",
          "oozie.service.URIHandlerService.uri.handlers": "org.apache.oozie.dependency.FSURIHandler,org.apache.oozie.dependency.HCatURIHandler",
          "oozie.service.ProxyUserService.proxyuser.falcon.groups": "*",
          "oozie.service.ActionService.executor.ext.classes": "\n      org.apache.oozie.action.email.EmailActionExecutor,\n      org.apache.oozie.action.hadoop.HiveActionExecutor,\n      org.apache.oozie.action.hadoop.ShellActionExecutor,\n      org.apache.oozie.action.hadoop.SqoopActionExecutor,\n      org.apache.oozie.action.hadoop.DistcpActionExecutor"
        },
        "hive-log4j": {
          "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\nhive.log.threshold=ALL\nhive.root.logger=INFO,DRFA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.log.file=hive.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshold=${hive.log.threshold}\n\n#\n# Daily Rolling File Appender\n#\n# Use the PidDailyerRollingFileAppend class instead if you want to use separate log files\n# for different CLI session.\n#\n# log4j.appender.DRFA=org.apache.hadoop.hive.ql.log.PidDailyRollingFileAppender\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\n\nlog4j.appender.DRFA.File=${hive.log.dir}/${hive.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t]: %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} [%t]: %p %c{2}: %m%n\nlog4j.appender.console.encoding=UTF-8\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,DRFA\nlog4j.category.Datastore=ERROR,DRFA\nlog4j.category.Datastore.Schema=ERROR,DRFA\nlog4j.category.JPOX.Datastore=ERROR,DRFA\nlog4j.category.JPOX.Plugin=ERROR,DRFA\nlog4j.category.JPOX.MetaData=ERROR,DRFA\nlog4j.category.JPOX.Query=ERROR,DRFA\nlog4j.category.JPOX.General=ERROR,DRFA\nlog4j.category.JPOX.Enhancer=ERROR,DRFA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,DRFA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,DRFA"
        },
        "hive-exec-log4j": {
          "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Define some default values that can be overridden by system properties\n\nhive.log.threshold=ALL\nhive.root.logger=INFO,FA\nhive.log.dir=${java.io.tmpdir}/${user.name}\nhive.query.id=hadoop\nhive.log.file=${hive.query.id}.log\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hive.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=${hive.log.threshold}\n\n#\n# File Appender\n#\n\nlog4j.appender.FA=org.apache.log4j.FileAppender\nlog4j.appender.FA.File=${hive.log.dir}/${hive.log.file}\nlog4j.appender.FA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\nlog4j.appender.FA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#custom logging levels\n#log4j.logger.xxx=DEBUG\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.hive.shims.HiveEventCounter\n\n\nlog4j.category.DataNucleus=ERROR,FA\nlog4j.category.Datastore=ERROR,FA\nlog4j.category.Datastore.Schema=ERROR,FA\nlog4j.category.JPOX.Datastore=ERROR,FA\nlog4j.category.JPOX.Plugin=ERROR,FA\nlog4j.category.JPOX.MetaData=ERROR,FA\nlog4j.category.JPOX.Query=ERROR,FA\nlog4j.category.JPOX.General=ERROR,FA\nlog4j.category.JPOX.Enhancer=ERROR,FA\n\n\n# Silence useless ZK logs\nlog4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN,FA\nlog4j.logger.org.apache.zookeeper.ClientCnxnSocketNIO=WARN,FA"
        },
        "hive-env": {
          "content": "\n if [ \"$SERVICE\" = \"cli\" ]; then\n   if [ -z \"$DEBUG\" ]; then\n     export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -Xms10m -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:+UseParNewGC -XX:-UseGCOverheadLimit\"\n   else\n     export HADOOP_OPTS=\"$HADOOP_OPTS -XX:NewRatio=12 -Xms10m -XX:MaxHeapFreeRatio=40 -XX:MinHeapFreeRatio=15 -XX:-UseGCOverheadLimit\"\n   fi\n fi\n\n# The heap size of the jvm stared by hive shell script can be controlled via:\n\nexport HADOOP_HEAPSIZE=\"{{hive_heapsize}}\"\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m $HADOOP_CLIENT_OPTS\"\n\n# Larger heap size may be required when running queries over large number of files or partitions.\n# By default hive shell scripts use a heap size of 256 (MB).  Larger heap size would also be\n# appropriate for hive server (hwi etc).\n\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# Hive Configuration Directory can be controlled by:\nexport HIVE_CONF_DIR={{hive_config_dir}}\n\n# Folder containing extra libraries required for hive compilation/execution can be controlled by:\nif [ \"${HIVE_AUX_JARS_PATH}\" != \"\" ]; then\n  export HIVE_AUX_JARS_PATH=${HIVE_AUX_JARS_PATH}\nelif [ -d \"/usr/hdp/current/hive-webhcat/share/hcatalog\" ]; then\n  export HIVE_AUX_JARS_PATH=/usr/hdp/current/hive-webhcat/share/hcatalog\nfi\n\nexport METASTORE_PORT={{hive_metastore_port}}",
          "hive_aux_jars_path": {"remove":"yes"},
          "hive_conf_dir": {"remove":"yes"},
          "hive_dbroot": {"remove":"yes"}
        },
        "hdfs-log4j": {
          "content": "\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n\n# Define some default values that can be overridden by system properties\n# To change daemon root logger use hadoop_root_logger in hadoop-env\nhadoop.root.logger=INFO,console\nhadoop.log.dir=.\nhadoop.log.file=hadoop.log\n\n\n# Define the root logger to the system property \"hadoop.root.logger\".\nlog4j.rootLogger=${hadoop.root.logger}, EventCounter\n\n# Logging Threshold\nlog4j.threshhold=ALL\n\n#\n# Daily Rolling File Appender\n#\n\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n# Debugging Pattern format\n#log4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\n\n#\n# TaskLog Appender\n#\n\n#Default values\nhadoop.tasklog.taskid=null\nhadoop.tasklog.iscleanup=false\nhadoop.tasklog.noKeepSplits=4\nhadoop.tasklog.totalLogFileSize=100\nhadoop.tasklog.purgeLogSplits=true\nhadoop.tasklog.logsRetainHours=12\n\nlog4j.appender.TLA=org.apache.hadoop.mapred.TaskLogAppender\nlog4j.appender.TLA.taskId=${hadoop.tasklog.taskid}\nlog4j.appender.TLA.isCleanup=${hadoop.tasklog.iscleanup}\nlog4j.appender.TLA.totalLogFileSize=${hadoop.tasklog.totalLogFileSize}\n\nlog4j.appender.TLA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.TLA.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\n\n#\n#Security audit appender\n#\nhadoop.security.logger=INFO,console\nhadoop.security.log.maxfilesize=256MB\nhadoop.security.log.maxbackupindex=20\nlog4j.category.SecurityLogger=${hadoop.security.logger}\nhadoop.security.log.file=SecurityAuth.audit\nlog4j.appender.DRFAS=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.DRFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.DRFAS.DatePattern=.yyyy-MM-dd\n\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hadoop.log.dir}/${hadoop.security.log.file}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.appender.RFAS.MaxFileSize=${hadoop.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hadoop.security.log.maxbackupindex}\n\n#\n# hdfs audit logging\n#\nhdfs.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=${hdfs.audit.logger}\nlog4j.additivity.org.apache.hadoop.hdfs.server.namenode.FSNamesystem.audit=false\nlog4j.appender.DRFAAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFAAUDIT.File=${hadoop.log.dir}/hdfs-audit.log\nlog4j.appender.DRFAAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.DRFAAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.DRFAAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# mapred audit logging\n#\nmapred.audit.logger=INFO,console\nlog4j.logger.org.apache.hadoop.mapred.AuditLogger=${mapred.audit.logger}\nlog4j.additivity.org.apache.hadoop.mapred.AuditLogger=false\nlog4j.appender.MRAUDIT=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.MRAUDIT.File=${hadoop.log.dir}/mapred-audit.log\nlog4j.appender.MRAUDIT.layout=org.apache.log4j.PatternLayout\nlog4j.appender.MRAUDIT.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.MRAUDIT.DatePattern=.yyyy-MM-dd\n\n#\n# Rolling File Appender\n#\n\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hadoop.log.dir}/${hadoop.log.file}\n\n# Logfile size and and 30-day backups\nlog4j.appender.RFA.MaxFileSize=256MB\nlog4j.appender.RFA.MaxBackupIndex=10\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} - %m%n\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p %c{2} (%F:%M(%L)) - %m%n\n\n\n# Custom Logging levels\n\nhadoop.metrics.log.level=INFO\n#log4j.logger.org.apache.hadoop.mapred.JobTracker=DEBUG\n#log4j.logger.org.apache.hadoop.mapred.TaskTracker=DEBUG\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.metrics2=${hadoop.metrics.log.level}\n\n# Jets3t library\nlog4j.logger.org.jets3t.service.impl.rest.httpclient.RestS3Service=ERROR\n\n#\n# Null Appender\n# Trap security logger on the hadoop client side\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# Event Counter Appender\n# Sends counts of logging messages at different severity levels to Hadoop Metrics.\n#\nlog4j.appender.EventCounter=org.apache.hadoop.log.metrics.EventCounter\n\n# Removes \"deprecated\" messages\nlog4j.logger.org.apache.hadoop.conf.Configuration.deprecation=WARN\n\n#\n# HDFS block state change log from block manager\n#\n# Uncomment the following to suppress normal block state change\n# messages from BlockManager in NameNode.\n#log4j.logger.BlockStateChange=WARN"
        },
        "hbase-log4j": {
          "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\n# Define some default values that can be overridden by system properties\nhbase.root.logger=INFO,console\nhbase.security.logger=INFO,console\nhbase.log.dir=.\nhbase.log.file=hbase.log\n\n# Define the root logger to the system property \"hbase.root.logger\".\nlog4j.rootLogger=${hbase.root.logger}\n\n# Logging Threshold\nlog4j.threshold=ALL\n\n#\n# Daily Rolling File Appender\n#\nlog4j.appender.DRFA=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.DRFA.File=${hbase.log.dir}/${hbase.log.file}\n\n# Rollver at midnight\nlog4j.appender.DRFA.DatePattern=.yyyy-MM-dd\n\n# 30-day backup\n#log4j.appender.DRFA.MaxBackupIndex=30\nlog4j.appender.DRFA.layout=org.apache.log4j.PatternLayout\n\n# Pattern format: Date LogLevel LoggerName LogMessage\nlog4j.appender.DRFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Rolling File Appender properties\nhbase.log.maxfilesize=256MB\nhbase.log.maxbackupindex=20\n\n# Rolling File Appender\nlog4j.appender.RFA=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFA.File=${hbase.log.dir}/${hbase.log.file}\n\nlog4j.appender.RFA.MaxFileSize=${hbase.log.maxfilesize}\nlog4j.appender.RFA.MaxBackupIndex=${hbase.log.maxbackupindex}\n\nlog4j.appender.RFA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFA.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n#\n# Security audit appender\n#\nhbase.security.log.file=SecurityAuth.audit\nhbase.security.log.maxfilesize=256MB\nhbase.security.log.maxbackupindex=20\nlog4j.appender.RFAS=org.apache.log4j.RollingFileAppender\nlog4j.appender.RFAS.File=${hbase.log.dir}/${hbase.security.log.file}\nlog4j.appender.RFAS.MaxFileSize=${hbase.security.log.maxfilesize}\nlog4j.appender.RFAS.MaxBackupIndex=${hbase.security.log.maxbackupindex}\nlog4j.appender.RFAS.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RFAS.layout.ConversionPattern=%d{ISO8601} %p %c: %m%n\nlog4j.category.SecurityLogger=${hbase.security.logger}\nlog4j.additivity.SecurityLogger=false\n#log4j.logger.SecurityLogger.org.apache.hadoop.hbase.security.access.AccessController=TRACE\n\n#\n# Null Appender\n#\nlog4j.appender.NullAppender=org.apache.log4j.varia.NullAppender\n\n#\n# console\n# Add \"console\" to rootlogger above if you want to use this\n#\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.target=System.err\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n\n\n# Custom Logging levels\n\nlog4j.logger.org.apache.zookeeper=INFO\n#log4j.logger.org.apache.hadoop.fs.FSNamesystem=DEBUG\nlog4j.logger.org.apache.hadoop.hbase=DEBUG\n# Make these two classes INFO-level. Make them DEBUG to see more zk debug.\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZKUtil=INFO\nlog4j.logger.org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher=INFO\n#log4j.logger.org.apache.hadoop.dfs=DEBUG\n# Set this class to log INFO only otherwise its OTT\n# Enable this to get detailed connection error/retry logging.\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=TRACE\n\n\n# Uncomment this line to enable tracing on _every_ RPC call (this can be a lot of output)\n#log4j.logger.org.apache.hadoop.ipc.HBaseServer.trace=DEBUG\n\n# Uncomment the below if you want to remove logging of client region caching'\n# and scan of .META. messages\n# log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=INFO\n# log4j.logger.org.apache.hadoop.hbase.client.MetaScanner=INFO"
        },
        "hadoop-policy": {
          "security.refresh.usertogroups.mappings.protocol.acl": "hadoop",
          "security.refresh.policy.protocol.acl": "hadoop",
          "security.admin.operations.protocol.acl": "hadoop",
          "security.inter.datanode.protocol.acl": "*"
        },
        "hadoop-env": {
          "namenode_formatted_mark_dir": {"remove": "yes"},
          "content": "\n# Set Hadoop-specific environment variables here.\n\n# The only required environment variable is JAVA_HOME.  All others are\n# optional.  When running a distributed configuration it is best to\n# set JAVA_HOME in this file, so that it is correctly defined on\n# remote nodes.\n\n# The java implementation to use.  Required.\nexport JAVA_HOME={{java_home}}\nexport HADOOP_HOME_WARN_SUPPRESS=1\n\n# Hadoop home directory\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n# Hadoop Configuration Directory\n\n{# this is different for HDP1 #}\n# Path to jsvc required by secure HDP 2.0 datanode\nexport JSVC_HOME={{jsvc_path}}\n\n\n# The maximum amount of heap to use, in MB. Default is 1000.\nexport HADOOP_HEAPSIZE=\"{{hadoop_heapsize}}\"\n\nexport HADOOP_NAMENODE_INIT_HEAPSIZE=\"-Xms{{namenode_heapsize}}\"\n\n# Extra Java runtime options.  Empty by default.\nexport HADOOP_OPTS=\"-Djava.net.preferIPv4Stack=true ${HADOOP_OPTS}\"\n\n# Command specific options appended to HADOOP_OPTS when specified\nexport HADOOP_NAMENODE_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{namenode_opt_newsize}} -XX:MaxNewSize={{namenode_opt_maxnewsize}} -XX:PermSize={{namenode_opt_permsize}} -XX:MaxPermSize={{namenode_opt_maxpermsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{namenode_heapsize}} -Xmx{{namenode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_NAMENODE_OPTS}\"\nHADOOP_JOBTRACKER_OPTS=\"-server -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:ErrorFile={{hdfs_log_dir_prefix}}/$USER/hs_err_pid%p.log -XX:NewSize={{jtnode_opt_newsize}} -XX:MaxNewSize={{jtnode_opt_maxnewsize}} -Xloggc:{{hdfs_log_dir_prefix}}/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xmx{{jtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dmapred.audit.logger=INFO,MRAUDIT -Dhadoop.mapreduce.jobsummary.logger=INFO,JSA ${HADOOP_JOBTRACKER_OPTS}\"\n\nHADOOP_TASKTRACKER_OPTS=\"-server -Xmx{{ttnode_heapsize}} -Dhadoop.security.logger=ERROR,console -Dmapred.audit.logger=ERROR,console ${HADOOP_TASKTRACKER_OPTS}\"\nexport HADOOP_DATANODE_OPTS=\"-server -XX:ParallelGCThreads=4 -XX:+UseConcMarkSweepGC -XX:ErrorFile=/var/log/hadoop/$USER/hs_err_pid%p.log -XX:NewSize=200m -XX:MaxNewSize=200m -XX:PermSize=128m -XX:MaxPermSize=256m -Xloggc:/var/log/hadoop/$USER/gc.log-`date +'%Y%m%d%H%M'` -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xms{{dtnode_heapsize}} -Xmx{{dtnode_heapsize}} -Dhadoop.security.logger=INFO,DRFAS -Dhdfs.audit.logger=INFO,DRFAAUDIT ${HADOOP_DATANODE_OPTS}\"\nHADOOP_BALANCER_OPTS=\"-server -Xmx{{hadoop_heapsize}}m ${HADOOP_BALANCER_OPTS}\"\n\nexport HADOOP_SECONDARYNAMENODE_OPTS=$HADOOP_NAMENODE_OPTS\n\n# The following applies to multiple commands (fs, dfs, fsck, distcp etc)\nexport HADOOP_CLIENT_OPTS=\"-Xmx${HADOOP_HEAPSIZE}m -XX:MaxPermSize=512m $HADOOP_CLIENT_OPTS\"\n\n# On secure datanodes, user to run the datanode as after dropping privileges\nexport HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER:-{{hadoop_secure_dn_user}}}\n\n# Extra ssh options.  Empty by default.\nexport HADOOP_SSH_OPTS=\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR\"\n\n# Where log files are stored.  $HADOOP_HOME/logs by default.\nexport HADOOP_LOG_DIR={{hdfs_log_dir_prefix}}/$USER\n\n# History server logs\nexport HADOOP_MAPRED_LOG_DIR={{mapred_log_dir_prefix}}/$USER\n\n# Where log files are stored in the secure data environment.\nexport HADOOP_SECURE_DN_LOG_DIR={{hdfs_log_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# File naming remote slave hosts.  $HADOOP_HOME/conf/slaves by default.\n# export HADOOP_SLAVES=${HADOOP_HOME}/conf/slaves\n\n# host:path where hadoop code should be rsync'd from.  Unset by default.\n# export HADOOP_MASTER=master:/home/$USER/src/hadoop\n\n# Seconds to sleep between slave commands.  Unset by default.  This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HADOOP_SLAVE_SLEEP=0.1\n\n# The directory where pid files are stored. /tmp by default.\nexport HADOOP_PID_DIR={{hadoop_pid_dir_prefix}}/$USER\nexport HADOOP_SECURE_DN_PID_DIR={{hadoop_pid_dir_prefix}}/$HADOOP_SECURE_DN_USER\n\n# History server pid\nexport HADOOP_MAPRED_PID_DIR={{mapred_pid_dir_prefix}}/$USER\n\nYARN_RESOURCEMANAGER_OPTS=\"-Dyarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\"\n\n# A string representing this instance of hadoop. $USER by default.\nexport HADOOP_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes.  See 'man nice'.\n\n# export HADOOP_NICENESS=10\n\n# Use libraries from standard classpath\nJAVA_JDBC_LIBS=\"\"\n#Add libraries required by mysql connector\nfor jarFile in `ls /usr/share/java/*mysql* 2>/dev/null`\ndo\n  JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\ndone\n# Add libraries required by oracle connector\nfor jarFile in `ls /usr/share/java/*ojdbc* 2>/dev/null`\ndo\n  JAVA_JDBC_LIBS=${JAVA_JDBC_LIBS}:$jarFile\ndone\n# Add libraries required by nodemanager\nMAPREDUCE_LIBS={{mapreduce_libs_path}}\nexport HADOOP_CLASSPATH=${HADOOP_CLASSPATH}${JAVA_JDBC_LIBS}:${MAPREDUCE_LIBS}\n\n# added to the HADOOP_CLASSPATH\nif [ -d \"/usr/hdp/current/tez-client\" ]; then\n  if [ -d \"/etc/tez/conf/\" ]; then\n    # When using versioned RPMs, the tez-client will be a symlink to the current folder of tez in HDP.\n    export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:/usr/hdp/current/tez-client/*:/usr/hdp/current/tez-client/lib/*:/etc/tez/conf/\n  fi\nfi\n\n# Setting path to hdfs command line\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\n\n# Mostly required for hadoop 2.0\nexport JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}\n\nexport HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\""
        },
        "zookeeper-env": {
          "content": "\nexport JAVA_HOME={{java64_home}}\nexport ZOOKEEPER_HOME={{zk_home}}\nexport ZOO_LOG_DIR={{zk_log_dir}}\nexport ZOOPIDFILE={{zk_pid_file}}\nexport SERVER_JVMFLAGS={{zk_server_heapsize}}\nexport JAVA=$JAVA_HOME/bin/java\nexport CLASSPATH=$CLASSPATH:/usr/share/zookeeper/*\n\n{% if security_enabled %}\nexport SERVER_JVMFLAGS=\"$SERVER_JVMFLAGS -Djava.security.auth.login.config={{zk_server_jaas_file}}\"\nexport CLIENT_JVMFLAGS=\"$CLIENT_JVMFLAGS -Djava.security.auth.login.config={{zk_client_jaas_file}}\"\n{% endif %}"
        },
        "webhcat-site": {
            "templeton.hcat.home": "hive.tar.gz/hive/hcatalog",
            "templeton.jar": "/usr/hdp/current/hive-webhcat/share/webhcat/svr/lib/hive-webhcat-*.jar",
            "templeton.sqoop.home": "sqoop.tar.gz/sqoop",
            "templeton.storage.class": "org.apache.hive.hcatalog.templeton.tool.ZooKeeperStorage",
            "templeton.sqoop.archive": "hdfs:///hdp/apps/${hdp.version}/sqoop/sqoop.tar.gz",
            "templeton.hive.archive": "hdfs:///hdp/apps/${hdp.version}/hive/hive.tar.gz",
            "templeton.streaming.jar": "hdfs:///hdp/apps/${hdp.version}/mapreduce/hadoop-streaming.jar",
            "templeton.libjars": "/usr/hdp/current/zookeeper-client/zookeeper.jar",
            "templeton.hadoop": "/usr/hdp/current/hadoop-client/bin/hadoop",
            "templeton.hive.home": "hive.tar.gz/hive",
            "templeton.sqoop.path": "sqoop.tar.gz/sqoop/bin/sqoop",
            "templeton.hcat": "/usr/hdp/current/hive-client/bin/hcat",
            "templeton.pig.archive": "hdfs:///hdp/apps/${hdp.version}/pig/pig.tar.gz"
          },
        "pig-properties": {
            "content": "\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Pig default configuration file. All values can be overwritten by pig.properties and command line arguments.\n# see bin/pig -help\n\n# brief logging (no timestamps)\nbrief=false\n\n# debug level, INFO is default\ndebug=INFO\n\n# verbose print all log messages to screen (default to print only INFO and above to screen)\nverbose=false\n\n# exectype local|mapreduce, mapreduce is default\nexectype=mapreduce\n\n# Enable insertion of information about script into hadoop job conf \npig.script.info.enabled=true\n\n# Do not spill temp files smaller than this size (bytes)\npig.spill.size.threshold=5000000\n\n# EXPERIMENT: Activate garbage collection when spilling a file bigger than this size (bytes)\n# This should help reduce the number of files being spilled.\npig.spill.gc.activation.size=40000000\n\n# the following two parameters are to help estimate the reducer number\npig.exec.reducers.bytes.per.reducer=1000000000\npig.exec.reducers.max=999\n\n# Temporary location to store the intermediate data.\npig.temp.dir=/tmp/\n\n# Threshold for merging FRJoin fragment files\npig.files.concatenation.threshold=100\npig.optimistic.files.concatenation=false;\n\npig.disable.counter=false\n\n# Avoid pig failures when multiple jobs write to the same location\npig.location.check.strict=false\n\nhcat.bin=/usr/bin/hcat"
          },
        "pig-env" : {
          "content": "\nJAVA_HOME={{java64_home}}\nHADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\nif [ -d \"/usr/lib/tez\" ]; then\n  PIG_OPTS=\"$PIG_OPTS -Dmapreduce.framework.name=yarn\"\nfi"
        },
        "sqoop-env": {
           "content": "\n# Set Hadoop-specific environment variables here.\n\n#Set path to where bin/hadoop is available\n#Set path to where bin/hadoop is available\nexport HADOOP_HOME=${HADOOP_HOME:-{{hadoop_home}}}\n\n#set the path to where bin/hbase is available\nexport HBASE_HOME=${HBASE_HOME:-{{hbase_home}}}\n\n#Set the path to where bin/hive is available\nexport HIVE_HOME=${HIVE_HOME:-{{hive_home}}}\n\n#Set the path for where zookeper config dir is\nexport ZOOCFGDIR=${ZOOCFGDIR:-/etc/zookeeper/conf}\n\n# add libthrift in hive to sqoop class path first so hive imports work\nexport SQOOP_USER_CLASSPATH=\"`ls ${HIVE_HOME}/lib/libthrift-*.jar 2> /dev/null`:${SQOOP_USER_CLASSPATH}\""
        },
        "cluster-env": {
            "ignore_groupsusers_create": "false"
        },
        "capacity-scheduler": {
          "yarn.scheduler.capacity.maximum-am-resource-percent": "0.2",
          "yarn.scheduler.capacity.maximum-applications": "10000",
          "yarn.scheduler.capacity.root.acl_administer_queue": "*",
          "yarn.scheduler.capacity.root.capacity": "100",
          "yarn.scheduler.capacity.root.default.acl_administer_jobs": "*",
          "yarn.scheduler.capacity.root.default.acl_submit_applications": "*",
          "yarn.scheduler.capacity.root.default.capacity": "100",
          "yarn.scheduler.capacity.root.default.maximum-capacity": "100",
          "yarn.scheduler.capacity.root.default.state": "RUNNING",
          "yarn.scheduler.capacity.root.default.user-limit-factor": "1",
          "yarn.scheduler.capacity.root.queues": "default",
          "yarn.scheduler.capacity.root.accessible-node-labels.default.capacity": {"remove": "yes"},
          "yarn.scheduler.capacity.root.accessible-node-labels.default.maximum-capacity": {"remove": "yes"},
          "yarn.scheduler.capacity.resource-calculator": "org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator",
          "yarn.scheduler.capacity.default.minimum-user-limit-percent": "100",
          "yarn.scheduler.capacity.node-locality-delay": "40",
          "yarn.scheduler.capacity.root.default.user-limit-factor": "1",
          "yarn.scheduler.capacity.root.accessible-node-labels": "*",
          "yarn.scheduler.capacity.root.default-node-label-expression": " "
        },
        "hbase-env": {
          "content": "\n# Set environment variables here.\n\n# The java implementation to use. Java 1.6 required.\nexport JAVA_HOME={{java64_home}}\n\n# HBase Configuration directory\nexport HBASE_CONF_DIR=${HBASE_CONF_DIR:-{{hbase_conf_dir}}}\n\n# Extra Java CLASSPATH elements. Optional.\nexport HBASE_CLASSPATH=${HBASE_CLASSPATH}\n\n# The maximum amount of heap to use, in MB. Default is 1000.\n# export HBASE_HEAPSIZE=1000\n\n# Extra Java runtime options.\n# Below are what we set by default. May only work with SUN JVM.\n# For more on why as well as other possible settings,\n# see http://wiki.apache.org/hadoop/PerformanceTuning\nexport SERVER_GC_OPTS=\"-verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:{{log_dir}}/gc.log-`date +'%Y%m%d%H%M'`\"\n# Uncomment below to enable java garbage collection logging.\n# export HBASE_OPTS=\"$HBASE_OPTS -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:$HBASE_HOME/logs/gc-hbase.log\"\n\n# Uncomment and adjust to enable JMX exporting\n# See jmxremote.password and jmxremote.access in $JRE_HOME/lib/management to configure remote password access.\n# More details at: http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html\n#\n# export HBASE_JMX_BASE=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false\"\n# export HBASE_THRIFT_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10103\"\n# export HBASE_ZOOKEEPER_OPTS=\"$HBASE_JMX_BASE -Dcom.sun.management.jmxremote.port=10104\"\n\n# File naming hosts on which HRegionServers will run. $HBASE_HOME/conf/regionservers by default.\nexport HBASE_REGIONSERVERS=${HBASE_CONF_DIR}/regionservers\n\n# Extra ssh options. Empty by default.\n# export HBASE_SSH_OPTS=\"-o ConnectTimeout=1 -o SendEnv=HBASE_CONF_DIR\"\n\n# Where log files are stored. $HBASE_HOME/logs by default.\nexport HBASE_LOG_DIR={{log_dir}}\n\n# A string representing this instance of hbase. $USER by default.\n# export HBASE_IDENT_STRING=$USER\n\n# The scheduling priority for daemon processes. See 'man nice'.\n# export HBASE_NICENESS=10\n\n# The directory where pid files are stored. /tmp by default.\nexport HBASE_PID_DIR={{pid_dir}}\n\n# Seconds to sleep between slave commands. Unset by default. This\n# can be useful in large clusters, where, e.g., slave rsyncs can\n# otherwise arrive faster than the master can service them.\n# export HBASE_SLAVE_SLEEP=0.1\n\n# Tell HBase whether it should manage it's own instance of Zookeeper or not.\nexport HBASE_MANAGES_ZK=false\n\n{% if security_enabled %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log -Djava.security.auth.login.config={{client_jaas_config_file}}\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}} -Djava.security.auth.login.config={{master_jaas_config_file}}\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}} -Djava.security.auth.login.config={{regionserver_jaas_config_file}}\"\n{% else %}\nexport HBASE_OPTS=\"$HBASE_OPTS -XX:+UseConcMarkSweepGC -XX:ErrorFile={{log_dir}}/hs_err_pid%p.log\"\nexport HBASE_MASTER_OPTS=\"$HBASE_MASTER_OPTS -Xmx{{master_heapsize}}\"\nexport HBASE_REGIONSERVER_OPTS=\"$HBASE_REGIONSERVER_OPTS -Xmn{{regionserver_xmn_size}} -XX:CMSInitiatingOccupancyFraction=70  -Xms{{regionserver_heapsize}} -Xmx{{regionserver_heapsize}}\"\n{% endif %}"
        },
        "mapred-site": {
          "hadoop.job.history.location": {"remove": "yes"},
          "hadoop.job.history.user.location": {"remove": "yes"},
          "io.sort.record.percent": {"remove": "yes"},
          "jetty.connector": {"remove": "yes"},
          "mapred.child.java.opts": {"remove": "yes"},
          "mapred.child.root.logger": {"remove": "yes"},
          "mapred.create.symlink": {"remove": "yes"},
          "mapred.fairscheduler.allocation.file": {"remove": "yes"},
          "mapred.fairscheduler.assignmultiple": {"remove": "yes"},
          "mapreduce.job.priority": {"remove": "yes"},
          "mapred.jobtracker.blacklist.fault-bucket-width": {"remove": "yes"},
          "mapred.jobtracker.blacklist.fault-timeout-window": {"remove": "yes"},
          "mapred.jobtracker.completeuserjobs.maximum": {"remove": "yes"},
          "mapred.jobtracker.job.history.block.size": {"remove": "yes"},
          "mapred.jobtracker.retirejob.check": {"remove": "yes"},
          "mapred.jobtracker.retirejob.interval": {"remove": "yes"},
          "mapred.jobtracker.taskScheduler": {"remove": "yes"},
          "mapred.permissions.supergroup": {"remove": "yes"},
          "mapred.queue.names": {"remove": "yes"},
          "mapreduce.cluster.acls.enabled": {"remove": "yes"},
          "mapreduce.cluster.local.dir": {"remove": "yes"},
          "mapreduce.cluster.mapmemory.mb": {"remove": "yes"},
          "mapreduce.cluster.permissions.supergroup": {"remove": "yes"},
          "mapreduce.cluster.reducememory.mb": {"remove": "yes"},
          "mapreduce.cluster.temp.dir": {"remove": "yes"},
          "mapreduce.jobtracker.jobinit.threads": {"remove": "yes"},
          "mapreduce.jobtracker.permissions.supergroup": {"remove": "yes"},
          "mapreduce.job.cache.symlink.create": {"remove": "yes"},
          "mapreduce.job.speculative.slownodethreshold": {"remove": "yes"},
          "mapreduce.job.userlog.retain.hours": {"remove": "yes"},
          "mapreduce.admin.map.child.java.opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
          "mapreduce.admin.reduce.child.java.opts": "-server -XX:NewRatio=8 -Djava.net.preferIPv4Stack=true -Dhdp.version=${hdp.version}",
          "mapreduce.admin.user.env": "LD_LIBRARY_PATH=/usr/hdp/${hdp.version}/hadoop/lib/native:/usr/hdp/${hdp.version}/hadoop/lib/native/Linux-amd64-64",
          "mapreduce.am.max-attempts": "2",
          "mapreduce.application.classpath": "$PWD/mr-framework/hadoop/share/hadoop/mapreduce/*:$PWD/mr-framework/hadoop/share/hadoop/mapreduce/lib/*:$PWD/mr-framework/hadoop/share/hadoop/common/*:$PWD/mr-framework/hadoop/share/hadoop/common/lib/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/*:$PWD/mr-framework/hadoop/share/hadoop/yarn/lib/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/*:$PWD/mr-framework/hadoop/share/hadoop/hdfs/lib/*:$PWD/mr-framework/hadoop/share/hadoop/tools/lib/*:/usr/hdp/${hdp.version}/hadoop/lib/hadoop-lzo-0.6.0.${hdp.version}.jar:/etc/hadoop/conf/secure",
          "mapreduce.fileoutputcommitter.marksuccessfuljobs": {"remove": "yes"},
          "mapreduce.framework.name": "yarn",
          "mapreduce.history.server.embedded": {"remove": "yes"},
          "mapreduce.history.server.http.address": {"remove": "yes"},
          "apreduce.job.committer.setup.cleanup.needed": {"remove": "yes"},
          "mapreduce.job.jvm.numtasks": {"remove": "yes"},
          "mapreduce.jobhistory.address": {
            "value": "{JOBHISTORY_HOST}:10020",
            "template": "yes"
          },
          "mapreduce.jobhistory.done-dir": "/mr-history/done",
          "mapreduce.jobhistory.intermediate-done-dir": "/mr-history/tmp",
          "mapreduce.jobhistory.webapp.address": {
            "value": "{JOBHISTORY_HOST}:19888",
            "template": "yes"
          },
          "mapreduce.jobtracker.address": {"remove": "yes"},
          "mapreduce.jobtracker.blacklist.average.threshold": {"remove": "yes"},
          "mapreduce.jobtracker.expire.trackers.interval": {"remove": "yes"},
          "mapreduce.jobtracker.handler.count": {"remove": "yes"},
          "mapreduce.jobtracker.heartbeats.in.second": {"remove": "yes"},
          "mapreduce.jobtracker.hosts.exclude.filename": {"remove": "yes"},
          "mapreduce.jobtracker.hosts.filename": {"remove": "yes"},
          "mapreduce.jobtracker.http.address": {"remove": "yes"},
          "mapreduce.jobtracker.instrumentation": {"remove": "yes"},
          "mapreduce.jobtracker.jobhistory.block.size": {"remove": "yes"},
          "mapreduce.jobtracker.jobhistory.location": {"remove": "yes"},
          "mapreduce.jobtracker.jobhistory.lru.cache.size": {"remove": "yes"},
          "mapreduce.jobtracker.maxmapmemory.mb": {"remove": "yes"},
          "mapreduce.jobtracker.maxreducememory.mb": {"remove": "yes"},
          "mapreduce.jobtracker.maxtasks.perjob": {"remove": "yes"},
          "mapreduce.jobtracker.persist.jobstatus.active": {"remove": "yes"},
          "mapreduce.jobtracker.persist.jobstatus.dir": {"remove": "yes"},
          "mapreduce.jobtracker.persist.jobstatus.hours": {"remove": "yes"},
          "mapreduce.jobtracker.restart.recover": {"remove": "yes"},
          "mapreduce.jobtracker.retiredjobs.cache.size": {"remove": "yes"},
          "mapreduce.jobtracker.retirejobs": {"remove": "yes"},
          "mapreduce.jobtracker.split.metainfo.maxsize": {"remove": "yes"},
          "mapreduce.jobtracker.staging.root.dir": {"remove": "yes"},
          "mapreduce.jobtracker.system.dir": {"remove": "yes"},
          "mapreduce.jobtracker.taskcache.levels": {"remove": "yes"},
          "mapreduce.jobtracker.taskscheduler": {"remove": "yes"},
          "mapreduce.jobtracker.taskscheduler.maxrunningtasks.perjob": {"remove": "yes"},
          "mapreduce.jobtracker.taskscheduler.taskalloc.capacitypad": {"remove": "yes"},
          "mapreduce.jobtracker.tasktracker.maxblacklists": {"remove": "yes"},
          "mapreduce.jobtracker.webinterface.trusted": {"remove": "yes"},
          "mapreduce.map.java.opts": "-Xmx546m",
          "mapreduce.map.log.level": "INFO",
          "mapreduce.map.memory.mb": "1024",
          "mapreduce.map.output.compress": "false",
          "mapreduce.map.output.compress.codec": {"remove": "yes"},
          "mapreduce.map.sort.spill.percent": "0.7",
          "mapreduce.output.fileoutputformat.compress": "false",
          "mapreduce.reduce.input.limit": {"remove": "yes"},
          "mapreduce.reduce.java.opts": "-Xmx756m",
          "mapreduce.reduce.log.level": "INFO",
          "mapreduce.reduce.memory.mb": "1024",
          "mapreduce.reduce.merge.inmem.threshold": {"remove": "yes"},
          "mapreduce.shuffle.port": "13562",
          "mapreduce.task.timeout": "300000",
          "mapreduce.task.userlog.limit.kb": {"remove": "yes"},
          "mapreduce.tasktracker.cache.local.size": {"remove": "yes"},
          "mapreduce.tasktracker.contention.tracking": {"remove": "yes"},
          "mapreduce.tasktracker.dns.interface": {"remove": "yes"},
          "mapreduce.tasktracker.dns.nameserver": {"remove": "yes"},
          "mapreduce.tasktracker.events.batchsize": {"remove": "yes"},
          "mapreduce.tasktracker.group": {"remove": "yes"},
          "mapreduce.tasktracker.healthchecker.interval": {"remove": "yes"},
          "mapreduce.tasktracker.healthchecker.script.args": {"remove": "yes"},
          "mapreduce.tasktracker.healthchecker.script.path": {"remove": "yes"},
          "mapreduce.tasktracker.healthchecker.script.timeout": {"remove": "yes"},
          "mapreduce.tasktracker.host.name": {"remove": "yes"},
          "mapreduce.tasktracker.http.address": {"remove": "yes"},
          "mapreduce.tasktracker.http.threads": {"remove": "yes"},
          "mapreduce.tasktracker.indexcache.mb": {"remove": "yes"},
          "mapreduce.tasktracker.instrumentation": {"remove": "yes"},
          "mapreduce.tasktracker.local.dir.minspacekill": {"remove": "yes"},
          "mapreduce.tasktracker.local.dir.minspacestart": {"remove": "yes"},
          "mapreduce.tasktracker.map.tasks.maximum": {"remove": "yes"},
          "mapreduce.tasktracker.net.static.resolutions": {"remove": "yes"},
          "mapreduce.tasktracker.reduce.tasks.maximum": {"remove": "yes"},
          "mapreduce.tasktracker.report.address": {"remove": "yes"},
          "mapreduce.tasktracker.resourcecalculatorplugin": {"remove": "yes"},
          "mapreduce.tasktracker.taskcontroller": {"remove": "yes"},
          "mapreduce.tasktracker.taskmemorymanager.monitoringinterval": {"remove": "yes"},
          "mapreduce.tasktracker.tasks.sleeptimebeforesigkill": {"remove": "yes"},
          "yarn.app.mapreduce.am.admin-command-opts": "-Dhdp.version=${hdp.version}",
          "yarn.app.mapreduce.am.command-opts": "-Xmx312m -Dhdp.version=${hdp.version}",
          "yarn.app.mapreduce.am.log.level": "INFO",
          "yarn.app.mapreduce.am.resource.mb": "512",
          "yarn.app.mapreduce.am.staging-dir": "/user",
          "mapreduce.reduce.shuffle.fetch.retry.enabled": "1",
          "mapreduce.application.framework.path": "/hdp/apps/${hdp.version}/mapreduce/mapreduce.tar.gz#mr-framework",
          "mapreduce.reduce.shuffle.fetch.retry.timeout-ms": "30000",
          "mapreduce.reduce.shuffle.fetch.retry.interval-ms": "1000",
          "mapreduce.job.emit-timeline-data": "false",
          "mapreduce.jobhistory.bind-host": "0.0.0.0"
        },
        "yarn-env": {
          "apptimelineserver_heapsize": "1024",
          "content": "\nexport HADOOP_YARN_HOME={{hadoop_yarn_home}}\nexport YARN_LOG_DIR={{yarn_log_dir_prefix}}/$USER\nexport YARN_PID_DIR={{yarn_pid_dir_prefix}}/$USER\nexport HADOOP_LIBEXEC_DIR={{hadoop_libexec_dir}}\nexport JAVA_HOME={{java64_home}}\n\n# User for YARN daemons\nexport HADOOP_YARN_USER=${HADOOP_YARN_USER:-yarn}\n\n# resolve links - $0 may be a softlink\nexport YARN_CONF_DIR=\"${YARN_CONF_DIR:-$HADOOP_YARN_HOME/conf}\"\n\n# some Java parameters\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\nif [ \"$JAVA_HOME\" != \"\" ]; then\n  #echo \"run java in $JAVA_HOME\"\n  JAVA_HOME=$JAVA_HOME\nfi\n\nif [ \"$JAVA_HOME\" = \"\" ]; then\n  echo \"Error: JAVA_HOME is not set.\"\n  exit 1\nfi\n\nJAVA=$JAVA_HOME/bin/java\nJAVA_HEAP_MAX=-Xmx1000m\n\n# For setting YARN specific HEAP sizes please use this\n# Parameter and set appropriately\nYARN_HEAPSIZE={{yarn_heapsize}}\n\n# check envvars which might override default args\nif [ \"$YARN_HEAPSIZE\" != \"\" ]; then\n  JAVA_HEAP_MAX=\"-Xmx\"\"$YARN_HEAPSIZE\"\"m\"\nfi\n\n# Resource Manager specific parameters\n\n# Specify the max Heapsize for the ResourceManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_RESOURCEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_RESOURCEMANAGER_HEAPSIZE={{resourcemanager_heapsize}}\n\n# Specify the JVM options to be used when starting the ResourceManager.\n# These options will be appended to the options specified as YARN_OPTS\n# and therefore may override any similar flags set in YARN_OPTS\n#export YARN_RESOURCEMANAGER_OPTS=\n\n# Node Manager specific parameters\n\n# Specify the max Heapsize for the NodeManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1000.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_NODEMANAGER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_NODEMANAGER_HEAPSIZE={{nodemanager_heapsize}}\n\n# Specify the max Heapsize for the HistoryManager using a numerical value\n# in the scale of MB. For example, to specify an jvm option of -Xmx1000m, set\n# the value to 1024.\n# This value will be overridden by an Xmx setting specified in either YARN_OPTS\n# and/or YARN_HISTORYSERVER_OPTS.\n# If not specified, the default value will be picked from either YARN_HEAPMAX\n# or JAVA_HEAP_MAX with YARN_HEAPMAX as the preferred option of the two.\nexport YARN_TIMELINESERVER_HEAPSIZE={{apptimelineserver_heapsize}}\n\n# Specify the JVM options to be used when starting the NodeManager.\n# These options will be appended to the options specified as YARN_OPTS\n# and therefore may override any similar flags set in YARN_OPTS\n#export YARN_NODEMANAGER_OPTS=\n\n# so that filenames w/ spaces are handled correctly in loops below\nIFS=\n\n\n# default log directory and file\nif [ \"$YARN_LOG_DIR\" = \"\" ]; then\n  YARN_LOG_DIR=\"$HADOOP_YARN_HOME/logs\"\nfi\nif [ \"$YARN_LOGFILE\" = \"\" ]; then\n  YARN_LOGFILE='yarn.log'\nfi\n\n# default policy file for service-level authorization\nif [ \"$YARN_POLICYFILE\" = \"\" ]; then\n  YARN_POLICYFILE=\"hadoop-policy.xml\"\nfi\n\n# restore ordinary behaviour\nunset IFS\n\n\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.log.dir=$YARN_LOG_DIR\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.log.dir=$YARN_LOG_DIR\"\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.log.file=$YARN_LOGFILE\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.log.file=$YARN_LOGFILE\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.home.dir=$YARN_COMMON_HOME\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.id.str=$YARN_IDENT_STRING\"\nYARN_OPTS=\"$YARN_OPTS -Dhadoop.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\nYARN_OPTS=\"$YARN_OPTS -Dyarn.root.logger=${YARN_ROOT_LOGGER:-INFO,console}\"\nif [ \"x$JAVA_LIBRARY_PATH\" != \"x\" ]; then\n  YARN_OPTS=\"$YARN_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH\"\nfi\nYARN_OPTS=\"$YARN_OPTS -Dyarn.policy.file=$YARN_POLICYFILE\"",
          "min_user_id": "1000",
          "nodemanager_heapsize": "1024",
          "resourcemanager_heapsize": "1024",
          "yarn_heapsize": "1024",
          "yarn_log_dir_prefix": "/var/log/hadoop-yarn",
          "yarn_pid_dir_prefix": "/var/run/hadoop-yarn",
          "yarn_user": "yarn"
        },
        "oozie-env": {
          "content": "\n#!/bin/bash\n\nif [ -d \"/usr/lib/bigtop-tomcat\" ]; then\n  export OOZIE_CONFIG=${OOZIE_CONFIG:-/etc/oozie/conf}\n  #export CATALINA_BASE=${CATALINA_BASE:-{{oozie_server_dir}}}\n  export CATALINA_TMPDIR=${CATALINA_TMPDIR:-/var/tmp/oozie}\n  export OOZIE_CATALINA_HOME=/usr/lib/bigtop-tomcat\nfi\n\n#Set JAVA HOME\nexport JAVA_HOME={{java_home}}\n\nexport JRE_HOME=${JAVA_HOME}\n\n# Set Oozie specific environment variables here.\n\n# Settings for the Embedded Tomcat that runs Oozie\n# Java System properties for Oozie should be specified in this variable\n#\n# export CATALINA_OPTS=\n\n# Oozie configuration file to load from Oozie configuration directory\n#\n# export OOZIE_CONFIG_FILE=oozie-site.xml\n\n# Oozie logs directory\n#\nexport OOZIE_LOG={{oozie_log_dir}}\n\n# Oozie pid directory\n#\nexport CATALINA_PID={{pid_file}}\n\n#Location of the data for oozie\nexport OOZIE_DATA={{oozie_data_dir}}\n\n# Oozie Log4J configuration file to load from Oozie configuration directory\n#\n# export OOZIE_LOG4J_FILE=oozie-log4j.properties\n\n# Reload interval of the Log4J configuration file, in seconds\n#\n# export OOZIE_LOG4J_RELOAD=10\n\n# The port Oozie server runs\n#\nexport OOZIE_HTTP_PORT={{oozie_server_port}}\n\n# The admin port Oozie server runs\n#\nexport OOZIE_ADMIN_PORT={{oozie_server_admin_port}}\n\n# The host name Oozie server runs on\n#\n# export OOZIE_HTTP_HOSTNAME=`hostname -f`\n\n# The base URL for callback URLs to Oozie\n#\n# export OOZIE_BASE_URL=\"http://${OOZIE_HTTP_HOSTNAME}:${OOZIE_HTTP_PORT}/oozie\"\nexport JAVA_LIBRARY_PATH={{hadoop_lib_home}}/native/Linux-amd64-64\n\n# At least 1 minute of retry time to account for server downtime during\n# upgrade/downgrade\nexport OOZIE_CLIENT_OPTS=\"${OOZIE_CLIENT_OPTS} -Doozie.connection.retry.count=5 \"\n\n# This is needed so that Oozie does not run into OOM or GC Overhead limit\n# exceeded exceptions. If the oozie server is handling large number of\n# workflows/coordinator jobs, the memory settings may need to be revised\nexport CATALINA_OPTS=\"${CATALINA_OPTS} -Xmx2048m -XX:MaxPermSize=256m \"",
          "oozie_heapsize": "2048m",
          "oozie_permsize": "256m",
          "oozie_ambari_database": "MySQL",
          "oozie_existing_mysql_host": "",
          "oozie_existing_oracle_host": "",
          "oozie_existing_postgresql_host": ""
        },
        "yarn-log4j":{
          "content": "\n#Relative to Yarn Log Dir Prefix\nyarn.log.dir=.\n#\n# Job Summary Appender\n#\n# Use following logger to send summary to separate file defined by\n# hadoop.mapreduce.jobsummary.log.file rolled daily:\n# hadoop.mapreduce.jobsummary.logger=INFO,JSA\n#\nhadoop.mapreduce.jobsummary.logger=${hadoop.root.logger}\nhadoop.mapreduce.jobsummary.log.file=hadoop-mapreduce.jobsummary.log\nlog4j.appender.JSA=org.apache.log4j.DailyRollingFileAppender\n# Set the ResourceManager summary log filename\nyarn.server.resourcemanager.appsummary.log.file=hadoop-mapreduce.jobsummary.log\n# Set the ResourceManager summary log level and appender\nyarn.server.resourcemanager.appsummary.logger=${hadoop.root.logger}\n#yarn.server.resourcemanager.appsummary.logger=INFO,RMSUMMARY\n\n# To enable AppSummaryLogging for the RM,\n# set yarn.server.resourcemanager.appsummary.logger to\n# LEVEL,RMSUMMARY in hadoop-env.sh\n\n# Appender for ResourceManager Application Summary Log\n# Requires the following properties to be set\n#    - hadoop.log.dir (Hadoop Log directory)\n#    - yarn.server.resourcemanager.appsummary.log.file (resource manager app summary log filename)\n#    - yarn.server.resourcemanager.appsummary.logger (resource manager app summary log level and appender)\nlog4j.appender.RMSUMMARY=org.apache.log4j.RollingFileAppender\nlog4j.appender.RMSUMMARY.File=${yarn.log.dir}/${yarn.server.resourcemanager.appsummary.log.file}\nlog4j.appender.RMSUMMARY.MaxFileSize=256MB\nlog4j.appender.RMSUMMARY.MaxBackupIndex=20\nlog4j.appender.RMSUMMARY.layout=org.apache.log4j.PatternLayout\nlog4j.appender.RMSUMMARY.layout.ConversionPattern=%d{ISO8601} %p %c{2}: %m%n\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.appender.JSA.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n\nlog4j.appender.JSA.DatePattern=.yyyy-MM-dd\nlog4j.appender.JSA.layout=org.apache.log4j.PatternLayout\nlog4j.logger.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=${yarn.server.resourcemanager.appsummary.logger}\nlog4j.additivity.org.apache.hadoop.yarn.server.resourcemanager.RMAppManager$ApplicationSummary=false"
        },
        "yarn-site": {
          "hadoop.registry.rm.enabled": "false",
          "hadoop.registry.zk.quorum": {
            "value": "{ZOOKEEPER_QUORUM}",
            "template": "yes"
          },
          "yarn.acl.enable": "false",
          "yarn.admin.acl": "",
          "yarn.application.classpath": "$HADOOP_CONF_DIR,/usr/hdp/current/hadoop-client/*,/usr/hdp/current/hadoop-client/lib/*,/usr/hdp/current/hadoop-hdfs-client/*,/usr/hdp/current/hadoop-hdfs-client/lib/*,/usr/hdp/current/hadoop-yarn-client/*,/usr/hdp/current/hadoop-yarn-client/lib/*",
          "yarn.client.nodemanager-connect.max-wait-ms": "900000",
          "yarn.client.nodemanager-connect.retry-interval-ms": "10000",
          "yarn.log-aggregation-enable": "true",
          "yarn.log-aggregation.retain-seconds": "2592000",
          "yarn.log.server.url": {
           "value": "http://{JOBHISTORY_HOST}:19888/jobhistory/logs",
           "template": "yes"
          },
          "yarn.node-labels.fs-store.retry-policy-spec": "2000, 500",
          "yarn.node-labels.fs-store.root-dir": "/system/yarn/node-labels",
          "yarn.node-labels.manager-class": "org.apache.hadoop.yarn.server.resourcemanager.nodelabels.MemoryRMNodeLabelsManager",
          "yarn.nodemanager.address": "0.0.0.0:45454",
          "yarn.nodemanager.admin-env": "MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX",
          "yarn.nodemanager.aux-services": "mapreduce_shuffle",
          "yarn.nodemanager.aux-services.mapreduce_shuffle.class": "org.apache.hadoop.mapred.ShuffleHandler",
          "yarn.nodemanager.bind-host": "0.0.0.0",
          "yarn.nodemanager.container-executor.class": "org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor",
          "yarn.nodemanager.container-monitor.interval-ms": "3000",
          "yarn.nodemanager.delete.debug-delay-sec": "0",
          "yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage": "90",
          "yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb": "1000",
          "yarn.nodemanager.disk-health-checker.min-healthy-disks": "0.25",
          "yarn.nodemanager.health-checker.interval-ms": "135000",
          "yarn.nodemanager.health-checker.script.timeout-ms": "60000",
          "yarn.nodemanager.linux-container-executor.cgroups.hierarchy": "hadoop-yarn",
          "yarn.nodemanager.linux-container-executor.cgroups.mount": "false",
          "yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage": "false",
          "yarn.nodemanager.linux-container-executor.group": "hadoop",
          "yarn.nodemanager.linux-container-executor.resources-handler.class": "org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler",
          "yarn.nodemanager.local-dirs": "/hadoop/yarn/local",
          "yarn.nodemanager.log-aggregation.compression-type": "gz",
          "yarn.nodemanager.log-aggregation.debug-enabled": "false",
          "yarn.nodemanager.log-aggregation.num-log-files-per-app": "30",
          "yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds": "-1",
          "yarn.nodemanager.log-dirs": "/hadoop/yarn/log",
          "yarn.nodemanager.log.retain-seconds": "604800",
          "yarn.nodemanager.recovery.dir": "/var/log/hadoop-yarn/nodemanager/recovery-state",
          "yarn.nodemanager.recovery.enabled": "false",
          "yarn.nodemanager.remote-app-log-dir": "/app-logs",
          "yarn.nodemanager.remote-app-log-dir-suffix": "logs",
          "yarn.nodemanager.resource.cpu-vcores": "1",
          "yarn.nodemanager.resource.memory-mb": "2048",
          "yarn.nodemanager.resource.percentage-physical-cpu-limit": "100",
          "yarn.nodemanager.vmem-check-enabled": "false",
          "yarn.nodemanager.vmem-pmem-ratio": "2.1",
          "yarn.resourcemanager.address": {
            "value": "{RESOURCEMANAGER_HOST}:8050",
            "template": "yes"
          },
          "yarn.resourcemanager.admin.address": {
            "value": "{RESOURCEMANAGER_HOST}:8141",
            "template": "yes"
          },
          "yarn.resourcemanager.am.max-attempts": "2",
          "yarn.resourcemanager.bind-host": "0.0.0.0",
          "yarn.resourcemanager.connect.max-wait.ms": "900000",
          "yarn.resourcemanager.connect.retry-interval.ms": "30000",
          "yarn.resourcemanager.fs.state-store.retry-policy-spec": "2000, 500",
          "yarn.resourcemanager.fs.state-store.uri": " ",
          "yarn.resourcemanager.ha.enabled": "false",
          "yarn.resourcemanager.hostname": {
            "value": "{RESOURCEMANAGER_HOST}",
            "template": "yes"
          },
          "yarn.resourcemanager.nodes.exclude-path": "/etc/hadoop/conf/yarn.exclude",
          "yarn.resourcemanager.recovery.enabled": "false",
          "yarn.resourcemanager.resource-tracker.address": {
            "value": "{RESOURCEMANAGER_HOST}:8025",
            "template": "yes"
          },
          "yarn.resourcemanager.scheduler.address": {
            "value": "{RESOURCEMANAGER_HOST}:8030",
            "template": "yes"
          },
          "yarn.resourcemanager.scheduler.class": "org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler",
          "yarn.resourcemanager.state-store.max-completed-applications": "${yarn.resourcemanager.max-completed-applications}",
          "yarn.resourcemanager.store.class": "org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore",
          "yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size": "10",
          "yarn.resourcemanager.system-metrics-publisher.enabled": "true",
          "yarn.resourcemanager.webapp.address": {
            "value": "{RESOURCEMANAGER_HOST}:8088",
            "template": "yes"
          },
          "yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled": "false",
          "yarn.resourcemanager.work-preserving-recovery.enabled": "false",
          "yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms": "10000",
          "yarn.resourcemanager.zk-acl": "world:anyone:rwcda",
          "yarn.resourcemanager.zk-address": "localhost:2181",
          "yarn.resourcemanager.zk-num-retries": "1000",
          "yarn.resourcemanager.zk-retry-interval-ms": "1000",
          "yarn.resourcemanager.zk-state-store.parent-path": "/rmstore",
          "yarn.resourcemanager.zk-timeout-ms": "10000",
          "yarn.scheduler.maximum-allocation-mb": "2048",
          "yarn.scheduler.minimum-allocation-mb": "682",
          "yarn.timeline-service.address": {
            "value": "{RESOURCEMANAGER_HOST}:10200",
            "template": "yes"
          },
          "yarn.timeline-service.bind-host": "0.0.0.0",
          "yarn.timeline-service.client.max-retries": "30",
          "yarn.timeline-service.client.retry-interval-ms": "1000",
          "yarn.timeline-service.enabled": "true",
          "yarn.timeline-service.generic-application-history.store-class": "org.apache.hadoop.yarn.server.applicationhistoryservice.NullApplicationHistoryStore",
          "yarn.timeline-service.http-authentication.simple.anonymous.allowed": "true",
          "yarn.timeline-service.http-authentication.type": "simple",
          "yarn.timeline-service.leveldb-timeline-store.path": "/hadoop/yarn/timeline",
          "yarn.timeline-service.leveldb-timeline-store.read-cache-size": "104857600",
          "yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size": "10000",
          "yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size": "10000",
          "yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms": "300000",
          "yarn.timeline-service.store-class": "org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore",
          "yarn.timeline-service.ttl-enable": "true",
          "yarn.timeline-service.ttl-ms": "2678400000",
          "yarn.timeline-service.webapp.address": {
            "value": "{RESOURCEMANAGER_HOST}:8188",
            "template": "yes"
          },
          "yarn.timeline-service.webapp.https.address": {
            "value": "{RESOURCEMANAGER_HOST}:8190",
            "template": "yes"
          }
        },
        "hdfs-site": {
          "dfs.block.local-path-access.user": {"remove": "yes"},
          "dfs.client.read.shortcircuit": "true",
          "dfs.client.read.shortcircuit.streams.cache.size": "4096",
          "dfs.datanode.du.pct": {"remove": "yes"},
          "dfs.datanode.du.reserved": "1073741824",
          "dfs.datanode.socket.write.timeout": {"remove": "yes"},
          "dfs.domain.socket.path": "/var/lib/hadoop-hdfs/dn_socket",
          "dfs.hosts": {"remove": "yes"},
          "dfs.journalnode.http-address": "0.0.0.0:8480",
          "dfs.secondary.https.port": {"remove": "yes"},
          "dfs.web.ugi": {"remove": "yes"},
          "fs.permissions.umask-mode": "022",
          "ipc.server.max.response.size": {"remove": "yes"},
          "ipc.server.read.threadpool.size": {"remove": "yes"},
          "dfs.support.append": "true",
          "dfs.namenode.checkpoint.txns": "1000000",
          "dfs.namenode.checkpoint.period": "21600",
          "dfs.namenode.checkpoint.edits.dir": "${dfs.namenode.checkpoint.dir}",
          "dfs.namenode.startup.delay.block.deletion.sec": "3600",
          "dfs.http.policy": "HTTP_ONLY",
          "dfs.namenode.name.dir.restore": "true",
          "dfs.datanode.max.transfer.threads": "16384",
          "dfs.namenode.checkpoint.dir": "/hadoop/hdfs/namesecondary",
          "dfs.namenode.checkpoint.period": "21600"
        },
        "core-site": {
          "fs.checkpoint.size": {"remove": "yes"},
          "hadoop.security.auth_to_local": "\n        RULE:[2:$1@$0]([rn]m@.*)s/.*/yarn/\n        RULE:[2:$1@$0](jhs@.*)s/.*/mapred/\n        RULE:[2:$1@$0]([nd]n@.*)s/.*/hdfs/\n        RULE:[2:$1@$0](hm@.*)s/.*/hbase/\n        RULE:[2:$1@$0](rs@.*)s/.*/hbase/\n        DEFAULT\n    ",
          "hadoop.security.authentication": "simple",
          "hadoop.security.authorization": "false",
          "io.compression.codec.lzo.class": {"remove": "yes"},
          "io.compression.codecs": "org.apache.hadoop.io.compress.GzipCodec,org.apache.hadoop.io.compress.DefaultCodec,org.apache.hadoop.io.compress.SnappyCodec"
        },
        "mapred-env": {
          "jtnode_heapsize": {"remove": "yes"},
          "jtnode_opt_maxnewsize": {"remove": "yes"},
          "jtnode_opt_newsize": {"remove": "yes"},
          "lzo_enabled": {"remove": "yes"},
          "rca_enabled": {"remove": "yes"},
          "rca_properties": {"remove": "yes"},
          "snappy_enabled": {"remove": "yes"},
          "ttnode_heapsize": {"remove": "yes"},
          "content": "\n# export JAVA_HOME=/home/y/libexec/jdk1.6.0/\n\nexport HADOOP_JOB_HISTORYSERVER_HEAPSIZE={{jobhistory_heapsize}}\n\nexport HADOOP_MAPRED_ROOT_LOGGER=INFO,RFA\n\n#export HADOOP_JOB_HISTORYSERVER_OPTS=\n#export HADOOP_MAPRED_LOG_DIR=\"\" # Where log files are stored.  $HADOOP_MAPRED_HOME/logs by default.\n#export HADOOP_JHS_LOGGER=INFO,RFA # Hadoop JobSummary logger.\n#export HADOOP_MAPRED_PID_DIR= # The pid files are stored. /tmp by default.\n#export HADOOP_MAPRED_IDENT_STRING= #A string representing this instance of hadoop. $USER by default\n#export HADOOP_MAPRED_NICENESS= #The scheduling priority for daemons. Defaults to 0.\nexport HADOOP_OPTS=\"-Dhdp.version=$HDP_VERSION $HADOOP_OPTS\"",
          "jobhistory_heapsize": "900",
          "mapred_log_dir_prefix": "/var/log/hadoop-mapreduce",
          "mapred_pid_dir_prefix": "/var/run/hadoop-mapreduce",
          "mapred_user": "mapred"
        },
        "hive-site": {
          "fs.hdfs.impl.disable.cache": {"remove":"yes"},
          "fs.file.impl.disable.cache": {"remove":"yes"},
          "hive.security.authorization.manager": "org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdConfOnlyAuthorizerFactory",
          "hive.security.metastore.authorization.manager": {"remove":"yes"},
          "hive.security.authenticator.manager": "org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator",
          "hive.fetch.task.aggr": "false",
          "hive.execution.engine": "mr",
          "hive.tez.java.opts": "-server -Xmx546m -Djava.net.preferIPv4Stack=true -XX:NewRatio=8 -XX:+UseNUMA -XX:+UseParallelGC -XX:+PrintGCDetails -verbose:gc -XX:+PrintGCTimeStamps",
          "hive.vectorized.groupby.maxentries": "100000",
          "hive.server2.table.type.mapping": "CLASSIC",
          "hive.tez.min.partition.factor": "0.25",
          "hive.tez.cpu.vcores": "-1",
          "hive.compute.query.using.stats": "true",
          "hive.stats.dbclass": "fs",
          "hive.tez.auto.reducer.parallelism": "false",
          "hive.server2.thrift.http.path": "cliservice",
          "hive.metastore.authorization.storage.checks": "false",
          "hive.exec.post.hooks": "org.apache.hadoop.hive.ql.hooks.ATSHook",
          "hive.zookeeper.namespace": "hive_zookeeper_namespace",
          "hive.cbo.enable": "true",
          "hive.optimize.index.filter": "true",
          "hive.optimize.bucketmapjoin": "true",
          "hive.mapjoin.bucket.cache.size": "10000",
          "hive.limit.optimize.enable": "true",
          "hive.fetch.task.conversion.threshold": "1073741824",
          "hive.exec.max.dynamic.partitions": "5000",
          "hive.metastore.sasl.enabled": "false",
          "hive.txn.manager": "org.apache.hadoop.hive.ql.lockmgr.DummyTxnManager",
          "hive.optimize.constant.propagation": "true",
          "hive.exec.submitviachild": "false",
          "hive.metastore.kerberos.principal": "hive/_HOST@EXAMPLE.COM",
          "hive.txn.max.open.batch": "1000",
          "hive.exec.compress.output": "false",
          "hive.merge.size.per.task": "256000000",
          "hive.heapsize": "1024",
          "hive.security.authenticator.manager": "org.apache.hadoop.hive.ql.security.ProxyUserAuthenticator",
          "hive.merge.mapfiles": "true",
          "hive.exec.parallel.thread.number": "8",
          "hive.mapjoin.optimized.hashtable": "true",
          "hive.optimize.metadataonly": "true",
          "hive.tez.dynamic.partition.pruning.max.event.size": "1048576",
          "hive.server2.thrift.max.worker.threads": "500",
          "hive.optimize.sort.dynamic.partition": "false",
          "hive.server2.enable.doAs": "true",
          "hive.metastore.pre.event.listeners": "org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener",
          "hive.metastore.failure.retries": "24",
          "hive.server2.enable.impersonation": "true",
          "hive.merge.smallfiles.avgsize": "16000000",
          "hive.tez.max.partition.factor": "2.0",
          "hive.server2.transport.mode": "binary",
          "hive.tez.container.size": "682",
          "hive.zookeeper.client.port": "2181",
          "hive.vectorized.groupby.checkinterval": "4096",
          "hive.cluster.delegation.token.store.class": "org.apache.hadoop.hive.thrift.ZooKeeperTokenStore",
          "hive.cluster.delegation.token.store.zookeeper.znode": "/hive/cluster/delegation",
          "javax.jdo.option.ConnectionPassword": "1",
          "hive.exec.max.created.files": "100000",
          "hive.map.aggr.hash.min.reduction": "0.5",
          "hive.server2.thrift.http.port": "10001",
          "hive.orc.splits.include.file.footer": "false",
          "hive.exec.pre.hooks": "org.apache.hadoop.hive.ql.hooks.ATSHook",
          "hive.merge.orcfile.stripe.level": "true",
          "hive.exec.failure.hooks": "org.apache.hadoop.hive.ql.hooks.ATSHook",
          "hive.server2.allow.user.substitution": "true",
          "hive.vectorized.execution.reduce.enabled": "false",
          "hive.metastore.connect.retries": "24",
          "hive.metastore.server.max.threads": "100000",
          "hive.exec.orc.compression.strategy": "SPEED",
          "hive.optimize.reducededuplication.min.reducer": "4",
          "hive.enforce.sortmergebucketmapjoin": "true",
          "hive.auto.convert.join.noconditionaltask.size": "238026752",
          "javax.jdo.option.ConnectionUserName": "hive",
          "hive.tez.log.level": "INFO",
          "hive.compactor.delta.num.threshold": "10",
          "hive.exec.dynamic.partition": "true",
          "hive.server2.authentication": "NONE",
          "hive.stats.fetch.column.stats": "false",
          "hive.orc.compute.splits.num.threads": "10",
          "hive.tez.smb.number.waves": "0.5",
          "hive.convert.join.bucket.mapjoin.tez": "false",
          "hive.server2.logging.operation.log.location": "/tmp/hive/operation_logs",
          "hive.tez.input.format": "org.apache.hadoop.hive.ql.io.HiveInputFormat",
          "hive.exec.orc.default.compress": "ZLIB",
          "hive.support.concurrency": "false",
          "hive.compactor.check.interval": "300L",
          "hive.compactor.delta.pct.threshold": "0.1f",
          "hive.auto.convert.sortmerge.join.noconditionaltask": "true",
          "hive.optimize.mapjoin.mapreduce": "true",
          "hive.metastore.client.connect.retry.delay": "5s",
          "hive.prewarm.numcontainers": "10",
          "hive.vectorized.groupby.flush.percent": "0.1",
          "hive.server2.authentication.spnego.principal": "/etc/security/keytabs/spnego.service.keytab",
          "hive.security.metastore.authenticator.manager": "org.apache.hadoop.hive.ql.security.HadoopDefaultMetastoreAuthenticator",
          "hive.smbjoin.cache.rows": "10000",
          "hive.vectorized.groupby.maxentries": "100000",
          "hive.metastore.authorization.storage.checks": "false",
          "hive.exec.parallel.thread.number": "8",
          "hive.auto.convert.sortmerge.join.to.mapjoin": "false",
          "hive.cli.print.header": "false",
          "hive.cluster.delegation.token.store.zookeeper.connectString": {
            "value": "{ZOOKEEPER_QUORUM}",
            "template": "yes"
          },
          "hive.compactor.abortedtxn.threshold": "1000",
          "hive.compactor.initiator.on": "false",
          "hive.compactor.worker.threads": "0",
          "hive.compactor.worker.timeout": "86400L",
          "hive.conf.restricted.list": "hive.security.authenticator.manager,hive.security.authorization.manager,hive.users.in.admin.role",
          "hive.exec.compress.intermediate": "false",
          "hive.exec.dynamic.partition.mode": "nonstrict",
          "hive.exec.max.dynamic.partitions.pernode": "2000",
          "hive.exec.orc.default.stripe.size": "67108864",
          "hive.exec.parallel": "false",
          "hive.exec.reducers.bytes.per.reducer": "67108864",
          "hive.exec.reducers.max": "1009",
          "hive.exec.scratchdir": "/tmp/hive",
          "hive.exec.submit.local.task.via.child": "true",
          "hive.fetch.task.conversion": "more",
          "hive.limit.pushdown.memory.usage": "0.04",
          "hive.map.aggr.hash.force.flush.memory.threshold": "0.9",
          "hive.map.aggr.hash.percentmemory": "0.5",
          "hive.merge.mapredfiles": "false",
          "hive.merge.rcfile.block.level": "true",
          "hive.merge.tezfiles": "false",
          "hive.metastore.client.socket.timeout": "1800s",
          "hive.metastore.kerberos.keytab.file": "/etc/security/keytabs/hive.service.keytab",
          "hive.optimize.null.scan": "true",
          "hive.optimize.reducededuplication": "true",
          "hive.prewarm.enabled": "false",
          "hive.security.metastore.authorization.auth.reads": "true",
          "hive.security.metastore.authorization.manager": "org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider,org.apache.hadoop.hive.ql.security.authorization.MetaStoreAuthzAPIAuthorizerEmbedOnly",
          "hive.server2.authentication.spnego.keytab": "HTTP/_HOST@EXAMPLE.COM",
          "hive.server2.logging.operation.enabled": "true",
          "hive.server2.tez.default.queues": "default",
          "hive.server2.tez.initialize.default.sessions": "false",
          "hive.server2.tez.sessions.per.default.queue": "1",
          "hive.server2.thrift.sasl.qop": "auth",
          "hive.server2.use.SSL": "false",
          "hive.stats.autogather": "true",
          "hive.stats.fetch.partition.stats": "true",
          "hive.tez.dynamic.partition.pruning": "true",
          "hive.tez.dynamic.partition.pruning.max.data.size": "104857600",
          "hive.txn.timeout": "300",
          "hive.user.install.directory": "/user/",
          "hive.vectorized.execution.enabled": "true",
          "hive.zookeeper.quorum": {
            "value": "{ZOOKEEPER_QUORUM}",
            "template": "yes"
          }
        },
        "hbase-site": {
          "dfs.support.append": {"remove": "yes"},
          "hbase.defaults.for.version.skip": "true",
          "hbase.hregion.majorcompaction": "604800000",
          "hbase.hregion.max.filesize": "10737418240",
          "hbase.hstore.blockingStoreFiles": "10",
          "hbase.hstore.flush.retries.number": "120",
          "hbase.hregion.majorcompaction.jitter": "0.50",
          "hbase.regionserver.global.memstore.lowerLimit": "0.38",
          "hbase.regionserver.handler.count": "60",
          "hbase.rpc.engine": {"remove": "yes"},
          "hfile.block.cache.size": "0.40",
          "zookeeper.session.timeout": "30000",
          "hbase.hregion.memstore.block.multiplier": "4",
          "dfs.domain.socket.path": "/var/lib/hadoop-hdfs/dn_socket",
          "hbase.local.dir": "${hbase.tmp.dir}/local",
          "hbase.hstore.flush.retries.number": {"remove":"true"}
        },
        "webhcat-env": {
          "content": "\n# The file containing the running pid\nPID_FILE={{webhcat_pid_file}}\n\nTEMPLETON_LOG_DIR={{templeton_log_dir}}/\n\n\nWEBHCAT_LOG_DIR={{templeton_log_dir}}/\n\n# The console error log\nERROR_LOG={{templeton_log_dir}}/webhcat-console-error.log\n\n# The console log\nCONSOLE_LOG={{templeton_log_dir}}/webhcat-console.log\n\n#TEMPLETON_JAR=templeton_jar_name\n\n#HADOOP_PREFIX=hadoop_prefix\n\n#HCAT_PREFIX=hive_prefix\n\n# Set HADOOP_HOME to point to a specific hadoop install directory\nexport HADOOP_HOME={{hadoop_home}}"
        }
      },
      "property-mapping": {
        "create.empty.dir.if.nonexist": "mapreduce.jobcontrol.createdir.ifnotexist",
        "dfs.access.time.precision": "dfs.namenode.accesstime.precision",
        "dfs.backup.address": "dfs.namenode.backup.address",
        "dfs.backup.http.address": "dfs.namenode.backup.http-address",
        "dfs.balance.bandwidthPerSec": "dfs.datanode.balance.bandwidthPerSec",
        "dfs.block.size": "dfs.blocksize",
        "dfs.data.dir": "dfs.datanode.data.dir",
        "dfs.datanode.max.xcievers": "dfs.datanode.max.transfer.threads",
        "dfs.df.interval": "fs.df.interval",
        "dfs.federation.nameservice.id": "dfs.nameservice.id",
        "dfs.federation.nameservices": "dfs.nameservices",
        "dfs.http.address": "dfs.namenode.http-address",
        "dfs.https.address": "dfs.namenode.https-address",
        "dfs.https.client.keystore.resource": "dfs.client.https.keystore.resource",
        "dfs.https.need.client.auth": "dfs.client.https.need-auth",
        "dfs.max.objects": "dfs.namenode.max.objects",
        "dfs.max-repl-streams": "dfs.namenode.replication.max-streams",
        "dfs.name.dir": "dfs.namenode.name.dir",
        "dfs.name.dir.restore": "dfs.namenode.name.dir.restore",
        "dfs.name.edits.dir": "dfs.namenode.edits.dir",
        "dfs.permissions": "dfs.permissions.enabled",
        "dfs.permissions.supergroup": "dfs.permissions.superusergroup",
        "dfs.read.prefetch.size": "dfs.client.read.prefetch.size",
        "dfs.replication.considerLoad": "dfs.namenode.replication.considerLoad",
        "dfs.replication.interval": "dfs.namenode.replication.interval",
        "dfs.replication.min": "dfs.namenode.replication.min",
        "dfs.replication.pending.timeout.sec": "dfs.namenode.replication.pending.timeout-sec",
        "dfs.safemode.extension": "dfs.namenode.safemode.extension",
        "dfs.safemode.threshold.pct": "dfs.namenode.safemode.threshold-pct",
        "dfs.secondary.http.address": "dfs.namenode.secondary.http-address",
        "dfs.socket.timeout": "dfs.client.socket-timeout",
        "dfs.umaskmode": "fs.permissions.umask-mode",
        "dfs.write.packet.size": "dfs.client-write-packet-size",
        "fs.checkpoint.dir": "dfs.namenode.checkpoint.dir",
        "fs.checkpoint.edits.dir": "dfs.namenode.checkpoint.edits.dir",
        "fs.checkpoint.period": "dfs.namenode.checkpoint.period",
        "fs.default.name": "fs.defaultFS",
        "hadoop.configured.node.mapping": "net.topology.configured.node.mapping",
        "hadoop.job.history.location": "mapreduce.jobtracker.jobhistory.location",
        "hadoop.native.lib": "io.native.lib.available",
        "hadoop.net.static.resolutions": "mapreduce.tasktracker.net.static.resolutions",
        "hadoop.pipes.command-file.keep": "mapreduce.pipes.commandfile.preserve",
        "hadoop.pipes.executable.interpretor": "mapreduce.pipes.executable.interpretor",
        "hadoop.pipes.executable": "mapreduce.pipes.executable",
        "hadoop.pipes.java.mapper": "mapreduce.pipes.isjavamapper",
        "hadoop.pipes.java.recordreader": "mapreduce.pipes.isjavarecordreader",
        "hadoop.pipes.java.recordwriter": "mapreduce.pipes.isjavarecordwriter",
        "hadoop.pipes.java.reducer": "mapreduce.pipes.isjavareducer",
        "hadoop.pipes.partitioner": "mapreduce.pipes.partitioner",
        "heartbeat.recheck.interval": "dfs.namenode.heartbeat.recheck-interval",
        "io.bytes.per.checksum": "dfs.bytes-per-checksum",
        "io.sort.factor": "mapreduce.task.io.sort.factor",
        "io.sort.mb": "mapreduce.task.io.sort.mb",
        "io.sort.spill.percent": "mapreduce.map.sort.spill.percent",
        "jobclient.completion.poll.interval": "mapreduce.client.completion.pollinterval",
        "jobclient.output.filter": "mapreduce.client.output.filter",
        "jobclient.progress.monitor.poll.interval": "mapreduce.client.progressmonitor.pollinterval",
        "job.end.notification.url": "mapreduce.job.end-notification.url",
        "job.end.retry.attempts": "mapreduce.job.end-notification.retry.attempts",
        "job.end.retry.interval": "mapreduce.job.end-notification.retry.interval",
        "job.local.dir": "mapreduce.job.local.dir",
        "keep.failed.task.files": "mapreduce.task.files.preserve.failedtasks",
        "keep.task.files.pattern": "mapreduce.task.files.preserve.filepattern",
        "key.value.separator.in.input.line": "mapreduce.input.keyvaluelinerecordreader.key.value.separator",
        "local.cache.size": "mapreduce.tasktracker.cache.local.size",
        "map.input.file": "mapreduce.map.input.file",
        "map.input.length": "mapreduce.map.input.length",
        "map.input.start": "mapreduce.map.input.start",
        "map.output.key.field.separator": "mapreduce.map.output.key.field.separator",
        "map.output.key.value.fields.spec": "mapreduce.fieldsel.map.output.key.value.fields.spec",
        "mapred.acls.enabled": "mapreduce.cluster.acls.enabled",
        "mapred.binary.partitioner.left.offset": "mapreduce.partition.binarypartitioner.left.offset",
        "mapred.binary.partitioner.right.offset": "mapreduce.partition.binarypartitioner.right.offset",
        "mapred.cache.archives": "mapreduce.job.cache.archives",
        "mapred.cache.archives.timestamps": "mapreduce.job.cache.archives.timestamps",
        "mapred.cache.files": "mapreduce.job.cache.files",
        "mapred.cache.files.timestamps": "mapreduce.job.cache.files.timestamps",
        "mapred.cache.localArchives": "mapreduce.job.cache.local.archives",
        "mapred.cache.localFiles": "mapreduce.job.cache.local.files",
        "mapred.child.tmp": "mapreduce.task.tmp.dir",
        "mapred.cluster.average.blacklist.threshold": "mapreduce.jobtracker.blacklist.average.threshold",
        "mapred.cluster.map.memory.mb": "mapreduce.cluster.mapmemory.mb",
        "mapred.cluster.max.map.memory.mb": "mapreduce.jobtracker.maxmapmemory.mb",
        "mapred.cluster.max.reduce.memory.mb": "mapreduce.jobtracker.maxreducememory.mb",
        "mapred.cluster.reduce.memory.mb": "mapreduce.cluster.reducememory.mb",
        "mapred.committer.job.setup.cleanup.needed": "mapreduce.job.committer.setup.cleanup.needed",
        "mapred.compress.map.output": "mapreduce.map.output.compress",
        "mapred.data.field.separator": "mapreduce.fieldsel.data.field.separator",
        "mapred.debug.out.lines": "mapreduce.task.debugout.lines",
        "mapred.healthChecker.interval": "mapreduce.tasktracker.healthchecker.interval",
        "mapred.healthChecker.script.args": "mapreduce.tasktracker.healthchecker.script.args",
        "mapred.healthChecker.script.path": "mapreduce.tasktracker.healthchecker.script.path",
        "mapred.healthChecker.script.timeout": "mapreduce.tasktracker.healthchecker.script.timeout",
        "mapred.heartbeats.in.second": "mapreduce.jobtracker.heartbeats.in.second",
        "mapred.hosts.exclude": "mapreduce.jobtracker.hosts.exclude.filename",
        "mapred.hosts": "mapreduce.jobtracker.hosts.filename",
        "mapred.inmem.merge.threshold": "mapreduce.reduce.merge.inmem.threshold",
        "mapred.input.dir.formats": "mapreduce.input.multipleinputs.dir.formats",
        "mapred.input.dir.mappers": "mapreduce.input.multipleinputs.dir.mappers",
        "mapred.input.dir": "mapreduce.input.fileinputformat.inputdir",
        "mapred.input.pathFilter.class": "mapreduce.input.pathFilter.class",
        "mapred.jar": "mapreduce.job.jar",
        "mapred.job.classpath.archives": "mapreduce.job.classpath.archives",
        "mapred.job.classpath.files": "mapreduce.job.classpath.files",
        "mapred.job.id": "mapreduce.job.id",
        "mapred.jobinit.threads": "mapreduce.jobtracker.jobinit.threads",
        "mapred.job.map.memory.mb": "mapreduce.map.memory.mb",
        "mapred.job.name": "mapreduce.job.name",
        "mapred.job.priority": "mapreduce.job.priority",
        "mapred.job.queue.name": "mapreduce.job.queuename",
        "mapred.job.reduce.input.buffer.percent": "mapreduce.reduce.input.buffer.percent",
        "mapred.job.reduce.markreset.buffer.percent": "mapreduce.reduce.markreset.buffer.percent",
        "mapred.job.reduce.memory.mb": "mapreduce.reduce.memory.mb",
        "mapred.job.reduce.total.mem.bytes": "mapreduce.reduce.memory.totalbytes",
        "mapred.job.reuse.jvm.num.tasks": "mapreduce.job.jvm.numtasks",
        "mapred.job.shuffle.input.buffer.percent": "mapreduce.reduce.shuffle.input.buffer.percent",
        "mapred.job.shuffle.merge.percent": "mapreduce.reduce.shuffle.merge.percent",
        "mapred.job.tracker.handler.count": "mapreduce.jobtracker.handler.count",
        "mapred.job.tracker.history.completed.location": "mapreduce.jobtracker.jobhistory.completed.location",
        "mapred.job.tracker.http.address": "mapreduce.jobtracker.http.address",
        "mapred.jobtracker.instrumentation": "mapreduce.jobtracker.instrumentation",
        "mapred.jobtracker.job.history.block.size": "mapreduce.jobtracker.jobhistory.block.size",
        "mapred.job.tracker.jobhistory.lru.cache.size": "mapreduce.jobtracker.jobhistory.lru.cache.size",
        "mapred.job.tracker": "mapreduce.jobtracker.address",
        "mapred.jobtracker.maxtasks.per.job": "mapreduce.jobtracker.maxtasks.perjob",
        "mapred.job.tracker.persist.jobstatus.active": "mapreduce.jobtracker.persist.jobstatus.active",
        "mapred.job.tracker.persist.jobstatus.dir": "mapreduce.jobtracker.persist.jobstatus.dir",
        "mapred.job.tracker.persist.jobstatus.hours": "mapreduce.jobtracker.persist.jobstatus.hours",
        "mapred.jobtracker.restart.recover": "mapreduce.jobtracker.restart.recover",
        "mapred.job.tracker.retiredjobs.cache.size": "mapreduce.jobtracker.retiredjobs.cache.size",
        "mapred.job.tracker.retire.jobs": "mapreduce.jobtracker.retirejobs",
        "mapred.jobtracker.taskalloc.capacitypad": "mapreduce.jobtracker.taskscheduler.taskalloc.capacitypad",
        "mapred.jobtracker.taskScheduler": "mapreduce.jobtracker.taskscheduler",
        "mapred.jobtracker.taskScheduler.maxRunningTasksPerJob": "mapreduce.jobtracker.taskscheduler.maxrunningtasks.perjob",
        "mapred.join.expr": "mapreduce.join.expr",
        "mapred.join.keycomparator": "mapreduce.join.keycomparator",
        "mapred.lazy.output.format": "mapreduce.output.lazyoutputformat.outputformat",
        "mapred.line.input.format.linespermap": "mapreduce.input.lineinputformat.linespermap",
        "mapred.linerecordreader.maxlength": "mapreduce.input.linerecordreader.line.maxlength",
        "mapred.local.dir": "mapreduce.cluster.local.dir",
        "mapred.local.dir.minspacekill": "mapreduce.tasktracker.local.dir.minspacekill",
        "mapred.local.dir.minspacestart": "mapreduce.tasktracker.local.dir.minspacestart",
        "mapred.map.child.env": "mapreduce.map.env",
        "mapred.map.child.java.opts": "mapreduce.map.java.opts",
        "mapred.map.child.log.level": "mapreduce.map.log.level",
        "mapred.map.max.attempts": "mapreduce.map.maxattempts",
        "mapred.map.output.compression.codec": "mapreduce.map.output.compress.codec",
        "mapred.mapoutput.key.class": "mapreduce.map.output.key.class",
        "mapred.mapoutput.value.class": "mapreduce.map.output.value.class",
        "mapred.mapper.regex.group": "mapreduce.mapper.regexmapper..group",
        "mapred.mapper.regex": "mapreduce.mapper.regex",
        "mapred.map.task.debug.script": "mapreduce.map.debug.script",
        "mapred.map.tasks": "mapreduce.job.maps",
        "mapred.map.tasks.speculative.execution": "mapreduce.map.speculative",
        "mapred.max.map.failures.percent": "mapreduce.map.failures.maxpercent",
        "mapred.max.reduce.failures.percent": "mapreduce.reduce.failures.maxpercent",
        "mapred.max.split.size": "mapreduce.input.fileinputformat.split.maxsize",
        "mapred.max.tracker.blacklists": "mapreduce.jobtracker.tasktracker.maxblacklists",
        "mapred.max.tracker.failures": "mapreduce.job.maxtaskfailures.per.tracker",
        "mapred.merge.recordsBeforeProgress": "mapreduce.task.merge.progress.records",
        "mapred.min.split.size": "mapreduce.input.fileinputformat.split.minsize",
        "mapred.min.split.size.per.node": "mapreduce.input.fileinputformat.split.minsize.per.node",
        "mapred.min.split.size.per.rack": "mapreduce.input.fileinputformat.split.minsize.per.rack",
        "mapred.output.compression.codec": "mapreduce.output.fileoutputformat.compress.codec",
        "mapred.output.compression.type": "mapreduce.output.fileoutputformat.compress.type",
        "mapred.output.compress": "mapreduce.output.fileoutputformat.compress",
        "mapred.output.dir": "mapreduce.output.fileoutputformat.outputdir",
        "mapred.output.key.class": "mapreduce.job.output.key.class",
        "mapred.output.key.comparator.class": "mapreduce.job.output.key.comparator.class",
        "mapred.output.value.class": "mapreduce.job.output.value.class",
        "mapred.output.value.groupfn.class": "mapreduce.job.output.group.comparator.class",
        "mapred.permissions.supergroup": "mapreduce.cluster.permissions.supergroup",
        "mapred.pipes.user.inputformat": "mapreduce.pipes.inputformat",
        "mapred.reduce.child.env": "mapreduce.reduce.env",
        "mapred.reduce.child.java.opts": "mapreduce.reduce.java.opts",
        "mapred.reduce.child.log.level": "mapreduce.reduce.log.level",
        "mapred.reduce.max.attempts": "mapreduce.reduce.maxattempts",
        "mapred.reduce.parallel.copies": "mapreduce.reduce.shuffle.parallelcopies",
        "mapred.reduce.slowstart.completed.maps": "mapreduce.job.reduce.slowstart.completedmaps",
        "mapred.reduce.task.debug.script": "mapreduce.reduce.debug.script",
        "mapred.reduce.tasks": "mapreduce.job.reduces",
        "mapred.reduce.tasks.speculative.execution": "mapreduce.reduce.speculative",
        "mapred.seqbinary.output.key.class": "mapreduce.output.seqbinaryoutputformat.key.class",
        "mapred.seqbinary.output.value.class": "mapreduce.output.seqbinaryoutputformat.value.class",
        "mapred.shuffle.connect.timeout": "mapreduce.reduce.shuffle.connect.timeout",
        "mapred.shuffle.read.timeout": "mapreduce.reduce.shuffle.read.timeout",
        "mapred.skip.attempts.to.start.skipping": "mapreduce.task.skip.start.attempts",
        "mapred.skip.map.auto.incr.proc.count": "mapreduce.map.skip.proc-count.auto-incr",
        "mapred.skip.map.max.skip.records": "mapreduce.map.skip.maxrecords",
        "mapred.skip.on": "mapreduce.job.skiprecords",
        "mapred.skip.out.dir": "mapreduce.job.skip.outdir",
        "mapred.skip.reduce.auto.incr.proc.count": "mapreduce.reduce.skip.proc-count.auto-incr",
        "mapred.skip.reduce.max.skip.groups": "mapreduce.reduce.skip.maxgroups",
        "mapred.speculative.execution.slowNodeThreshold": "mapreduce.job.speculative.slownodethreshold",
        "mapred.speculative.execution.slowTaskThreshold": "mapreduce.job.speculative.slowtaskthreshold",
        "mapred.speculative.execution.speculativeCap": "mapreduce.job.speculative.speculativecap",
        "mapred.submit.replication": "mapreduce.client.submit.file.replication",
        "mapred.system.dir": "mapreduce.jobtracker.system.dir",
        "mapred.task.cache.levels": "mapreduce.jobtracker.taskcache.levels",
        "mapred.task.id": "mapreduce.task.attempt.id",
        "mapred.task.is.map": "mapreduce.task.ismap",
        "mapred.task.partition": "mapreduce.task.partition",
        "mapred.task.profile": "mapreduce.task.profile",
        "mapred.task.profile.maps": "mapreduce.task.profile.maps",
        "mapred.task.profile.params": "mapreduce.task.profile.params",
        "mapred.task.profile.reduces": "mapreduce.task.profile.reduces",
        "mapred.task.timeout": "mapreduce.task.timeout",
        "mapred.tasktracker.dns.interface": "mapreduce.tasktracker.dns.interface",
        "mapred.tasktracker.dns.nameserver": "mapreduce.tasktracker.dns.nameserver",
        "mapred.tasktracker.events.batchsize": "mapreduce.tasktracker.events.batchsize",
        "mapred.tasktracker.expiry.interval": "mapreduce.jobtracker.expire.trackers.interval",
        "mapred.task.tracker.http.address": "mapreduce.tasktracker.http.address",
        "mapred.tasktracker.indexcache.mb": "mapreduce.tasktracker.indexcache.mb",
        "mapred.tasktracker.instrumentation": "mapreduce.tasktracker.instrumentation",
        "mapred.tasktracker.map.tasks.maximum": "mapreduce.tasktracker.map.tasks.maximum",
        "mapred.tasktracker.memory_calculator_plugin": "mapreduce.tasktracker.resourcecalculatorplugin",
        "mapred.tasktracker.memorycalculatorplugin": "mapreduce.tasktracker.resourcecalculatorplugin",
        "mapred.tasktracker.reduce.tasks.maximum": "mapreduce.tasktracker.reduce.tasks.maximum",
        "mapred.task.tracker.report.address": "mapreduce.tasktracker.report.address",
        "mapred.task.tracker.task-controller": "mapreduce.tasktracker.taskcontroller",
        "mapred.tasktracker.taskmemorymanager.monitoring-interval": "mapreduce.tasktracker.taskmemorymanager.monitoringinterval",
        "mapred.tasktracker.tasks.sleeptime-before-sigkill": "mapreduce.tasktracker.tasks.sleeptimebeforesigkill",
        "mapred.temp.dir": "mapreduce.cluster.temp.dir",
        "mapred.text.key.comparator.options": "mapreduce.partition.keycomparator.options",
        "mapred.text.key.partitioner.options": "mapreduce.partition.keypartitioner.options",
        "mapred.textoutputformat.separator": "mapreduce.output.textoutputformat.separator",
        "mapred.tip.id": "mapreduce.task.id",
        "mapreduce.combine.class": "mapreduce.job.combine.class",
        "mapreduce.inputformat.class": "mapreduce.job.inputformat.class",
        "mapreduce.job.counters.limit": "mapreduce.job.counters.max",
        "mapreduce.jobtracker.permissions.supergroup": "mapreduce.cluster.permissions.supergroup",
        "mapreduce.map.class": "mapreduce.job.map.class",
        "mapreduce.outputformat.class": "mapreduce.job.outputformat.class",
        "mapreduce.partitioner.class": "mapreduce.job.partitioner.class",
        "mapreduce.reduce.class": "mapreduce.job.reduce.class",
        "mapred.used.genericoptionsparser": "mapreduce.client.genericoptionsparser.used",
        "mapred.userlog.limit.kb": "mapreduce.task.userlog.limit.kb",
        "mapred.userlog.retain.hours": "mapreduce.job.userlog.retain.hours",
        "mapred.working.dir": "mapreduce.job.working.dir",
        "mapred.work.output.dir": "mapreduce.task.output.dir",
        "min.num.spills.for.combine": "mapreduce.map.combine.minspills",
        "reduce.output.key.value.fields.spec": "mapreduce.fieldsel.reduce.output.key.value.fields.spec",
        "security.job.submission.protocol.acl": "security.job.client.protocol.acl",
        "security.task.umbilical.protocol.acl": "security.job.task.protocol.acl",
        "sequencefile.filter.class": "mapreduce.input.sequencefileinputfilter.class",
        "sequencefile.filter.frequency": "mapreduce.input.sequencefileinputfilter.frequency",
        "sequencefile.filter.regex": "mapreduce.input.sequencefileinputfilter.regex",
        "session.id": "dfs.metrics.session-id",
        "slave.host.name": "dfs.datanode.hostname",
        "slave.host.name": "mapreduce.tasktracker.host.name",
        "tasktracker.contention.tracking": "mapreduce.tasktracker.contention.tracking",
        "tasktracker.http.threads": "mapreduce.tasktracker.http.threads",
        "topology.node.switch.mapping.impl": "net.topology.node.switch.mapping.impl",
        "topology.script.file.name": "net.topology.script.file.name",
        "topology.script.number.args": "net.topology.script.number.args",
        "user.name": "mapreduce.job.user.name",
        "webinterface.private.actions": "mapreduce.jobtracker.webinterface.trusted"
      }
    }
  ]
}
