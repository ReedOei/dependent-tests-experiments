org.apache.accumulo.master.Master.setMergeState : $r8 = r0.<org.apache.accumulo.master.Master: java.lang.Object mergeLock> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : entermonitor $r8
org.apache.accumulo.master.Master.setMergeState : entermonitor $r8 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r9 = new java.lang.StringBuilder
org.apache.accumulo.master.Master.setMergeState : entermonitor $r8 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : exitmonitor $r8 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : throw $r33
org.apache.accumulo.master.Master.setMergeState : exitmonitor $r8 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.accumulo.master.Master.setMergeState : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.accumulo.master.Master.setMergeState : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r10 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.client.Instance getInstance()>()
org.apache.accumulo.master.Master.setMergeState : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r10 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.client.Instance getInstance()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r11 = interfaceinvoke $r10.<org.apache.accumulo.core.client.Instance: java.lang.String getInstanceID()>()
org.apache.accumulo.master.Master.setMergeState : $r10 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.client.Instance getInstance()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r11 = interfaceinvoke $r10.<org.apache.accumulo.core.client.Instance: java.lang.String getInstanceID()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r12 = staticinvoke <org.apache.accumulo.core.zookeeper.ZooUtil: java.lang.String getRoot(java.lang.String)>($r11)
org.apache.accumulo.master.Master.setMergeState : $r11 = interfaceinvoke $r10.<org.apache.accumulo.core.client.Instance: java.lang.String getInstanceID()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r12 = staticinvoke <org.apache.accumulo.core.zookeeper.ZooUtil: java.lang.String getRoot(java.lang.String)>($r11) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.accumulo.master.Master.setMergeState : $r12 = staticinvoke <org.apache.accumulo.core.zookeeper.ZooUtil: java.lang.String getRoot(java.lang.String)>($r11) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/tables")
org.apache.accumulo.master.Master.setMergeState : $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/tables") >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.accumulo.master.Master.setMergeState : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/tables") >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r16 = virtualinvoke r1.<org.apache.accumulo.server.master.state.MergeInfo: org.apache.accumulo.core.data.impl.KeyExtent getExtent()>()
org.apache.accumulo.master.Master.setMergeState : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r16 = virtualinvoke r1.<org.apache.accumulo.server.master.state.MergeInfo: org.apache.accumulo.core.data.impl.KeyExtent getExtent()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r17 = virtualinvoke $r16.<org.apache.accumulo.core.data.impl.KeyExtent: org.apache.accumulo.core.client.impl.Table$ID getTableId()>()
org.apache.accumulo.master.Master.setMergeState : $r16 = virtualinvoke r1.<org.apache.accumulo.server.master.state.MergeInfo: org.apache.accumulo.core.data.impl.KeyExtent getExtent()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r17 = virtualinvoke $r16.<org.apache.accumulo.core.data.impl.KeyExtent: org.apache.accumulo.core.client.impl.Table$ID getTableId()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)
org.apache.accumulo.master.Master.setMergeState : $r17 = virtualinvoke $r16.<org.apache.accumulo.core.data.impl.KeyExtent: org.apache.accumulo.core.client.impl.Table$ID getTableId()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/merge")
org.apache.accumulo.master.Master.setMergeState : $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/merge") >>>>>>>> org.apache.accumulo.master.Master.setMergeState : r4 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.accumulo.master.Master.setMergeState : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/merge") >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : r4 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : virtualinvoke r1.<org.apache.accumulo.server.master.state.MergeInfo: void setState(org.apache.accumulo.server.master.state.MergeState)>(r2)
org.apache.accumulo.master.Master.setMergeState : r4 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : virtualinvoke r1.<org.apache.accumulo.server.master.state.MergeInfo: void setState(org.apache.accumulo.server.master.state.MergeState)>(r2) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r20 = <org.apache.accumulo.server.master.state.MergeState: org.apache.accumulo.server.master.state.MergeState NONE>
org.apache.accumulo.master.Master.setMergeState : virtualinvoke r1.<org.apache.accumulo.server.master.state.MergeInfo: void setState(org.apache.accumulo.server.master.state.MergeState)>(r2) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r20 = <org.apache.accumulo.server.master.state.MergeState: org.apache.accumulo.server.master.state.MergeState NONE> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $z0 = virtualinvoke r2.<org.apache.accumulo.server.master.state.MergeState: boolean equals(java.lang.Object)>($r20)
org.apache.accumulo.master.Master.setMergeState : $r20 = <org.apache.accumulo.server.master.state.MergeState: org.apache.accumulo.server.master.state.MergeState NONE> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $z0 = virtualinvoke r2.<org.apache.accumulo.server.master.state.MergeState: boolean equals(java.lang.Object)>($r20) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : if $z0 == 0
org.apache.accumulo.master.Master.setMergeState : $z0 = virtualinvoke r2.<org.apache.accumulo.server.master.state.MergeState: boolean equals(java.lang.Object)>($r20) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r29 = staticinvoke <org.apache.accumulo.server.zookeeper.ZooReaderWriter: org.apache.accumulo.server.zookeeper.ZooReaderWriter getInstance()>()
org.apache.accumulo.master.Master.setMergeState : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r21 = new org.apache.hadoop.io.DataOutputBuffer
org.apache.accumulo.master.Master.setMergeState : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r21 = new org.apache.hadoop.io.DataOutputBuffer >>>>>>>> org.apache.accumulo.master.Master.setMergeState : specialinvoke $r21.<org.apache.hadoop.io.DataOutputBuffer: void <init>()>()
org.apache.accumulo.master.Master.setMergeState : $r21 = new org.apache.hadoop.io.DataOutputBuffer >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : specialinvoke $r21.<org.apache.hadoop.io.DataOutputBuffer: void <init>()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r31 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : specialinvoke $r21.<org.apache.hadoop.io.DataOutputBuffer: void <init>()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : specialinvoke $r21.<org.apache.hadoop.io.DataOutputBuffer: void <init>()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : virtualinvoke r1.<org.apache.accumulo.server.master.state.MergeInfo: void write(java.io.DataOutput)>($r21)
org.apache.accumulo.master.Master.setMergeState : virtualinvoke r1.<org.apache.accumulo.server.master.state.MergeInfo: void write(java.io.DataOutput)>($r21) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r31 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : virtualinvoke r1.<org.apache.accumulo.server.master.state.MergeInfo: void write(java.io.DataOutput)>($r21) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : virtualinvoke r1.<org.apache.accumulo.server.master.state.MergeInfo: void write(java.io.DataOutput)>($r21) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : goto [?= $r22 = staticinvoke <org.apache.accumulo.server.zookeeper.ZooReaderWriter: org.apache.accumulo.server.zookeeper.ZooReaderWriter getInstance()>()]
org.apache.accumulo.master.Master.setMergeState : goto [?= $r22 = staticinvoke <org.apache.accumulo.server.zookeeper.ZooReaderWriter: org.apache.accumulo.server.zookeeper.ZooReaderWriter getInstance()>()] >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r22 = staticinvoke <org.apache.accumulo.server.zookeeper.ZooReaderWriter: org.apache.accumulo.server.zookeeper.ZooReaderWriter getInstance()>()
org.apache.accumulo.master.Master.setMergeState : goto [?= $r22 = staticinvoke <org.apache.accumulo.server.zookeeper.ZooReaderWriter: org.apache.accumulo.server.zookeeper.ZooReaderWriter getInstance()>()] >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r22 = staticinvoke <org.apache.accumulo.server.zookeeper.ZooReaderWriter: org.apache.accumulo.server.zookeeper.ZooReaderWriter getInstance()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r23 = virtualinvoke $r21.<org.apache.hadoop.io.DataOutputBuffer: byte[] getData()>()
org.apache.accumulo.master.Master.setMergeState : $r22 = staticinvoke <org.apache.accumulo.server.zookeeper.ZooReaderWriter: org.apache.accumulo.server.zookeeper.ZooReaderWriter getInstance()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r23 = virtualinvoke $r21.<org.apache.hadoop.io.DataOutputBuffer: byte[] getData()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r24 = <org.apache.accumulo.server.master.state.MergeState: org.apache.accumulo.server.master.state.MergeState STARTED>
org.apache.accumulo.master.Master.setMergeState : $r23 = virtualinvoke $r21.<org.apache.hadoop.io.DataOutputBuffer: byte[] getData()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r24 = <org.apache.accumulo.server.master.state.MergeState: org.apache.accumulo.server.master.state.MergeState STARTED> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $z1 = virtualinvoke r2.<org.apache.accumulo.server.master.state.MergeState: boolean equals(java.lang.Object)>($r24)
org.apache.accumulo.master.Master.setMergeState : $r24 = <org.apache.accumulo.server.master.state.MergeState: org.apache.accumulo.server.master.state.MergeState STARTED> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $z1 = virtualinvoke r2.<org.apache.accumulo.server.master.state.MergeState: boolean equals(java.lang.Object)>($r24) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : if $z1 == 0
org.apache.accumulo.master.Master.setMergeState : $z1 = virtualinvoke r2.<org.apache.accumulo.server.master.state.MergeState: boolean equals(java.lang.Object)>($r24) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : if $z1 == 0 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r34 = <org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy: org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy FAIL>
org.apache.accumulo.master.Master.setMergeState : if $z1 == 0 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r34 = <org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy: org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy OVERWRITE>
org.apache.accumulo.master.Master.setMergeState : if $z1 == 0 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r34 = <org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy: org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy OVERWRITE> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : virtualinvoke $r22.<org.apache.accumulo.server.zookeeper.ZooReaderWriter: boolean putPersistentData(java.lang.String,byte[],org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy)>(r4, $r23, $r34)
org.apache.accumulo.master.Master.setMergeState : $r34 = <org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy: org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy OVERWRITE> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : virtualinvoke $r22.<org.apache.accumulo.server.zookeeper.ZooReaderWriter: boolean putPersistentData(java.lang.String,byte[],org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy)>(r4, $r23, $r34) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r35 = r0.<org.apache.accumulo.master.Master: java.lang.Object mergeLock>
org.apache.accumulo.master.Master.setMergeState : virtualinvoke $r22.<org.apache.accumulo.server.zookeeper.ZooReaderWriter: boolean putPersistentData(java.lang.String,byte[],org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy)>(r4, $r23, $r34) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r35 = r0.<org.apache.accumulo.master.Master: java.lang.Object mergeLock> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : virtualinvoke $r35.<java.lang.Object: void notifyAll()>()
org.apache.accumulo.master.Master.setMergeState : $r35 = r0.<org.apache.accumulo.master.Master: java.lang.Object mergeLock> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : virtualinvoke $r35.<java.lang.Object: void notifyAll()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : exitmonitor $r8
org.apache.accumulo.master.Master.setMergeState : virtualinvoke $r35.<java.lang.Object: void notifyAll()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : exitmonitor $r8 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : goto [?= $r26 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent>]
org.apache.accumulo.master.Master.setMergeState : exitmonitor $r8 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : goto [?= $r26 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent>] >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r26 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent>
org.apache.accumulo.master.Master.setMergeState : $r26 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r25 = newarray (java.lang.Object)[2]
org.apache.accumulo.master.Master.setMergeState : $r25 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r27 = virtualinvoke r1.<org.apache.accumulo.server.master.state.MergeInfo: org.apache.accumulo.core.data.impl.KeyExtent getExtent()>()
org.apache.accumulo.master.Master.setMergeState : $r27 = virtualinvoke r1.<org.apache.accumulo.server.master.state.MergeInfo: org.apache.accumulo.core.data.impl.KeyExtent getExtent()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r25[0] = $r27
org.apache.accumulo.master.Master.setMergeState : $r25[0] = $r27 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r25[1] = r2
org.apache.accumulo.master.Master.setMergeState : $r25[1] = r2 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : virtualinvoke $r26.<org.apache.accumulo.master.EventCoordinator: void event(java.lang.String,java.lang.Object[])>("Merge state of %s set to %s", $r25)
org.apache.accumulo.master.Master.setMergeState : virtualinvoke $r26.<org.apache.accumulo.master.EventCoordinator: void event(java.lang.String,java.lang.Object[])>("Merge state of %s set to %s", $r25) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : return
org.apache.accumulo.master.Master.setMergeState : $r34 = <org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy: org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy FAIL> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : goto [?= virtualinvoke $r22.<org.apache.accumulo.server.zookeeper.ZooReaderWriter: boolean putPersistentData(java.lang.String,byte[],org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy)>(r4, $r23, $r34)]
org.apache.accumulo.master.Master.setMergeState : $r34 = <org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy: org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy FAIL> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : goto [?= virtualinvoke $r22.<org.apache.accumulo.server.zookeeper.ZooReaderWriter: boolean putPersistentData(java.lang.String,byte[],org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy)>(r4, $r23, $r34)] >>>>>>>> org.apache.accumulo.master.Master.setMergeState : virtualinvoke $r22.<org.apache.accumulo.server.zookeeper.ZooReaderWriter: boolean putPersistentData(java.lang.String,byte[],org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy)>(r4, $r23, $r34)
org.apache.accumulo.master.Master.setMergeState : goto [?= virtualinvoke $r22.<org.apache.accumulo.server.zookeeper.ZooReaderWriter: boolean putPersistentData(java.lang.String,byte[],org.apache.accumulo.fate.zookeeper.ZooUtil$NodeExistsPolicy)>(r4, $r23, $r34)] >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r32 = new java.lang.RuntimeException >>>>>>>> org.apache.accumulo.master.Master.setMergeState : specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unlikely", $r31)
org.apache.accumulo.master.Master.setMergeState : $r32 = new java.lang.RuntimeException >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unlikely", $r31) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : throw $r32
org.apache.accumulo.master.Master.setMergeState : specialinvoke $r32.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unlikely", $r31) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : throw $r32 >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r29 = staticinvoke <org.apache.accumulo.server.zookeeper.ZooReaderWriter: org.apache.accumulo.server.zookeeper.ZooReaderWriter getInstance()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r30 = <org.apache.accumulo.fate.zookeeper.ZooUtil$NodeMissingPolicy: org.apache.accumulo.fate.zookeeper.ZooUtil$NodeMissingPolicy SKIP>
org.apache.accumulo.master.Master.setMergeState : $r29 = staticinvoke <org.apache.accumulo.server.zookeeper.ZooReaderWriter: org.apache.accumulo.server.zookeeper.ZooReaderWriter getInstance()>() >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : $r30 = <org.apache.accumulo.fate.zookeeper.ZooUtil$NodeMissingPolicy: org.apache.accumulo.fate.zookeeper.ZooUtil$NodeMissingPolicy SKIP> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : virtualinvoke $r29.<org.apache.accumulo.server.zookeeper.ZooReaderWriter: void recursiveDelete(java.lang.String,org.apache.accumulo.fate.zookeeper.ZooUtil$NodeMissingPolicy)>(r4, $r30)
org.apache.accumulo.master.Master.setMergeState : $r30 = <org.apache.accumulo.fate.zookeeper.ZooUtil$NodeMissingPolicy: org.apache.accumulo.fate.zookeeper.ZooUtil$NodeMissingPolicy SKIP> >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : virtualinvoke $r29.<org.apache.accumulo.server.zookeeper.ZooReaderWriter: void recursiveDelete(java.lang.String,org.apache.accumulo.fate.zookeeper.ZooUtil$NodeMissingPolicy)>(r4, $r30) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : goto [?= $r35 = r0.<org.apache.accumulo.master.Master: java.lang.Object mergeLock>]
org.apache.accumulo.master.Master.setMergeState : virtualinvoke $r29.<org.apache.accumulo.server.zookeeper.ZooReaderWriter: void recursiveDelete(java.lang.String,org.apache.accumulo.fate.zookeeper.ZooUtil$NodeMissingPolicy)>(r4, $r30) >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
org.apache.accumulo.master.Master.setMergeState : goto [?= $r35 = r0.<org.apache.accumulo.master.Master: java.lang.Object mergeLock>] >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r35 = r0.<org.apache.accumulo.master.Master: java.lang.Object mergeLock>
org.apache.accumulo.master.Master.setMergeState : goto [?= $r35 = r0.<org.apache.accumulo.master.Master: java.lang.Object mergeLock>] >>>>>>>> org.apache.accumulo.master.Master.setMergeState : $r33 := @caughtexception
