org.apache.accumulo.master.Master.getMasterLock : $r4 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("trying to get master lock")
org.apache.accumulo.master.Master.getMasterLock : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("trying to get master lock") >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r5 = new java.lang.StringBuilder
org.apache.accumulo.master.Master.getMasterLock : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.accumulo.master.Master.getMasterLock : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r6 = r0.<org.apache.accumulo.master.Master: java.lang.String hostname>
org.apache.accumulo.master.Master.getMasterLock : $r6 = r0.<org.apache.accumulo.master.Master: java.lang.String hostname> >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
org.apache.accumulo.master.Master.getMasterLock : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":")
org.apache.accumulo.master.Master.getMasterLock : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r9 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.conf.AccumuloConfiguration getConfiguration()>()
org.apache.accumulo.master.Master.getMasterLock : $r9 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.conf.AccumuloConfiguration getConfiguration()>() >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r10 = <org.apache.accumulo.core.conf.Property: org.apache.accumulo.core.conf.Property MASTER_CLIENTPORT>
org.apache.accumulo.master.Master.getMasterLock : $r10 = <org.apache.accumulo.core.conf.Property: org.apache.accumulo.core.conf.Property MASTER_CLIENTPORT> >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r11 = virtualinvoke $r9.<org.apache.accumulo.core.conf.AccumuloConfiguration: int[] getPort(org.apache.accumulo.core.conf.Property)>($r10)
org.apache.accumulo.master.Master.getMasterLock : $r11 = virtualinvoke $r9.<org.apache.accumulo.core.conf.AccumuloConfiguration: int[] getPort(org.apache.accumulo.core.conf.Property)>($r10) >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $i0 = $r11[0]
org.apache.accumulo.master.Master.getMasterLock : $i0 = $r11[0] >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
org.apache.accumulo.master.Master.getMasterLock : $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.accumulo.master.Master.getMasterLock : r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r13 = new org.apache.accumulo.master.Master$MasterLockWatcher
org.apache.accumulo.master.Master.getMasterLock : $r13 = new org.apache.accumulo.master.Master$MasterLockWatcher >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : specialinvoke $r13.<org.apache.accumulo.master.Master$MasterLockWatcher: void <init>(org.apache.accumulo.master.Master$1)>(null)
org.apache.accumulo.master.Master.getMasterLock : specialinvoke $r13.<org.apache.accumulo.master.Master$MasterLockWatcher: void <init>(org.apache.accumulo.master.Master$1)>(null) >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r14 = new org.apache.accumulo.server.zookeeper.ZooLock
org.apache.accumulo.master.Master.getMasterLock : $r14 = new org.apache.accumulo.server.zookeeper.ZooLock >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : specialinvoke $r14.<org.apache.accumulo.server.zookeeper.ZooLock: void <init>(java.lang.String)>(r1)
org.apache.accumulo.master.Master.getMasterLock : specialinvoke $r14.<org.apache.accumulo.server.zookeeper.ZooLock: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : r0.<org.apache.accumulo.master.Master: org.apache.accumulo.server.zookeeper.ZooLock masterLock> = $r14
org.apache.accumulo.master.Master.getMasterLock : r0.<org.apache.accumulo.master.Master: org.apache.accumulo.server.zookeeper.ZooLock masterLock> = $r14 >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r15 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.server.zookeeper.ZooLock masterLock>
org.apache.accumulo.master.Master.getMasterLock : $r15 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.server.zookeeper.ZooLock masterLock> >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r16 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>()
org.apache.accumulo.master.Master.getMasterLock : $r16 = virtualinvoke r2.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : virtualinvoke $r15.<org.apache.accumulo.server.zookeeper.ZooLock: void lockAsync(org.apache.accumulo.fate.zookeeper.ZooLock$AsyncLockWatcher,byte[])>($r13, $r16)
org.apache.accumulo.master.Master.getMasterLock : virtualinvoke $r15.<org.apache.accumulo.server.zookeeper.ZooLock: void lockAsync(org.apache.accumulo.fate.zookeeper.ZooLock$AsyncLockWatcher,byte[])>($r13, $r16) >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : virtualinvoke $r13.<org.apache.accumulo.master.Master$MasterLockWatcher: void waitForChange()>()
org.apache.accumulo.master.Master.getMasterLock : virtualinvoke $r13.<org.apache.accumulo.master.Master$MasterLockWatcher: void waitForChange()>() >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $z0 = $r13.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean acquiredLock>
org.apache.accumulo.master.Master.getMasterLock : $z0 = $r13.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean acquiredLock> >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : if $z0 == 0
org.apache.accumulo.master.Master.getMasterLock : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : goto [?= $r20 = <org.apache.accumulo.core.master.thrift.MasterState: org.apache.accumulo.core.master.thrift.MasterState HAVE_LOCK>]
org.apache.accumulo.master.Master.getMasterLock : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $z1 = $r13.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean failedToAcquireLock>
org.apache.accumulo.master.Master.getMasterLock : $z1 = $r13.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean failedToAcquireLock> >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : if $z1 != 0
org.apache.accumulo.master.Master.getMasterLock : if $z1 != 0 >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r19 = new java.lang.IllegalStateException
org.apache.accumulo.master.Master.getMasterLock : if $z1 != 0 >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r17 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.server.zookeeper.ZooLock masterLock>
org.apache.accumulo.master.Master.getMasterLock : $r17 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.server.zookeeper.ZooLock masterLock> >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : virtualinvoke $r17.<org.apache.accumulo.server.zookeeper.ZooLock: boolean tryToCancelAsyncLockOrUnlock()>()
org.apache.accumulo.master.Master.getMasterLock : virtualinvoke $r17.<org.apache.accumulo.server.zookeeper.ZooLock: boolean tryToCancelAsyncLockOrUnlock()>() >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r18 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.accumulo.master.Master.getMasterLock : $r18 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : staticinvoke <org.apache.accumulo.fate.util.UtilWaitThread: void sleepUninterruptibly(long,java.util.concurrent.TimeUnit)>(1000L, $r18)
org.apache.accumulo.master.Master.getMasterLock : staticinvoke <org.apache.accumulo.fate.util.UtilWaitThread: void sleepUninterruptibly(long,java.util.concurrent.TimeUnit)>(1000L, $r18) >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : goto [?= $r13 = new org.apache.accumulo.master.Master$MasterLockWatcher]
org.apache.accumulo.master.Master.getMasterLock : goto [?= $r13 = new org.apache.accumulo.master.Master$MasterLockWatcher] >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r13 = new org.apache.accumulo.master.Master$MasterLockWatcher
org.apache.accumulo.master.Master.getMasterLock : $r19 = new java.lang.IllegalStateException >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("master lock in unknown state")
org.apache.accumulo.master.Master.getMasterLock : specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>("master lock in unknown state") >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : throw $r19
org.apache.accumulo.master.Master.getMasterLock : goto [?= $r20 = <org.apache.accumulo.core.master.thrift.MasterState: org.apache.accumulo.core.master.thrift.MasterState HAVE_LOCK>] >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : $r20 = <org.apache.accumulo.core.master.thrift.MasterState: org.apache.accumulo.core.master.thrift.MasterState HAVE_LOCK>
org.apache.accumulo.master.Master.getMasterLock : $r20 = <org.apache.accumulo.core.master.thrift.MasterState: org.apache.accumulo.core.master.thrift.MasterState HAVE_LOCK> >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : virtualinvoke r0.<org.apache.accumulo.master.Master: void setMasterState(org.apache.accumulo.core.master.thrift.MasterState)>($r20)
org.apache.accumulo.master.Master.getMasterLock : virtualinvoke r0.<org.apache.accumulo.master.Master: void setMasterState(org.apache.accumulo.core.master.thrift.MasterState)>($r20) >>>>>>>> org.apache.accumulo.master.Master.getMasterLock : return
