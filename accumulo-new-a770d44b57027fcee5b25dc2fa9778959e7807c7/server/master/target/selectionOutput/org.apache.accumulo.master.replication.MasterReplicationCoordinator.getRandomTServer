org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : $i0 = interfaceinvoke r1.<java.util.Set: int size()>() >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : if $i0 <= i1
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : if $i0 <= i1 >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : $z0 = 1
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : if $i0 <= i1 >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : $z0 = 0
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : $z0 = 0 >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Must provide an offset less than the size of the set")
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Must provide an offset less than the size of the set") >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : if i1 <= 0
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : if i1 <= 0 >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : if i1 <= 0 >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : $r4 = (org.apache.accumulo.server.master.state.TServerInstance) $r3
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : $r4 = (org.apache.accumulo.server.master.state.TServerInstance) $r3 >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : return $r4
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : i1 = i1 + -1
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : i1 = i1 + -1 >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : goto [?= (branch)]
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : goto [?= (branch)] >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : if i1 <= 0
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : $z0 = 1 >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : goto [?= staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Must provide an offset less than the size of the set")]
org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : goto [?= staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Must provide an offset less than the size of the set")] >>>>>>>> org.apache.accumulo.master.replication.MasterReplicationCoordinator.getRandomTServer : staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Must provide an offset less than the size of the set")
