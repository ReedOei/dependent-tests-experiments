org.apache.accumulo.master.Master$StatusThread.updateStatus : $r4 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r5 = $r4.<org.apache.accumulo.master.Master: org.apache.accumulo.server.master.LiveTServerSet tserverSet>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r5 = $r4.<org.apache.accumulo.master.Master: org.apache.accumulo.server.master.LiveTServerSet tserverSet> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : r1 = virtualinvoke $r5.<org.apache.accumulo.server.master.LiveTServerSet: java.util.Set getCurrentServers()>()
org.apache.accumulo.master.Master$StatusThread.updateStatus : r1 = virtualinvoke $r5.<org.apache.accumulo.server.master.LiveTServerSet: java.util.Set getCurrentServers()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r7 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r7 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r6 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r6 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r8 = staticinvoke <org.apache.accumulo.master.Master: java.util.SortedMap access$500(org.apache.accumulo.master.Master,java.util.Set)>($r6, r1)
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r8 = staticinvoke <org.apache.accumulo.master.Master: java.util.SortedMap access$500(org.apache.accumulo.master.Master,java.util.Set)>($r6, r1) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r9 = staticinvoke <java.util.Collections: java.util.SortedMap synchronizedSortedMap(java.util.SortedMap)>($r8)
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r9 = staticinvoke <java.util.Collections: java.util.SortedMap synchronizedSortedMap(java.util.SortedMap)>($r8) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r7.<org.apache.accumulo.master.Master: java.util.SortedMap tserverStatus> = $r9
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r7.<org.apache.accumulo.master.Master: java.util.SortedMap tserverStatus> = $r9 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r10 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r10 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r11 = $r10.<org.apache.accumulo.master.Master: java.util.SortedMap tserverStatus>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r11 = $r10.<org.apache.accumulo.master.Master: java.util.SortedMap tserverStatus> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : specialinvoke r0.<org.apache.accumulo.master.Master$StatusThread: void checkForHeldServer(java.util.SortedMap)>($r11)
org.apache.accumulo.master.Master$StatusThread.updateStatus : specialinvoke r0.<org.apache.accumulo.master.Master$StatusThread: void checkForHeldServer(java.util.SortedMap)>($r11) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r12 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r12 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r13 = $r12.<org.apache.accumulo.master.Master: java.util.Map badServers>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r13 = $r12.<org.apache.accumulo.master.Master: java.util.Map badServers> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $z0 = interfaceinvoke $r13.<java.util.Map: boolean isEmpty()>()
org.apache.accumulo.master.Master$StatusThread.updateStatus : $z0 = interfaceinvoke $r13.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : if $z0 != 0
org.apache.accumulo.master.Master$StatusThread.updateStatus : if $z0 != 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r33 = <org.apache.accumulo.master.Master: org.slf4j.Logger log>
org.apache.accumulo.master.Master$StatusThread.updateStatus : if $z0 != 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r14 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r14 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $i0 = staticinvoke <org.apache.accumulo.master.Master: int access$600(org.apache.accumulo.master.Master)>($r14)
org.apache.accumulo.master.Master$StatusThread.updateStatus : $i0 = staticinvoke <org.apache.accumulo.master.Master: int access$600(org.apache.accumulo.master.Master)>($r14) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : if $i0 <= 0
org.apache.accumulo.master.Master$StatusThread.updateStatus : if $i0 <= 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r29 = <org.apache.accumulo.master.Master: org.slf4j.Logger log>
org.apache.accumulo.master.Master$StatusThread.updateStatus : if $i0 <= 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r15 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r15 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r16 = virtualinvoke $r15.<org.apache.accumulo.master.Master: org.apache.accumulo.core.master.thrift.MasterGoalState getMasterGoalState()>()
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r16 = virtualinvoke $r15.<org.apache.accumulo.master.Master: org.apache.accumulo.core.master.thrift.MasterGoalState getMasterGoalState()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r17 = <org.apache.accumulo.core.master.thrift.MasterGoalState: org.apache.accumulo.core.master.thrift.MasterGoalState CLEAN_STOP>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r17 = <org.apache.accumulo.core.master.thrift.MasterGoalState: org.apache.accumulo.core.master.thrift.MasterGoalState CLEAN_STOP> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : if $r16 != $r17
org.apache.accumulo.master.Master$StatusThread.updateStatus : if $r16 != $r17 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r27 = <org.apache.accumulo.master.Master: org.slf4j.Logger log>
org.apache.accumulo.master.Master$StatusThread.updateStatus : if $r16 != $r17 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r18 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r18 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r19 = $r18.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r19 = $r18.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $z1 = interfaceinvoke $r19.<java.util.Set: boolean isEmpty()>()
org.apache.accumulo.master.Master$StatusThread.updateStatus : $z1 = interfaceinvoke $r19.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : if $z1 != 0
org.apache.accumulo.master.Master$StatusThread.updateStatus : if $z1 != 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r26 = <org.apache.accumulo.master.Master: org.slf4j.Logger log>
org.apache.accumulo.master.Master$StatusThread.updateStatus : if $z1 != 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r20 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r20 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r21 = staticinvoke <org.apache.accumulo.master.Master: java.util.List access$200(org.apache.accumulo.master.Master)>($r20)
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r21 = staticinvoke <org.apache.accumulo.master.Master: java.util.List access$200(org.apache.accumulo.master.Master)>($r20) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : r2 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>()
org.apache.accumulo.master.Master$StatusThread.updateStatus : r2 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.Master$StatusThread.updateStatus : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : if $z2 == 0
org.apache.accumulo.master.Master$StatusThread.updateStatus : if $z2 == 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r22 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.Master$StatusThread.updateStatus : if $z2 == 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $l1 = specialinvoke r0.<org.apache.accumulo.master.Master$StatusThread: long balanceTablets()>()
org.apache.accumulo.master.Master$StatusThread.updateStatus : $l1 = specialinvoke r0.<org.apache.accumulo.master.Master$StatusThread: long balanceTablets()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : return $l1
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r22 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : r3 = (org.apache.accumulo.master.TabletGroupWatcher) $r22
org.apache.accumulo.master.Master$StatusThread.updateStatus : r3 = (org.apache.accumulo.master.TabletGroupWatcher) $r22 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $z3 = virtualinvoke r3.<org.apache.accumulo.master.TabletGroupWatcher: boolean isSameTserversAsLastScan(java.util.Set)>(r1)
org.apache.accumulo.master.Master$StatusThread.updateStatus : $z3 = virtualinvoke r3.<org.apache.accumulo.master.TabletGroupWatcher: boolean isSameTserversAsLastScan(java.util.Set)>(r1) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : if $z3 != 0
org.apache.accumulo.master.Master$StatusThread.updateStatus : if $z3 != 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r23 = <org.apache.accumulo.master.Master: org.slf4j.Logger log>
org.apache.accumulo.master.Master$StatusThread.updateStatus : if $z3 != 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : goto [?= $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.Master$StatusThread.updateStatus : goto [?= $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r23 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : interfaceinvoke $r23.<org.slf4j.Logger: void debug(java.lang.String)>("not balancing just yet, as collection of live tservers is in flux")
org.apache.accumulo.master.Master$StatusThread.updateStatus : interfaceinvoke $r23.<org.slf4j.Logger: void debug(java.lang.String)>("not balancing just yet, as collection of live tservers is in flux") >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : return 10000L
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r26 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r24 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r24 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r25 = $r24.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r25 = $r24.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("not balancing while shutting down servers {}", $r25)
org.apache.accumulo.master.Master$StatusThread.updateStatus : interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("not balancing while shutting down servers {}", $r25) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : goto [?= return 10000L]
org.apache.accumulo.master.Master$StatusThread.updateStatus : goto [?= return 10000L] >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : return 10000L
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r27 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String)>("not balancing because the master is attempting to stop cleanly")
org.apache.accumulo.master.Master$StatusThread.updateStatus : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String)>("not balancing because the master is attempting to stop cleanly") >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : goto [?= return 10000L]
org.apache.accumulo.master.Master$StatusThread.updateStatus : goto [?= return 10000L] >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : return 10000L
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r29 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r28 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r28 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $i2 = staticinvoke <org.apache.accumulo.master.Master: int access$600(org.apache.accumulo.master.Master)>($r28)
org.apache.accumulo.master.Master$StatusThread.updateStatus : $i2 = staticinvoke <org.apache.accumulo.master.Master: int access$600(org.apache.accumulo.master.Master)>($r28) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("not balancing because there are unhosted tablets: {}", $r30)
org.apache.accumulo.master.Master$StatusThread.updateStatus : interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("not balancing because there are unhosted tablets: {}", $r30) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : goto [?= return 10000L]
org.apache.accumulo.master.Master$StatusThread.updateStatus : goto [?= return 10000L] >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : return 10000L
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r33 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r31 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r31 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r32 = $r31.<org.apache.accumulo.master.Master: java.util.Map badServers>
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r32 = $r31.<org.apache.accumulo.master.Master: java.util.Map badServers> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : $r34 = interfaceinvoke $r32.<java.util.Map: java.util.Set keySet()>()
org.apache.accumulo.master.Master$StatusThread.updateStatus : $r34 = interfaceinvoke $r32.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : interfaceinvoke $r33.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("not balancing because the balance information is out-of-date {}", $r34)
org.apache.accumulo.master.Master$StatusThread.updateStatus : interfaceinvoke $r33.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("not balancing because the balance information is out-of-date {}", $r34) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : goto [?= return 10000L]
org.apache.accumulo.master.Master$StatusThread.updateStatus : goto [?= return 10000L] >>>>>>>> org.apache.accumulo.master.Master$StatusThread.updateStatus : return 10000L
