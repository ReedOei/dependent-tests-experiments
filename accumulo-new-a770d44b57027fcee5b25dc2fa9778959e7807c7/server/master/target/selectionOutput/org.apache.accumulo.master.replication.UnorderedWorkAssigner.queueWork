org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r5 = virtualinvoke r1.<org.apache.hadoop.fs.Path: java.lang.String getName()>() >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : r3 = staticinvoke <org.apache.accumulo.server.replication.DistributedWorkQueueWorkAssignerHelper: java.lang.String getQueueKey(java.lang.String,org.apache.accumulo.core.replication.ReplicationTarget)>($r5, r2)
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : r3 = staticinvoke <org.apache.accumulo.server.replication.DistributedWorkQueueWorkAssignerHelper: java.lang.String getQueueKey(java.lang.String,org.apache.accumulo.core.replication.ReplicationTarget)>($r5, r2) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r6 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: java.util.Set queuedWork>
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r6 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: java.util.Set queuedWork> >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r3)
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : if $z0 == 0
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r11 = <org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r7 = <org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r7 = <org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Queued work for {} and {}", r3, r1)
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r7 = <org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r12 := @caughtexception
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r13 = <org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : interfaceinvoke $r13.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Could not queue work for {}", r1, $r12)
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : interfaceinvoke $r13.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Could not queue work for {}", r1, $r12) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : return 0
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Queued work for {} and {}", r3, r1) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r8 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.apache.accumulo.server.zookeeper.DistributedWorkQueue workQueue>
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Queued work for {} and {}", r3, r1) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r12 := @caughtexception
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r8 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.apache.accumulo.server.zookeeper.DistributedWorkQueue workQueue> >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r9 = virtualinvoke r1.<org.apache.hadoop.fs.Path: java.lang.String toString()>()
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r8 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.apache.accumulo.server.zookeeper.DistributedWorkQueue workQueue> >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r12 := @caughtexception
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r9 = virtualinvoke r1.<org.apache.hadoop.fs.Path: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : virtualinvoke $r8.<org.apache.accumulo.server.zookeeper.DistributedWorkQueue: void addWork(java.lang.String,java.lang.String)>(r3, $r9)
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r9 = virtualinvoke r1.<org.apache.hadoop.fs.Path: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r12 := @caughtexception
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : virtualinvoke $r8.<org.apache.accumulo.server.zookeeper.DistributedWorkQueue: void addWork(java.lang.String,java.lang.String)>(r3, $r9) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r10 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: java.util.Set queuedWork>
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : virtualinvoke $r8.<org.apache.accumulo.server.zookeeper.DistributedWorkQueue: void addWork(java.lang.String,java.lang.String)>(r3, $r9) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r12 := @caughtexception
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r10 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: java.util.Set queuedWork> >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r3)
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r10 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: java.util.Set queuedWork> >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r12 := @caughtexception
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : goto [?= return 1]
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r12 := @caughtexception
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : goto [?= return 1] >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : return 1
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : $r11 = <org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{} is already queued to be replicated to {}, not re-queueing", r1, r2)
org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("{} is already queued to be replicated to {}, not re-queueing", r1, r2) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.queueWork : return 0
