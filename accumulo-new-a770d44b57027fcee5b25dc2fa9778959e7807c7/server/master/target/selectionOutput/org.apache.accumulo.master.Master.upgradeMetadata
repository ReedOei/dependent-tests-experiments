org.apache.accumulo.master.Master.upgradeMetadata : $r2 = r0.<org.apache.accumulo.master.Master: java.util.concurrent.atomic.AtomicBoolean upgradeMetadataRunning> >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1)
org.apache.accumulo.master.Master.upgradeMetadata : $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1) >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : if $z0 == 0
org.apache.accumulo.master.Master.upgradeMetadata : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : $r3 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.server.fs.VolumeManager fs>
org.apache.accumulo.master.Master.upgradeMetadata : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : return
org.apache.accumulo.master.Master.upgradeMetadata : $r3 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.server.fs.VolumeManager fs> >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : i0 = staticinvoke <org.apache.accumulo.server.Accumulo: int getAccumuloPersistentVersion(org.apache.accumulo.server.fs.VolumeManager)>($r3)
org.apache.accumulo.master.Master.upgradeMetadata : i0 = staticinvoke <org.apache.accumulo.server.Accumulo: int getAccumuloPersistentVersion(org.apache.accumulo.server.fs.VolumeManager)>($r3) >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : $z1 = staticinvoke <org.apache.accumulo.server.Accumulo: boolean persistentVersionNeedsUpgrade(int)>(i0)
org.apache.accumulo.master.Master.upgradeMetadata : $z1 = staticinvoke <org.apache.accumulo.server.Accumulo: boolean persistentVersionNeedsUpgrade(int)>(i0) >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : if $z1 == 0
org.apache.accumulo.master.Master.upgradeMetadata : if $z1 == 0 >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : $z2 = r0.<org.apache.accumulo.master.Master: boolean haveUpgradedZooKeeper>
org.apache.accumulo.master.Master.upgradeMetadata : if $z1 == 0 >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : $r4 = r0.<org.apache.accumulo.master.Master: java.util.concurrent.CountDownLatch waitForMetadataUpgrade>
org.apache.accumulo.master.Master.upgradeMetadata : $r4 = r0.<org.apache.accumulo.master.Master: java.util.concurrent.CountDownLatch waitForMetadataUpgrade> >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : virtualinvoke $r4.<java.util.concurrent.CountDownLatch: void countDown()>()
org.apache.accumulo.master.Master.upgradeMetadata : virtualinvoke $r4.<java.util.concurrent.CountDownLatch: void countDown()>() >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : return
org.apache.accumulo.master.Master.upgradeMetadata : $z2 = r0.<org.apache.accumulo.master.Master: boolean haveUpgradedZooKeeper> >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : if $z2 != 0
org.apache.accumulo.master.Master.upgradeMetadata : if $z2 != 0 >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : $r9 = new java.lang.IllegalStateException
org.apache.accumulo.master.Master.upgradeMetadata : if $z2 != 0 >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : $r5 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.fate.Fate fate>
org.apache.accumulo.master.Master.upgradeMetadata : $r5 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.fate.Fate fate> >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : if null == $r5
org.apache.accumulo.master.Master.upgradeMetadata : if null == $r5 >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : $r8 = new java.lang.IllegalStateException
org.apache.accumulo.master.Master.upgradeMetadata : if null == $r5 >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : $r6 = new org.apache.accumulo.master.Master$2
org.apache.accumulo.master.Master.upgradeMetadata : $r6 = new org.apache.accumulo.master.Master$2 >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : specialinvoke $r6.<org.apache.accumulo.master.Master$2: void <init>(org.apache.accumulo.master.Master,int)>(r0, i0)
org.apache.accumulo.master.Master.upgradeMetadata : specialinvoke $r6.<org.apache.accumulo.master.Master$2: void <init>(org.apache.accumulo.master.Master,int)>(r0, i0) >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : $r7 = new java.lang.Thread
org.apache.accumulo.master.Master.upgradeMetadata : $r7 = new java.lang.Thread >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6)
org.apache.accumulo.master.Master.upgradeMetadata : specialinvoke $r7.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6) >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : virtualinvoke $r7.<java.lang.Thread: void start()>()
org.apache.accumulo.master.Master.upgradeMetadata : virtualinvoke $r7.<java.lang.Thread: void start()>() >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : goto [?= return]
org.apache.accumulo.master.Master.upgradeMetadata : goto [?= return] >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : return
org.apache.accumulo.master.Master.upgradeMetadata : $r8 = new java.lang.IllegalStateException >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Access to Fate should not have been initialized prior to the Master finishing upgrades. Please save all logs and file a bug.")
org.apache.accumulo.master.Master.upgradeMetadata : specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Access to Fate should not have been initialized prior to the Master finishing upgrades. Please save all logs and file a bug.") >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : throw $r8
org.apache.accumulo.master.Master.upgradeMetadata : $r9 = new java.lang.IllegalStateException >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("We should only attempt to upgrade Accumulo\'s metadata table if we\'ve already upgraded ZooKeeper. Please save all logs and file a bug.")
org.apache.accumulo.master.Master.upgradeMetadata : specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("We should only attempt to upgrade Accumulo\'s metadata table if we\'ve already upgraded ZooKeeper. Please save all logs and file a bug.") >>>>>>>> org.apache.accumulo.master.Master.upgradeMetadata : throw $r9
