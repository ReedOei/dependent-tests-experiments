org.apache.accumulo.master.Master.merges : $r4 = new java.util.ArrayList >>>>>>>> org.apache.accumulo.master.Master.merges : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.apache.accumulo.master.Master.merges : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.accumulo.master.Master.merges : $r5 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.client.Instance getInstance()>()
org.apache.accumulo.master.Master.merges : $r5 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.client.Instance getInstance()>() >>>>>>>> org.apache.accumulo.master.Master.merges : $r6 = staticinvoke <org.apache.accumulo.core.client.impl.Tables: java.util.SortedMap getIdToNameMap(org.apache.accumulo.core.client.Instance)>($r5)
org.apache.accumulo.master.Master.merges : $r6 = staticinvoke <org.apache.accumulo.core.client.impl.Tables: java.util.SortedMap getIdToNameMap(org.apache.accumulo.core.client.Instance)>($r5) >>>>>>>> org.apache.accumulo.master.Master.merges : $r7 = interfaceinvoke $r6.<java.util.SortedMap: java.util.Set keySet()>()
org.apache.accumulo.master.Master.merges : $r7 = interfaceinvoke $r6.<java.util.SortedMap: java.util.Set keySet()>() >>>>>>>> org.apache.accumulo.master.Master.merges : r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.accumulo.master.Master.merges : r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.Master.merges : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.Master.merges : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.Master.merges : if $z0 == 0
org.apache.accumulo.master.Master.merges : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master.merges : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.Master.merges : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master.merges : return $r4
org.apache.accumulo.master.Master.merges : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.Master.merges : r3 = (org.apache.accumulo.core.client.impl.Table$ID) $r8
org.apache.accumulo.master.Master.merges : r3 = (org.apache.accumulo.core.client.impl.Table$ID) $r8 >>>>>>>> org.apache.accumulo.master.Master.merges : $r9 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.server.master.state.MergeInfo getMergeInfo(org.apache.accumulo.core.client.impl.Table$ID)>(r3)
org.apache.accumulo.master.Master.merges : $r9 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.server.master.state.MergeInfo getMergeInfo(org.apache.accumulo.core.client.impl.Table$ID)>(r3) >>>>>>>> org.apache.accumulo.master.Master.merges : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r9)
org.apache.accumulo.master.Master.merges : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.accumulo.master.Master.merges : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.Master.merges : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.Master.merges : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
