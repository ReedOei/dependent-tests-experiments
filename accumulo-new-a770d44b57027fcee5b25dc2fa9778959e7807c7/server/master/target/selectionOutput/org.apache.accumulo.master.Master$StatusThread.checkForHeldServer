org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : r23 = null >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : i6 = 0
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : i6 = 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : i7 = 0
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : i7 = 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r3 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r3 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r4 = virtualinvoke $r3.<org.apache.accumulo.master.Master: org.apache.accumulo.core.conf.AccumuloConfiguration getConfiguration()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r4 = virtualinvoke $r3.<org.apache.accumulo.master.Master: org.apache.accumulo.core.conf.AccumuloConfiguration getConfiguration()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r5 = <org.apache.accumulo.core.conf.Property: org.apache.accumulo.core.conf.Property TSERV_HOLD_TIME_SUICIDE>
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r5 = <org.apache.accumulo.core.conf.Property: org.apache.accumulo.core.conf.Property TSERV_HOLD_TIME_SUICIDE> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : l0 = virtualinvoke $r4.<org.apache.accumulo.core.conf.AccumuloConfiguration: long getTimeInMillis(org.apache.accumulo.core.conf.Property)>($r5)
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : l0 = virtualinvoke $r4.<org.apache.accumulo.core.conf.AccumuloConfiguration: long getTimeInMillis(org.apache.accumulo.core.conf.Property)>($r5) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r6 = interfaceinvoke r1.<java.util.SortedMap: java.util.Set entrySet()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r6 = interfaceinvoke r1.<java.util.SortedMap: java.util.Set entrySet()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : r24 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : r24 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if $z0 == 0
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r14 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if i6 != 1
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if i6 != 1 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if i7 != 1
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if i6 != 1 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : return
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if i7 != 1 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $i1 = interfaceinvoke r1.<java.util.SortedMap: int size()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if i7 != 1 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : return
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $i1 = interfaceinvoke r1.<java.util.SortedMap: int size()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if $i1 <= 1
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if $i1 <= 1 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r7 = <org.apache.accumulo.master.Master: org.slf4j.Logger log>
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if $i1 <= 1 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : return
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r7 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Tablet server {} exceeded maximum hold time: attempting to kill it", r23)
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Tablet server {} exceeded maximum hold time: attempting to kill it", r23) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r8 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r8 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r9 = $r8.<org.apache.accumulo.master.Master: org.apache.accumulo.server.master.LiveTServerSet tserverSet>
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r9 = $r8.<org.apache.accumulo.master.Master: org.apache.accumulo.server.master.LiveTServerSet tserverSet> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : r25 = virtualinvoke $r9.<org.apache.accumulo.server.master.LiveTServerSet: org.apache.accumulo.server.master.LiveTServerSet$TServerConnection getConnection(org.apache.accumulo.server.master.state.TServerInstance)>(r23)
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r9 = $r8.<org.apache.accumulo.master.Master: org.apache.accumulo.server.master.LiveTServerSet tserverSet> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r20 := @caughtexception
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r21 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r22 = virtualinvoke $r20.<org.apache.thrift.TException: java.lang.String getMessage()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r22 = virtualinvoke $r20.<org.apache.thrift.TException: java.lang.String getMessage()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("{}", $r22, $r20)
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("{}", $r22, $r20) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r10 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r10 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r11 = $r10.<org.apache.accumulo.master.Master: org.apache.accumulo.server.master.LiveTServerSet tserverSet>
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r11 = $r10.<org.apache.accumulo.master.Master: org.apache.accumulo.server.master.LiveTServerSet tserverSet> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : virtualinvoke $r11.<org.apache.accumulo.server.master.LiveTServerSet: void remove(org.apache.accumulo.server.master.state.TServerInstance)>(r23)
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : virtualinvoke $r11.<org.apache.accumulo.server.master.LiveTServerSet: void remove(org.apache.accumulo.server.master.state.TServerInstance)>(r23) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : return
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : r25 = virtualinvoke $r9.<org.apache.accumulo.server.master.LiveTServerSet: org.apache.accumulo.server.master.LiveTServerSet$TServerConnection getConnection(org.apache.accumulo.server.master.state.TServerInstance)>(r23) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if r25 == null
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : r25 = virtualinvoke $r9.<org.apache.accumulo.server.master.LiveTServerSet: org.apache.accumulo.server.master.LiveTServerSet$TServerConnection getConnection(org.apache.accumulo.server.master.state.TServerInstance)>(r23) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r20 := @caughtexception
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if r25 == null >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r12 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if r25 == null >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : goto [?= $r10 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>]
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : goto [?= $r10 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>] >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r10 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r12 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r13 = $r12.<org.apache.accumulo.master.Master: org.apache.accumulo.server.zookeeper.ZooLock masterLock>
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r13 = $r12.<org.apache.accumulo.master.Master: org.apache.accumulo.server.zookeeper.ZooLock masterLock> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : virtualinvoke r25.<org.apache.accumulo.server.master.LiveTServerSet$TServerConnection: void fastHalt(org.apache.accumulo.server.zookeeper.ZooLock)>($r13)
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r13 = $r12.<org.apache.accumulo.master.Master: org.apache.accumulo.server.zookeeper.ZooLock masterLock> >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r20 := @caughtexception
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : virtualinvoke r25.<org.apache.accumulo.server.master.LiveTServerSet$TServerConnection: void fastHalt(org.apache.accumulo.server.zookeeper.ZooLock)>($r13) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : goto [?= $r10 = r0.<org.apache.accumulo.master.Master$StatusThread: org.apache.accumulo.master.Master this$0>]
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : virtualinvoke r25.<org.apache.accumulo.server.master.LiveTServerSet$TServerConnection: void fastHalt(org.apache.accumulo.server.zookeeper.ZooLock)>($r13) >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r20 := @caughtexception
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r14 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : r2 = (java.util.Map$Entry) $r14
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : r2 = (java.util.Map$Entry) $r14 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r15 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r15 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r16 = (org.apache.accumulo.core.master.thrift.TabletServerStatus) $r15
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r16 = (org.apache.accumulo.core.master.thrift.TabletServerStatus) $r15 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $l2 = virtualinvoke $r16.<org.apache.accumulo.core.master.thrift.TabletServerStatus: long getHoldTime()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $l2 = virtualinvoke $r16.<org.apache.accumulo.core.master.thrift.TabletServerStatus: long getHoldTime()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $b3 = $l2 cmp 0L
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $b3 = $l2 cmp 0L >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if $b3 <= 0
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if $b3 <= 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : i7 = i7 + 1
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if $b3 <= 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : i7 = i7 + 1 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r17 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r17 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r18 = (org.apache.accumulo.core.master.thrift.TabletServerStatus) $r17
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r18 = (org.apache.accumulo.core.master.thrift.TabletServerStatus) $r17 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $l4 = virtualinvoke $r18.<org.apache.accumulo.core.master.thrift.TabletServerStatus: long getHoldTime()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $l4 = virtualinvoke $r18.<org.apache.accumulo.core.master.thrift.TabletServerStatus: long getHoldTime()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $b5 = $l4 cmp l0
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $b5 = $l4 cmp l0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if $b5 <= 0
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if $b5 <= 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r19 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : if $b5 <= 0 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : $r19 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : r23 = (org.apache.accumulo.server.master.state.TServerInstance) $r19
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : r23 = (org.apache.accumulo.server.master.state.TServerInstance) $r19 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : i6 = i6 + 1
org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : i6 = i6 + 1 >>>>>>>> org.apache.accumulo.master.Master$StatusThread.checkForHeldServer : goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
