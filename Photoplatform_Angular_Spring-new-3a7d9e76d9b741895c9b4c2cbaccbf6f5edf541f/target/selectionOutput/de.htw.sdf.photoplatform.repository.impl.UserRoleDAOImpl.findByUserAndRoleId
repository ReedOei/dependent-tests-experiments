de.htw.sdf.photoplatform.repository.impl.UserRoleDAOImpl.findByUserAndRoleId : r4 = virtualinvoke r0.<de.htw.sdf.photoplatform.repository.impl.UserRoleDAOImpl: javax.persistence.Query createQuery(java.lang.String)>("SELECT DISTINCT(userRole) FROM UserRole userRole LEFT JOIN FETCH userRole.user user LEFT JOIN FETCH userRole.role role WHERE user.id = ?1 AND role.id = ?2") >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserRoleDAOImpl.findByUserAndRoleId : interfaceinvoke r4.<javax.persistence.Query: javax.persistence.Query setParameter(int,java.lang.Object)>(1, r1)
de.htw.sdf.photoplatform.repository.impl.UserRoleDAOImpl.findByUserAndRoleId : interfaceinvoke r4.<javax.persistence.Query: javax.persistence.Query setParameter(int,java.lang.Object)>(1, r1) >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserRoleDAOImpl.findByUserAndRoleId : interfaceinvoke r4.<javax.persistence.Query: javax.persistence.Query setParameter(int,java.lang.Object)>(2, r2)
de.htw.sdf.photoplatform.repository.impl.UserRoleDAOImpl.findByUserAndRoleId : interfaceinvoke r4.<javax.persistence.Query: javax.persistence.Query setParameter(int,java.lang.Object)>(2, r2) >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserRoleDAOImpl.findByUserAndRoleId : $r7 = interfaceinvoke r4.<javax.persistence.Query: java.util.List getResultList()>()
de.htw.sdf.photoplatform.repository.impl.UserRoleDAOImpl.findByUserAndRoleId : $r7 = interfaceinvoke r4.<javax.persistence.Query: java.util.List getResultList()>() >>>>>>>> de.htw.sdf.photoplatform.repository.impl.UserRoleDAOImpl.findByUserAndRoleId : return $r7
